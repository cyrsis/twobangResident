(function(e, a) { for(var i in a) e[i] = a[i]; }(this, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../../../../../private/var/folders/rk/h23x5jcx2mq42cb3nyvj499c0000gn/T/0.7791543999524686.WebWorker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../../../private/var/folders/rk/h23x5jcx2mq42cb3nyvj499c0000gn/T/0.7791543999524686.WebWorker.js":
/*!************************************************************************************************!*\
  !*** /private/var/folders/rk/h23x5jcx2mq42cb3nyvj499c0000gn/T/0.7791543999524686.WebWorker.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_victor_Documents_Dev_twobangResident_node_modules_metaverse_rpc_lib_common_transports_WebWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/metaverse-rpc/lib/common/transports/WebWorker */ \"./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js\");\n\n\nconst imported = __webpack_require__(/*! ./scene.tsx */ \"./scene.tsx\")\n\nif (imported && imported.__esModule && imported['default']) {\n  new imported['default'](Object(_Users_victor_Documents_Dev_twobangResident_node_modules_metaverse_rpc_lib_common_transports_WebWorker__WEBPACK_IMPORTED_MODULE_0__[\"WebWorkerTransport\"])(self))\n}\n\n\n//# sourceURL=webpack:////private/var/folders/rk/h23x5jcx2mq42cb3nyvj499c0000gn/T/0.7791543999524686.WebWorker.js?");

/***/ }),

/***/ "./abi.json":
/*!******************!*\
  !*** ./abi.json ***!
  \******************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, default */
/***/ (function(module) {

eval("module.exports = [{\"anonymous\":false,\"inputs\":[],\"name\":\"contractTerminated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmAgreement\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"paidRent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"agreementConfirmed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"payRent\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"terminateContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rent\",\"type\":\"uint256\"},{\"name\":\"_house\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"createdTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractCreated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHouse\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLandlord\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTenant\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"house\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landlord\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paidrents\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tenant\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}];\n\n//# sourceURL=webpack:///./abi.json?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/bignumber.js/bignumber.js":
/*!************************************************!*\
  !*** ./node_modules/bignumber.js/bignumber.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v7.2.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        decimalSeparator: '.',\r\n        groupSeparator: ',',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        fractionGroupSize: 0\r\n      },\r\n\r\n      // The alphabet used for base conversion.\r\n      // It must be at least 2 characters long, with no '.' or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * n {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of n. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(n, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof BigNumber)) {\r\n\r\n        // Don't throw on constructor call without new (#81).\r\n        // '[BigNumber Error] Constructor call without new: {n}'\r\n        //throw Error(bignumberError + ' Constructor call without new: ' + n);\r\n        return new BigNumber(n, b);\r\n      }\r\n\r\n      if (b == null) {\r\n\r\n        // Duplicate.\r\n        if (n instanceof BigNumber) {\r\n          x.s = n.s;\r\n          x.e = n.e;\r\n          x.c = (n = n.c) ? n.slice() : n;\r\n          return;\r\n        }\r\n\r\n        isNum = typeof n == 'number';\r\n\r\n        if (isNum && n * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / n < 0 ? (n = -n, -1) : 1;\r\n\r\n          // Faster path for integers.\r\n          if (n === ~~n) {\r\n            for (e = 0, i = n; i >= 10; i /= 10, e++);\r\n            x.e = e;\r\n            x.c = [n];\r\n            return;\r\n          }\r\n\r\n          str = n + '';\r\n        } else {\r\n          if (!isNumeric.test(str = n + '')) return parseNumeric(x, str, isNum);\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = n + '';\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(n instanceof BigNumber ? n : str);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        isNum = typeof n == 'number';\r\n\r\n        if (isNum) {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (n * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / n < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + n);\r\n          }\r\n\r\n          // Prevent later check for length on converted number.\r\n          isNum = false;\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, n + '', isNum, b);\r\n          }\r\n        }\r\n\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      str = str.slice(i, ++len);\r\n\r\n      if (str) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (n > MAX_SAFE_INTEGER || n !== mathfloor(n))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * n));\r\n        }\r\n\r\n        e = e - i - 1;\r\n\r\n         // Overflow?\r\n        if (e > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            str = str.slice(i);\r\n            i = LOG_BASE - str.length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *      decimalSeparator       {string}\r\n     *      groupSeparator         {string}\r\n     *      groupSize              {number}\r\n     *      secondaryGroupSize     {number}\r\n     *      fractionGroupSeparator {string}\r\n     *      fractionGroupSize      {number}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (isArray(v)) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (isArray(v)) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character, or contains '.' or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|\\.|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * v {any}\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      return v instanceof BigNumber || v && v._isBigNumber === true || false;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0))\r\n              : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && ne <= TO_EXP_NEG\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var m, n,\r\n        i = 0;\r\n\r\n      if (isArray(args[0])) args = args[0];\r\n      m = new BigNumber(args[0]);\r\n\r\n      for (; ++i < args.length;) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n          x.c = x.e = null;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.c = x.e = x.s = null;\r\n        }\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + n);\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+x.valueOf(), nIsBig ? 2 - isOdd(n) : +n));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        nIsOdd = n % 2;\r\n      }\r\n\r\n      if (nIsNeg) n.s = 1;\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (nIsBig) {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n          if (!n.c[0]) break;\r\n          nIsBig = n.e > 14;\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          n = mathfloor(n / 2);\r\n          if (!n) break;\r\n          nIsOdd = n % 2;\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+x);\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c  ).slice(0, s) === (n =\r\n             coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the FORMAT object (see BigNumber.set).\r\n     *\r\n     * FORMAT = {\r\n     *      decimalSeparator : '.',\r\n     *      groupSeparator : ',',\r\n     *      groupSize : 3,\r\n     *      secondaryGroupSize : 0,\r\n     *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n     *      fractionGroupSize : 0\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFormat = function (dp, rm) {\r\n      var str = this.toFixed(dp, rm);\r\n\r\n      if (this.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +FORMAT.groupSize,\r\n          g2 = +FORMAT.secondaryGroupSize,\r\n          groupSeparator = FORMAT.groupSeparator,\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = this.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n\r\n          for (; i < len; i += g1) {\r\n            intPart += groupSeparator + intDigits.substr(i, g1);\r\n          }\r\n\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + FORMAT.decimalSeparator + ((g2 = +FORMAT.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + FORMAT.fractionGroupSeparator)\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string array representing the value of this BigNumber as a simple fraction with\r\n     * an integer numerator and an integer denominator. The denominator will be a positive\r\n     * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n     * denominator is not specified, the denominator will be the lowest value necessary to\r\n     * represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var arr, d, d0, d1, d2, e, exp, n, n0, n1, q, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + md);\r\n        }\r\n      }\r\n\r\n      if (!xc) return x.toString();\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e *= 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      arr = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n         div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1\r\n          ? [n1.toString(), d1.toString()]\r\n          : [n0.toString(), d0.toString()];\r\n\r\n      MAX_EXP = exp;\r\n      return arr;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +this;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        str = coeffToString(n.c);\r\n\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(str, e)\r\n           : toFixedPoint(str, e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(str, e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      var str,\r\n        n = this,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== (n < 0 ? mathceil(n) : mathfloor(n))) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + n);\r\n    }\r\n  }\r\n\r\n\r\n  function isArray(obj) {\r\n    return Object.prototype.toString.call(obj) == '[object Array]';\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n\n\n//# sourceURL=webpack:///./node_modules/bignumber.js/bignumber.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/crypto-js/aes.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/aes.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/aes.js?");

/***/ }),

/***/ "./node_modules/crypto-js/cipher-core.js":
/*!***********************************************!*\
  !*** ./node_modules/crypto-js/cipher-core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/cipher-core.js?");

/***/ }),

/***/ "./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse {}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/core.js?");

/***/ }),

/***/ "./node_modules/crypto-js/enc-base64.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-js/enc-base64.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/enc-base64.js?");

/***/ }),

/***/ "./node_modules/crypto-js/enc-utf16.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/enc-utf16.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/enc-utf16.js?");

/***/ }),

/***/ "./node_modules/crypto-js/evpkdf.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/evpkdf.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha1 */ \"./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./hmac */ \"./node_modules/crypto-js/hmac.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/evpkdf.js?");

/***/ }),

/***/ "./node_modules/crypto-js/format-hex.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-js/format-hex.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/format-hex.js?");

/***/ }),

/***/ "./node_modules/crypto-js/hmac.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/hmac.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/hmac.js?");

/***/ }),

/***/ "./node_modules/crypto-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/crypto-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"), __webpack_require__(/*! ./lib-typedarrays */ \"./node_modules/crypto-js/lib-typedarrays.js\"), __webpack_require__(/*! ./enc-utf16 */ \"./node_modules/crypto-js/enc-utf16.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./sha1 */ \"./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./sha256 */ \"./node_modules/crypto-js/sha256.js\"), __webpack_require__(/*! ./sha224 */ \"./node_modules/crypto-js/sha224.js\"), __webpack_require__(/*! ./sha512 */ \"./node_modules/crypto-js/sha512.js\"), __webpack_require__(/*! ./sha384 */ \"./node_modules/crypto-js/sha384.js\"), __webpack_require__(/*! ./sha3 */ \"./node_modules/crypto-js/sha3.js\"), __webpack_require__(/*! ./ripemd160 */ \"./node_modules/crypto-js/ripemd160.js\"), __webpack_require__(/*! ./hmac */ \"./node_modules/crypto-js/hmac.js\"), __webpack_require__(/*! ./pbkdf2 */ \"./node_modules/crypto-js/pbkdf2.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"), __webpack_require__(/*! ./mode-cfb */ \"./node_modules/crypto-js/mode-cfb.js\"), __webpack_require__(/*! ./mode-ctr */ \"./node_modules/crypto-js/mode-ctr.js\"), __webpack_require__(/*! ./mode-ctr-gladman */ \"./node_modules/crypto-js/mode-ctr-gladman.js\"), __webpack_require__(/*! ./mode-ofb */ \"./node_modules/crypto-js/mode-ofb.js\"), __webpack_require__(/*! ./mode-ecb */ \"./node_modules/crypto-js/mode-ecb.js\"), __webpack_require__(/*! ./pad-ansix923 */ \"./node_modules/crypto-js/pad-ansix923.js\"), __webpack_require__(/*! ./pad-iso10126 */ \"./node_modules/crypto-js/pad-iso10126.js\"), __webpack_require__(/*! ./pad-iso97971 */ \"./node_modules/crypto-js/pad-iso97971.js\"), __webpack_require__(/*! ./pad-zeropadding */ \"./node_modules/crypto-js/pad-zeropadding.js\"), __webpack_require__(/*! ./pad-nopadding */ \"./node_modules/crypto-js/pad-nopadding.js\"), __webpack_require__(/*! ./format-hex */ \"./node_modules/crypto-js/format-hex.js\"), __webpack_require__(/*! ./aes */ \"./node_modules/crypto-js/aes.js\"), __webpack_require__(/*! ./tripledes */ \"./node_modules/crypto-js/tripledes.js\"), __webpack_require__(/*! ./rc4 */ \"./node_modules/crypto-js/rc4.js\"), __webpack_require__(/*! ./rabbit */ \"./node_modules/crypto-js/rabbit.js\"), __webpack_require__(/*! ./rabbit-legacy */ \"./node_modules/crypto-js/rabbit-legacy.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/index.js?");

/***/ }),

/***/ "./node_modules/crypto-js/lib-typedarrays.js":
/*!***************************************************!*\
  !*** ./node_modules/crypto-js/lib-typedarrays.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/lib-typedarrays.js?");

/***/ }),

/***/ "./node_modules/crypto-js/md5.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/md5.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/md5.js?");

/***/ }),

/***/ "./node_modules/crypto-js/mode-cfb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-cfb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-cfb.js?");

/***/ }),

/***/ "./node_modules/crypto-js/mode-ctr-gladman.js":
/*!****************************************************!*\
  !*** ./node_modules/crypto-js/mode-ctr-gladman.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ctr-gladman.js?");

/***/ }),

/***/ "./node_modules/crypto-js/mode-ctr.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ctr.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ctr.js?");

/***/ }),

/***/ "./node_modules/crypto-js/mode-ecb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ecb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ecb.js?");

/***/ }),

/***/ "./node_modules/crypto-js/mode-ofb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ofb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ofb.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pad-ansix923.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-ansix923.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-ansix923.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pad-iso10126.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-iso10126.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-iso10126.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pad-iso97971.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-iso97971.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-iso97971.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pad-nopadding.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-js/pad-nopadding.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-nopadding.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pad-zeropadding.js":
/*!***************************************************!*\
  !*** ./node_modules/crypto-js/pad-zeropadding.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-zeropadding.js?");

/***/ }),

/***/ "./node_modules/crypto-js/pbkdf2.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/pbkdf2.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha1 */ \"./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./hmac */ \"./node_modules/crypto-js/hmac.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pbkdf2.js?");

/***/ }),

/***/ "./node_modules/crypto-js/rabbit-legacy.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-js/rabbit-legacy.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rabbit-legacy.js?");

/***/ }),

/***/ "./node_modules/crypto-js/rabbit.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/rabbit.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rabbit.js?");

/***/ }),

/***/ "./node_modules/crypto-js/rc4.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/rc4.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rc4.js?");

/***/ }),

/***/ "./node_modules/crypto-js/ripemd160.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/ripemd160.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/ripemd160.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha1.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha1.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha224.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha224.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha256 */ \"./node_modules/crypto-js/sha256.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha224.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha256.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha256.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha256.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha3.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha3.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha3.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha384.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha384.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"), __webpack_require__(/*! ./sha512 */ \"./node_modules/crypto-js/sha512.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha384.js?");

/***/ }),

/***/ "./node_modules/crypto-js/sha512.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha512.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha512.js?");

/***/ }),

/***/ "./node_modules/crypto-js/tripledes.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/tripledes.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"./node_modules/crypto-js/cipher-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/tripledes.js?");

/***/ }),

/***/ "./node_modules/crypto-js/x64-core.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/x64-core.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/x64-core.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/AllSolidityEvents.js":
/*!************************************************************!*\
  !*** ./node_modules/eth-connect/dist/AllSolidityEvents.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formatters = __webpack_require__(/*! ./utils/formatters */ \"./node_modules/eth-connect/dist/utils/formatters.js\");\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst SolidityEvent_1 = __webpack_require__(/*! ./SolidityEvent */ \"./node_modules/eth-connect/dist/SolidityEvent.js\");\nconst Filter_1 = __webpack_require__(/*! ./Filter */ \"./node_modules/eth-connect/dist/Filter.js\");\nclass AllSolidityEvents {\n    constructor(_requestManager, _json, _address) {\n        this._requestManager = _requestManager;\n        this._json = _json;\n        this._address = _address;\n    }\n    encode(options = {}) {\n        let result = {\n            address: this._address\n        };\n        ['fromBlock', 'toBlock']\n            .filter(function (f) {\n            return options[f] !== undefined;\n        })\n            .forEach(function (f) {\n            result[f] = formatters.inputBlockNumberFormatter(options[f]);\n        });\n        return result;\n    }\n    decode(data) {\n        data.data = data.data || '';\n        let eventTopic = utils.isArray(data.topics) && utils.isString(data.topics[0]) ? data.topics[0].slice(2) : '';\n        let match = this._json.filter(function (j) {\n            return eventTopic === utils.sha3(utils.transformToFullName(j));\n        })[0];\n        if (!match) {\n            // cannot find matching event?\n            return formatters.outputLogFormatter(data);\n        }\n        let event = new SolidityEvent_1.SolidityEvent(this._requestManager, match, this._address);\n        return event.decode(data);\n    }\n    async execute(options) {\n        let filterOptions = this.encode(options);\n        let formatter = this.decode.bind(this);\n        return new Filter_1.EthFilter(this._requestManager, filterOptions, formatter);\n    }\n    attachToContract(contract) {\n        let execute = this.execute.bind(this);\n        contract.allEvents = execute;\n    }\n}\nexports.AllSolidityEvents = AllSolidityEvents;\n//# sourceMappingURL=AllSolidityEvents.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/AllSolidityEvents.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/Contract.js":
/*!***************************************************!*\
  !*** ./node_modules/eth-connect/dist/Contract.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SolidityFunction_1 = __webpack_require__(/*! ./SolidityFunction */ \"./node_modules/eth-connect/dist/SolidityFunction.js\");\nconst SolidityEvent_1 = __webpack_require__(/*! ./SolidityEvent */ \"./node_modules/eth-connect/dist/SolidityEvent.js\");\nconst AllSolidityEvents_1 = __webpack_require__(/*! ./AllSolidityEvents */ \"./node_modules/eth-connect/dist/AllSolidityEvents.js\");\n/**\n * Should be called to add functions to contract object\n *\n * @method addFunctionsToContract\n * @param {Contract} contract\n * @param {Array} abi\n */\nfunction addFunctionsToContract(contract) {\n    contract.abi\n        .filter(function (json) {\n        return json.type === 'function';\n    })\n        .map(function (json) {\n        return new SolidityFunction_1.SolidityFunction(contract.requestManager, json, contract.address);\n    })\n        .forEach(function (f) {\n        f.attachToContract(contract);\n    });\n}\n/**\n * Should be called to add events to contract object\n *\n * @method addEventsToContract\n * @param {Contract} contract\n * @param {Array} abi\n */\nfunction addEventsToContract(contract) {\n    let events = contract.abi.filter(function (json) {\n        return json.type === 'event';\n    });\n    let allEvents = new AllSolidityEvents_1.AllSolidityEvents(contract.requestManager, events, contract.address);\n    allEvents.attachToContract(contract);\n    events\n        .map(function (json) {\n        return new SolidityEvent_1.SolidityEvent(contract.requestManager, json, contract.address);\n    })\n        .forEach(function (e) {\n        e.attachToContract(contract);\n    });\n}\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @param {Array} abi\n * @param {Address} contract address\n */\nclass Contract {\n    constructor(requestManager, abi, address) {\n        this.requestManager = requestManager;\n        this.abi = abi;\n        this.address = address;\n        this.events = {};\n        this.transactionHash = null;\n        this.transactionHash = null;\n        this.address = address;\n        this.abi = abi;\n        // this functions are not part of prototype,\n        // because we dont want to spoil the interface\n        addFunctionsToContract(this);\n        addEventsToContract(this);\n    }\n}\nexports.Contract = Contract;\n//# sourceMappingURL=Contract.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/Contract.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/ContractFactory.js":
/*!**********************************************************!*\
  !*** ./node_modules/eth-connect/dist/ContractFactory.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst coder_1 = __webpack_require__(/*! ./solidity/coder */ \"./node_modules/eth-connect/dist/solidity/coder.js\");\nconst Contract_1 = __webpack_require__(/*! ./Contract */ \"./node_modules/eth-connect/dist/Contract.js\");\nconst future_1 = __webpack_require__(/*! ./utils/future */ \"./node_modules/eth-connect/dist/utils/future.js\");\n/**\n * Should be called to check if the contract gets properly deployed on the blockchain.\n *\n * @method checkForContractAddress\n * @param {object} contract\n * @param {Function} callback\n * @returns {Undefined}\n */\nasync function checkForContractAddress(requestManager, txId) {\n    const receiptFuture = future_1.future();\n    let count = 0;\n    const fetcher = () => {\n        count++;\n        // stop watching after 50 blocks (timeout)\n        if (count > 50) {\n            receiptFuture.reject(new Error(\"Contract transaction couldn't be found after 50 blocks\"));\n        }\n        else {\n            requestManager.eth_getTransactionReceipt(txId).then(receipt => {\n                if (receipt && receipt.blockHash) {\n                    receiptFuture.resolve(receipt);\n                }\n                else {\n                    setTimeout(fetcher, 1000);\n                }\n            }, \n            /* istanbul ignore next */\n            error => receiptFuture.reject(error));\n        }\n    };\n    fetcher();\n    const receipt = await receiptFuture;\n    const code = await requestManager.eth_getCode(receipt.contractAddress, 'latest');\n    if (code.length > 3) {\n        return receipt.contractAddress;\n    }\n    /* istanbul ignore next */\n    throw Object.assign(new Error(\"The contract code couldn't be stored, please check your gas amount.\"), {\n        response: code,\n        receipt\n    });\n}\n/**\n * Should be called to encode constructor params\n *\n * @method encodeConstructorParams\n * @param {Array} abi\n * @param {Array} constructor params\n */\nfunction encodeConstructorParams(abi, params) {\n    return (abi\n        .filter(function (json) {\n        return json.type === 'constructor' && json.inputs.length === params.length;\n    })\n        .map(function (json) {\n        return json.inputs.map(function (input) {\n            return input.type;\n        });\n    })\n        .map(function (types) {\n        return coder_1.coder.encodeParams(types, params);\n    })[0] || '');\n}\n/**\n * Should be called to create new ContractFactory instance\n *\n * @method ContractFactory\n * @param {Array} abi\n */\nclass ContractFactory {\n    constructor(requestManager, abi) {\n        this.requestManager = requestManager;\n        this.abi = abi;\n    }\n    async deploy(...args) {\n        // parse arguments\n        let options;\n        let last = args[args.length - 1];\n        if (utils.isObject(last) && !utils.isArray(last)) {\n            options = args.pop();\n        }\n        /* istanbul ignore if */\n        if (!options) {\n            throw new Error('Missing options object');\n        }\n        /* istanbul ignore if */\n        if (!options.data || typeof options.data !== 'string') {\n            throw new Error('Invalid options.data');\n        }\n        if (options.value > 0) {\n            let constructorAbi = this.abi.filter(function (json) {\n                return json.type === 'constructor' && json.inputs.length === args.length;\n            })[0] || {};\n            /* istanbul ignore if */\n            if (!constructorAbi.payable) {\n                throw new Error('Cannot send value to non-payable constructor');\n            }\n        }\n        let bytes = encodeConstructorParams(this.abi, args);\n        options.data += bytes;\n        if (!options.gas) {\n            options.gas = await this.requestManager.eth_estimateGas(options);\n        }\n        // wait for the contract address and check if the code was deployed\n        const hash = await this.requestManager.eth_sendTransaction(options);\n        const address = await checkForContractAddress(this.requestManager, hash);\n        const contract = await this.at(address);\n        contract.transactionHash = hash;\n        return contract;\n    }\n    /**\n     * Should be called to get access to existing contract on a blockchain\n     *\n     * @method at\n     * @param {Address} contract address (required)\n     * @param {Function} callback {optional)\n     * @returns {Contract} returns contract if no callback was passed,\n     * otherwise calls callback function (err, contract)\n     */\n    async at(address) {\n        if (!utils.isAddress(address)) {\n            throw new TypeError(`Invalid address ${JSON.stringify(address)}`);\n        }\n        let contract = new Contract_1.Contract(this.requestManager, this.abi, address);\n        return contract;\n    }\n    /**\n     * Gets the data, which is data to deploy plus constructor params\n     *\n     * @method getData\n     */\n    async getData(...args) {\n        let options = { data: undefined };\n        const last = args[args.length - 1];\n        if (utils.isObject(last) && !utils.isArray(last)) {\n            options = args.pop();\n        }\n        if (!options) {\n            throw new Error('Missing options object');\n        }\n        if (!options.data || typeof options.data !== 'string') {\n            throw new Error('Invalid options.data');\n        }\n        const bytes = encodeConstructorParams(this.abi, args);\n        options.data += bytes;\n        return options.data;\n    }\n}\nexports.ContractFactory = ContractFactory;\n//# sourceMappingURL=ContractFactory.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/ContractFactory.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/Filter.js":
/*!*************************************************!*\
  !*** ./node_modules/eth-connect/dist/Filter.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formatters = __webpack_require__(/*! ./utils/formatters */ \"./node_modules/eth-connect/dist/utils/formatters.js\");\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst config = __webpack_require__(/*! ./utils/config */ \"./node_modules/eth-connect/dist/utils/config.js\");\nconst future_1 = __webpack_require__(/*! ./utils/future */ \"./node_modules/eth-connect/dist/utils/future.js\");\nfunction safeAsync(fn) {\n    return function () {\n        // tslint:disable-next-line:no-console\n        fn().catch($ => console.error($));\n    };\n}\n/**\n * Converts a given topic to a hex string, but also allows null values.\n *\n * @param {Mixed} value\n * @return {string}\n */\nfunction toTopic(value) {\n    if (value === null || typeof value === 'undefined')\n        return null;\n    const strValue = String(value).toString();\n    if (strValue.indexOf('0x') === 0)\n        return strValue;\n    else\n        return utils.fromUtf8(strValue);\n}\nclass AbstractFilter {\n    constructor(requestManager) {\n        this.requestManager = requestManager;\n        this.isStarted = false;\n        this.isDisposed = false;\n        this.filterId = future_1.future();\n        this.callbacks = [];\n        this.stopSemaphore = future_1.future();\n        // stub\n    }\n    async watch(callback) {\n        if (this.isDisposed)\n            throw new Error('The filter was disposed');\n        if (callback) {\n            this.callbacks.push(callback);\n            if (!this.isStarted) {\n                await this.start();\n            }\n        }\n    }\n    async start() {\n        if (this.isDisposed)\n            throw new Error('The filter was disposed');\n        if (this.isStarted)\n            return;\n        this.isStarted = true;\n        try {\n            const id = await this.getNewFilter();\n            if (!id) {\n                throw new Error('Could not create a filter, response: ' + JSON.stringify(id));\n            }\n            this.filterId.resolve(id);\n        }\n        catch (e) {\n            throw e;\n        }\n        this.stopSemaphore = future_1.future();\n        await this.poll();\n    }\n    async stop() {\n        if (!this.isStarted)\n            return;\n        if (this.isDisposed)\n            return;\n        this.isDisposed = true;\n        const filterId = await this.filterId;\n        this.isStarted = false;\n        if (this.stopSemaphore)\n            await this.stopSemaphore;\n        const didStop = await this.uninstall();\n        if (didStop !== true) {\n            throw new Error(`Couldn't stop the eth filter: ${filterId}`);\n        }\n    }\n    /**\n     * Adds the callback and sets up the methods, to iterate over the results.\n     *\n     * @method pollFilter\n     */\n    async poll() {\n        if (this.isStarted) {\n            if (this.callbacks.length) {\n                const result = await this.getChanges();\n                this.callbacks.forEach(cb => {\n                    if (this.formatter) {\n                        result.forEach($ => {\n                            cb(this.formatter($));\n                        });\n                    }\n                    else {\n                        result.forEach($ => cb($));\n                    }\n                });\n            }\n            this.stopSemaphore.resolve(1);\n            if (this.isStarted) {\n                this.stopSemaphore = future_1.future();\n                setTimeout(safeAsync(() => this.poll()), config.ETH_POLLING_TIMEOUT);\n            }\n        }\n        else {\n            this.stopSemaphore.resolve(1);\n        }\n    }\n}\nexports.AbstractFilter = AbstractFilter;\nclass SHHFilter extends AbstractFilter {\n    constructor(requestManager, options) {\n        super(requestManager);\n        this.requestManager = requestManager;\n        this.options = options;\n        this.options = this.options || { topics: [] };\n        this.options.topics = this.options.topics || [];\n        this.options.topics = this.options.topics.map(function (topic) {\n            return toTopic(topic);\n        });\n        this.options = {\n            topics: this.options.topics,\n            to: this.options.to\n        };\n    }\n    async getMessages() {\n        const filterId = await this.filterId;\n        return this.requestManager.shh_getMessages(filterId);\n    }\n    async getNewFilter() {\n        return this.requestManager.shh_newFilter(this.options);\n    }\n    async getChanges() {\n        const filterId = await this.filterId;\n        return this.requestManager.shh_getFilterChanges(filterId);\n    }\n    async uninstall() {\n        const filterId = await this.filterId;\n        return this.requestManager.shh_uninstallFilter(filterId);\n    }\n}\nexports.SHHFilter = SHHFilter;\nclass EthFilter extends AbstractFilter {\n    constructor(requestManager, options, formatter = x => x) {\n        super(requestManager);\n        this.requestManager = requestManager;\n        this.options = options;\n        this.formatter = formatter;\n        this.options = this.options || {};\n        this.options.topics = this.options.topics || [];\n        this.options.topics = this.options.topics.map(function (topic) {\n            return toTopic(topic);\n        });\n        this.options = {\n            topics: this.options.topics,\n            address: this.options.address ? this.options.address : undefined,\n            fromBlock: typeof this.options.fromBlock === 'number' || typeof this.options.fromBlock === 'string'\n                ? formatters.inputBlockNumberFormatter(this.options.fromBlock)\n                : 'latest',\n            toBlock: typeof this.options.toBlock === 'number' || typeof this.options.toBlock === 'string'\n                ? formatters.inputBlockNumberFormatter(this.options.toBlock)\n                : 'latest'\n        };\n    }\n    async getLogs() {\n        if (!this.isStarted) {\n            await this.start();\n        }\n        const filterId = await this.filterId;\n        return this.requestManager.eth_getFilterLogs(filterId);\n    }\n    async getNewFilter() {\n        return this.requestManager.eth_newFilter(this.options);\n    }\n    async getChanges() {\n        const filterId = await this.filterId;\n        return this.requestManager.eth_getFilterChanges(filterId);\n    }\n    async uninstall() {\n        const filterId = await this.filterId;\n        return this.requestManager.eth_uninstallFilter(filterId);\n    }\n}\nexports.EthFilter = EthFilter;\nclass EthPendingTransactionFilter extends EthFilter {\n    constructor(requestManager) {\n        super(requestManager, null, arg => arg);\n    }\n    async getNewFilter() {\n        return this.requestManager.eth_newPendingTransactionFilter();\n    }\n}\nexports.EthPendingTransactionFilter = EthPendingTransactionFilter;\nclass EthBlockFilter extends EthFilter {\n    constructor(requestManager) {\n        super(requestManager, null, arg => arg);\n    }\n    async getNewFilter() {\n        return this.requestManager.eth_newBlockFilter();\n    }\n}\nexports.EthBlockFilter = EthBlockFilter;\n//# sourceMappingURL=Filter.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/Filter.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/Method.js":
/*!*************************************************!*\
  !*** ./node_modules/eth-connect/dist/Method.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors = __webpack_require__(/*! ./utils/errors */ \"./node_modules/eth-connect/dist/utils/errors.js\");\nclass Method {\n    constructor(options) {\n        this.callName = options.callName;\n        this.params = options.params || 0;\n        this.inputFormatter = options.inputFormatter || null;\n        this.outputFormatter = options.outputFormatter || null;\n        this.requestManager = null;\n    }\n    /**\n     * Should be called to check if the number of arguments is correct\n     *\n     * @method validateArgs\n     * @param {Array} arguments\n     * @throws {Error} if it is not\n     */\n    validateArgs(args) {\n        if (args.length !== this.params) {\n            throw errors.InvalidNumberOfRPCParams(this.callName, args.length, this.params);\n        }\n    }\n    /**\n     * Should be called to format input args of method\n     *\n     * @method formatInput\n     * @param {Array}\n     * @return {Array}\n     */\n    formatInput(args) {\n        if (!this.inputFormatter) {\n            return args;\n        }\n        return this.inputFormatter.map(function (formatter, index) {\n            return formatter ? formatter(args[index]) : args[index];\n        });\n    }\n    /**\n     * Should be called to format output(result) of method\n     *\n     * @method formatOutput\n     * @param {object}\n     * @return {object}\n     */\n    formatOutput(result) {\n        return this.outputFormatter && result ? this.outputFormatter(result) : result;\n    }\n    /**\n     * Should create payload from given input args\n     *\n     * @method toPayload\n     * @param {Array} args\n     * @return {object}\n     */\n    toPayload(args) {\n        let params = this.formatInput(args);\n        this.validateArgs(params);\n        return {\n            method: this.callName,\n            params: params\n        };\n    }\n    async execute(requestManager, ...args) {\n        let payload = this.toPayload(args);\n        if (!requestManager)\n            throw new Error('Missing RequestManager in method#exec');\n        const result = await requestManager.sendAsync(payload);\n        return this.formatOutput(result);\n    }\n}\nexports.Method = Method;\n//# sourceMappingURL=Method.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/Method.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/Property.js":
/*!***************************************************!*\
  !*** ./node_modules/eth-connect/dist/Property.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Property {\n    constructor(options) {\n        this.getter = options.getter;\n        this.outputFormatter = options.outputFormatter || null;\n    }\n    /**\n     * Should be called to format output(result) of method\n     *\n     * @method formatOutput\n     * @param {object}\n     * @return {object}\n     */\n    formatOutput(result) {\n        return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n    }\n    async execute(requestManager) {\n        const result = await requestManager.sendAsync({\n            method: this.getter,\n            params: []\n        });\n        return this.formatOutput(result);\n    }\n}\nexports.Property = Property;\n//# sourceMappingURL=Property.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/Property.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/RequestManager.js":
/*!*********************************************************!*\
  !*** ./node_modules/eth-connect/dist/RequestManager.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable:variable-name\nconst jsonRpc = __webpack_require__(/*! ./utils/jsonrpc */ \"./node_modules/eth-connect/dist/utils/jsonrpc.js\");\nconst errors = __webpack_require__(/*! ./utils/errors */ \"./node_modules/eth-connect/dist/utils/errors.js\");\nconst future_1 = __webpack_require__(/*! ./utils/future */ \"./node_modules/eth-connect/dist/utils/future.js\");\nconst eth_1 = __webpack_require__(/*! ./methods/eth */ \"./node_modules/eth-connect/dist/methods/eth.js\");\nconst sleep_1 = __webpack_require__(/*! ./utils/sleep */ \"./node_modules/eth-connect/dist/utils/sleep.js\");\nexports.TRANSACTION_FETCH_DELAY = 2 * 1000;\nexports.TRANSACTION_STATUS = Object.freeze({\n    pending: 'pending',\n    confirmed: 'confirmed',\n    failed: 'failed'\n});\nfunction inject(target, propertyKey) {\n    const method = eth_1.eth[propertyKey];\n    /* istanbul ignore if */\n    if (!method) {\n        throw new Error(`Could not find the method/property named ${propertyKey}`);\n    }\n    Object.defineProperty(target, propertyKey, {\n        value: function () {\n            return method.execute.call(method, this, ...arguments);\n        }\n    });\n}\nexports.inject = inject;\n/**\n * It's responsible for passing messages to providers\n * It's also responsible for polling the ethereum node for incoming messages\n * Default poll timeout is 1 second\n */\nclass RequestManager {\n    constructor(provider) {\n        this.provider = provider;\n        this.requests = new Map();\n        // stub\n    }\n    /**\n     * Should be used to asynchronously send request\n     *\n     * @method sendAsync\n     * @param {object} data\n     * @param {Function} callback\n     */\n    async sendAsync(data) {\n        /* istanbul ignore if */\n        if (!this.provider) {\n            throw errors.InvalidProvider();\n        }\n        let payload = jsonRpc.toPayload(data.method, data.params);\n        const defer = future_1.future();\n        defer.finally(() => this.requests.delete(payload.id));\n        this.requests.set(payload.id, defer);\n        this.provider.sendAsync(payload, function (err, result) {\n            if (err) {\n                defer.reject(err);\n                return;\n            }\n            /* istanbul ignore if */\n            if (!jsonRpc.isValidResponse(result)) {\n                defer.reject(errors.InvalidResponse(result));\n                return;\n            }\n            defer.resolve(result.result);\n        });\n        return defer;\n    }\n    /**\n     * Should be used to set provider of request manager\n     *\n     * @method setProvider\n     * @param {object}\n     */\n    /* istanbul ignore next */\n    setProvider(p) {\n        this.provider = p;\n    }\n    /**\n     * Waits until the transaction finishes. Returns if it was successfull.\n     * Throws if the transaction fails or if it lacks any of the supplied events\n     * @param  {string} txId - Transaction id to watch\n     * @param  {Array<string>|string} events - Events to watch. See {@link txUtils#getLogEvents}\n     * @return {object} data - Current transaction data. See {@link txUtils#getTransaction}\n     */\n    async getConfirmedTransaction(txId) {\n        const tx = await this.waitForCompletion(txId);\n        if (this.isFailure(tx)) {\n            throw new Error(`Transaction \"${txId}\" failed`);\n        }\n        return tx;\n    }\n    /**\n     * Wait until a transaction finishes by either being mined or failing\n     * @param  {string} txId - Transaction id to watch\n     * @param  {number} [retriesOnEmpty] - Number of retries when a transaction status returns empty\n     * @return {Promise<object>} data - Current transaction data. See {@link txUtils#getTransaction}\n     */\n    async waitForCompletion(txId, retriesOnEmpty) {\n        const isDropped = await this.isTxDropped(txId, retriesOnEmpty);\n        if (isDropped) {\n            const tx = await this.getTransactionAndReceipt(txId);\n            return Object.assign({}, tx, { status: exports.TRANSACTION_STATUS.failed });\n        }\n        while (true) {\n            const tx = await this.getTransactionAndReceipt(txId);\n            if (!this.isPending(tx) && tx.receipt) {\n                return Object.assign({}, tx, { status: this.isFailure(tx) ? exports.TRANSACTION_STATUS.failed : exports.TRANSACTION_STATUS.confirmed });\n            }\n            await sleep_1.sleep(exports.TRANSACTION_FETCH_DELAY);\n        }\n    }\n    /*\n     * Wait retryAttemps*TRANSACTION_FETCH_DELAY for a transaction status to be in the mempool\n     * @param  {string} txId - Transaction id to watch\n     * @param  {number} [retryAttemps=15] - Number of retries when a transaction status returns empty\n     * @return {Promise<boolean>}\n     */\n    async isTxDropped(txId, _retryAttemps = 15) {\n        let retryAttemps = _retryAttemps;\n        while (retryAttemps > 0) {\n            const tx = await this.getTransactionAndReceipt(txId);\n            if (tx !== null) {\n                return false;\n            }\n            retryAttemps -= 1;\n            await sleep_1.sleep(exports.TRANSACTION_FETCH_DELAY);\n        }\n        return true;\n    }\n    /**\n     * Get the transaction status and receipt\n     * @param  {string} txId - Transaction id\n     */\n    // prettier-ignore\n    async getTransactionAndReceipt(txId) {\n        const [tx, receipt] = await Promise.all([\n            this.eth_getTransactionByHash(txId),\n            this.eth_getTransactionReceipt(txId)\n        ]);\n        return tx ? Object.assign({}, tx, { receipt }) : null;\n    }\n    /**\n     * Expects the result of getTransaction's geth command and returns true if the transaction is still pending.\n     * It'll also check for a pending status prop against {@link txUtils#TRANSACTION_STATUS}\n     * @param {object} tx - The transaction object\n     * @return boolean\n     */\n    // tslint:disable-next-line:prefer-function-over-method\n    isPending(tx) {\n        return tx && tx.blockNumber === null;\n    }\n    /**\n     * Expects the result of getTransactionRecepeit's geth command and returns true if the transaction failed.\n     * It'll also check for a failed status prop against {@link txUtils#TRANSACTION_STATUS}\n     * @param {object} tx - The transaction object\n     * @return boolean\n     */\n    // tslint:disable-next-line:prefer-function-over-method\n    isFailure(tx) {\n        return tx && (!tx.receipt || tx.receipt.status === 0);\n    }\n}\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"web3_clientVersion\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"web3_sha3\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"net_version\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"net_peerCount\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"net_listening\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_protocolVersion\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_syncing\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_coinbase\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_mining\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_hashrate\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_gasPrice\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_accounts\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_blockNumber\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getBalance\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getStorageAt\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getTransactionCount\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getBlockTransactionCountByHash\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getBlockTransactionCountByNumber\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getUncleCountByBlockHash\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getUncleCountByBlockNumber\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getCode\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_sign\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_sendTransaction\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_sendRawTransaction\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_call\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_estimateGas\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getBlockByHash\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getBlockByNumber\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getTransactionByHash\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getTransactionByBlockHashAndIndex\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getTransactionByBlockNumberAndIndex\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getTransactionReceipt\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getUncleByBlockHashAndIndex\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getUncleByBlockNumberAndIndex\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getCompilers\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_compileLLL\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_compileSolidity\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_compileSerpent\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_newFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_newBlockFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_newPendingTransactionFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_uninstallFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getFilterChanges\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getFilterLogs\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getLogs\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_getWork\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_submitWork\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"eth_submitHashrate\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_post\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_version\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_newIdentity\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_hasIdentity\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_newGroup\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_addToGroup\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_newFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_uninstallFilter\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_getFilterChanges\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"shh_getMessages\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_unlockAccount\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_newAccount\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_listAccounts\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_lockAccount\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_importRawKey\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_sendTransaction\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_sign\", void 0);\n__decorate([\n    inject,\n    __metadata(\"design:type\", Function)\n], RequestManager.prototype, \"personal_ecRecover\", void 0);\nexports.RequestManager = RequestManager;\n//# sourceMappingURL=RequestManager.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/RequestManager.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/SolidityEvent.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/SolidityEvent.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst formatters = __webpack_require__(/*! ./utils/formatters */ \"./node_modules/eth-connect/dist/utils/formatters.js\");\nconst coder_1 = __webpack_require__(/*! ./solidity/coder */ \"./node_modules/eth-connect/dist/solidity/coder.js\");\nconst Filter_1 = __webpack_require__(/*! ./Filter */ \"./node_modules/eth-connect/dist/Filter.js\");\n/**\n * This prototype should be used to create event filters\n */\nclass SolidityEvent {\n    constructor(requestManager, json, address) {\n        this.requestManager = requestManager;\n        this.address = address;\n        this._anonymous = false;\n        this._params = json.inputs;\n        this._name = utils.transformToFullName(json);\n        this._anonymous = json.anonymous;\n    }\n    /**\n     * Should be used to get filtered param types\n     *\n     * @method types\n     * @param {Bool} decide if returned typed should be indexed\n     * @return {Array} array of types\n     */\n    types(indexed) {\n        return this._params\n            .filter(function (i) {\n            return i.indexed === indexed;\n        })\n            .map(function (i) {\n            return i.type;\n        });\n    }\n    /**\n     * Should be used to get event display name\n     *\n     * @method displayName\n     * @return {string} event display name\n     */\n    displayName() {\n        return utils.extractDisplayName(this._name);\n    }\n    /**\n     * Should be used to get event type name\n     *\n     * @method typeName\n     * @return {string} event type name\n     */\n    typeName() {\n        return utils.extractTypeName(this._name) || 'void';\n    }\n    /**\n     * Should be used to get event signature\n     *\n     * @method signature\n     * @return {string} event signature\n     */\n    signature() {\n        return utils.sha3(this._name);\n    }\n    /**\n     * Should be used to encode indexed params and options to one final object\n     *\n     * @method encode\n     * @param {object} indexed\n     * @param {object} options\n     * @return {object} everything combined together and encoded\n     */\n    encode(indexed = {}, options = {}) {\n        let result = {\n            topics: [],\n            address: this.address\n        };\n        ['fromBlock', 'toBlock']\n            .filter(function (f) {\n            return options[f] !== undefined;\n        })\n            .forEach(function (f) {\n            result[f] = formatters.inputBlockNumberFormatter(options[f]);\n        });\n        if (!this._anonymous) {\n            result.topics.push('0x' + this.signature());\n        }\n        let indexedTopics = this._params\n            .filter(function (i) {\n            return i.indexed === true;\n        })\n            .map(function (i) {\n            let value = indexed[i.name];\n            if (value === undefined || value === null) {\n                return null;\n            }\n            if (utils.isArray(value)) {\n                return value.map(function (v) {\n                    return '0x' + coder_1.coder.encodeParam(i.type, v);\n                });\n            }\n            return '0x' + coder_1.coder.encodeParam(i.type, value);\n        });\n        result.topics = result.topics.concat(indexedTopics);\n        return result;\n    }\n    /**\n     * Should be used to decode indexed params and options\n     *\n     * @method decode\n     * @param {object} data\n     * @return {object} result object with decoded indexed && not indexed params\n     */\n    decode(data) {\n        data.data = data.data || '';\n        data.topics = data.topics || [];\n        let argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n        let indexedData = argTopics\n            .map(function (topics) {\n            return topics.slice(2);\n        })\n            .join('');\n        let indexedParams = coder_1.coder.decodeParams(this.types(true), indexedData);\n        let notIndexedData = data.data.slice(2);\n        let notIndexedParams = coder_1.coder.decodeParams(this.types(false), notIndexedData);\n        let result = formatters.outputLogFormatter(data);\n        result.event = this.displayName();\n        result.address = data.address;\n        result.args = this._params.reduce(function (acc, current) {\n            acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n            return acc;\n        }, {});\n        delete result.data;\n        delete result.topics;\n        return result;\n    }\n    /**\n     * Should be used to create new filter object from event\n     *\n     * @method execute\n     * @param {object} indexed\n     * @param {object} options\n     * @return {object} filter object\n     */\n    async execute(indexed, options) {\n        let o = this.encode(indexed, options);\n        let formatter = this.decode.bind(this);\n        return new Filter_1.EthFilter(this.requestManager, o, formatter);\n    }\n    /**\n     * Should be used to attach event to contract object\n     *\n     * @method attachToContract\n     * @param {Contract}\n     */\n    attachToContract(contract) {\n        let execute = this.execute.bind(this);\n        let displayName = this.displayName();\n        if (!contract.events[displayName]) {\n            contract.events[displayName] = execute;\n        }\n        contract.events[displayName][this.typeName()] = this.execute.bind(this, contract);\n    }\n}\nexports.SolidityEvent = SolidityEvent;\n//# sourceMappingURL=SolidityEvent.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/SolidityEvent.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/SolidityFunction.js":
/*!***********************************************************!*\
  !*** ./node_modules/eth-connect/dist/SolidityFunction.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst errors = __webpack_require__(/*! ./utils/errors */ \"./node_modules/eth-connect/dist/utils/errors.js\");\nconst formatters = __webpack_require__(/*! ./utils/formatters */ \"./node_modules/eth-connect/dist/utils/formatters.js\");\nconst coder_1 = __webpack_require__(/*! ./solidity/coder */ \"./node_modules/eth-connect/dist/solidity/coder.js\");\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\nclass SolidityFunction {\n    constructor(requestManager, json, address) {\n        this.requestManager = requestManager;\n        this.json = json;\n        this._inputTypes = json.inputs.map(function (i) {\n            return i.type;\n        });\n        this._outputTypes = json.outputs.map(function (i) {\n            return i.type;\n        });\n        this._constant = json.constant;\n        this._payable = json.payable;\n        this.needsToBeTransaction =\n            ('payable' in json && json.payable) ||\n                ('constant' in json && !json.constant) ||\n                ('stateMutability' in json && json.stateMutability === 'nonpayable');\n        this._name = utils.transformToFullName(json);\n        this._address = address;\n    }\n    extractDefaultBlock(args) {\n        if (args.length > this._inputTypes.length && !utils.isObject(args[args.length - 1])) {\n            return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n        }\n    }\n    /**\n     * Should be called to check if the number of arguments is correct\n     *\n     * @method validateArgs\n     * @param {Array} arguments\n     * @throws {Error} if it is not\n     */\n    validateArgs(args) {\n        if (args.some($ => typeof $ === 'undefined')) {\n            throw new Error('Invalid call, some arguments are undefined');\n        }\n        let inputArgs = args.filter(function (a) {\n            // filter the options object but not arguments that are arrays\n            return !(utils.isObject(a) === true && utils.isArray(a) === false && utils.isBigNumber(a) === false);\n        });\n        if (inputArgs.length !== this._inputTypes.length) {\n            throw errors.InvalidNumberOfSolidityArgs(inputArgs.length, this._inputTypes.length);\n        }\n    }\n    /**\n     * Should be used to create payload from arguments\n     *\n     * @method toPayload\n     * @param {Array} solidity function params\n     * @param {object} optional payload options\n     */\n    toPayload(args) {\n        let options = {\n            to: undefined,\n            data: undefined,\n            value: undefined,\n            from: undefined\n        };\n        if (args.length > this._inputTypes.length && utils.isObject(args[args.length - 1])) {\n            options = args[args.length - 1];\n        }\n        this.validateArgs(args);\n        options.to = this._address;\n        options.data = '0x' + this.signature() + coder_1.coder.encodeParams(this._inputTypes, args);\n        return options;\n    }\n    /**\n     * Should be used to get function signature\n     *\n     * @method signature\n     * @return {string} function signature\n     */\n    signature() {\n        return utils.sha3(this._name).slice(0, 8);\n    }\n    unpackOutput(output) {\n        if (!output) {\n            return;\n        }\n        const encodedOutput = output.length >= 2 ? output.slice(2) : output;\n        let result = coder_1.coder.decodeParams(this._outputTypes, encodedOutput);\n        return result.length === 1 ? result[0] : result;\n    }\n    /**\n     * Calls a contract function or to sendTransaction to solidity function\n     *\n     * @method call\n     * @param {...Object} Contract function arguments\n     * @return {string} output bytes\n     */\n    async execute(requestManager, ...args) {\n        if (!requestManager) {\n            throw new Error(`Cannot call function ${this.displayName()} because there is no requestManager`);\n        }\n        if (this.needsToBeTransaction) {\n            const payload = this.toPayload(args);\n            if (payload.value > 0 && !this._payable) {\n                throw new Error('Cannot send value to non-payable function');\n            }\n            if (!payload.from) {\n                throw new Error('Missing \"from\" in transaction options');\n            }\n            const txHash = await requestManager.eth_sendTransaction(payload);\n            return txHash;\n        }\n        else {\n            const defaultBlock = this.extractDefaultBlock(args);\n            const payload = this.toPayload(args);\n            const output = await requestManager.eth_call(payload, defaultBlock);\n            return this.unpackOutput(output);\n        }\n    }\n    /**\n     * Should be used to estimateGas of solidity function\n     *\n     * @method estimateGas\n     */\n    estimateGas(...args) {\n        let payload = this.toPayload(args);\n        return this.requestManager.eth_estimateGas(payload);\n    }\n    /**\n     * Return the encoded data of the call\n     *\n     * @method getData\n     * @return {string} the encoded data\n     */\n    getData(...args) {\n        let payload = this.toPayload(args);\n        return payload.data;\n    }\n    /**\n     * Should be used to get function display name\n     *\n     * @method displayName\n     * @return {string} display name of the function\n     */\n    displayName() {\n        return utils.extractDisplayName(this._name);\n    }\n    /**\n     * Should be used to get function type name\n     *\n     * @method typeName\n     * @return {string} type name of the function\n     */\n    typeName() {\n        return utils.extractTypeName(this._name) || 'void';\n    }\n    /**\n     * Should be called to attach function to contract\n     *\n     * @method attachToContract\n     * @param {Contract}\n     */\n    attachToContract(contract) {\n        let displayName = this.displayName();\n        const fun = this;\n        const execute = Object.assign(function (...args) {\n            const requestManager = this.requestManager || fun.requestManager;\n            return fun.execute(requestManager, ...args);\n        }, { estimateGas: this.estimateGas.bind(this) });\n        if (!contract[displayName]) {\n            contract[displayName] = execute;\n        }\n        contract[displayName][this.typeName()] = execute;\n    }\n}\nexports.SolidityFunction = SolidityFunction;\n//# sourceMappingURL=SolidityFunction.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/SolidityFunction.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/eth-connect/dist/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst HTTPProvider_1 = __webpack_require__(/*! ./providers/HTTPProvider */ \"./node_modules/eth-connect/dist/providers/HTTPProvider.js\");\nconst WebSocketProvider_1 = __webpack_require__(/*! ./providers/WebSocketProvider */ \"./node_modules/eth-connect/dist/providers/WebSocketProvider.js\");\nconst utils = __webpack_require__(/*! ./utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nexports.utils = utils;\nvar RequestManager_1 = __webpack_require__(/*! ./RequestManager */ \"./node_modules/eth-connect/dist/RequestManager.js\");\nexports.RequestManager = RequestManager_1.RequestManager;\nvar Contract_1 = __webpack_require__(/*! ./Contract */ \"./node_modules/eth-connect/dist/Contract.js\");\nexports.Contract = Contract_1.Contract;\nvar ContractFactory_1 = __webpack_require__(/*! ./ContractFactory */ \"./node_modules/eth-connect/dist/ContractFactory.js\");\nexports.ContractFactory = ContractFactory_1.ContractFactory;\nvar Method_1 = __webpack_require__(/*! ./Method */ \"./node_modules/eth-connect/dist/Method.js\");\nexports.Method = Method_1.Method;\nvar Property_1 = __webpack_require__(/*! ./Property */ \"./node_modules/eth-connect/dist/Property.js\");\nexports.Property = Property_1.Property;\nvar eth_1 = __webpack_require__(/*! ./methods/eth */ \"./node_modules/eth-connect/dist/methods/eth.js\");\nexports.eth = eth_1.eth;\nconst providers = {\n    HTTPProvider: HTTPProvider_1.HTTPProvider,\n    WebSocketProvider: WebSocketProvider_1.WebSocketProvider\n};\nexports.providers = providers;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/index.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/methods/eth.js":
/*!******************************************************!*\
  !*** ./node_modules/eth-connect/dist/methods/eth.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// tslint:disable:variable-name\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formatters = __webpack_require__(/*! ../utils/formatters */ \"./node_modules/eth-connect/dist/utils/formatters.js\");\nconst utils = __webpack_require__(/*! ../utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst Method_1 = __webpack_require__(/*! ../Method */ \"./node_modules/eth-connect/dist/Method.js\");\nconst Property_1 = __webpack_require__(/*! ../Property */ \"./node_modules/eth-connect/dist/Property.js\");\nvar eth;\n(function (eth) {\n    eth.eth_getBalance = new Method_1.Method({\n        callName: 'eth_getBalance',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: formatters.outputBigNumberFormatter\n    });\n    eth.eth_getStorageAt = new Method_1.Method({\n        callName: 'eth_getStorageAt',\n        params: 3,\n        inputFormatter: [formatters.inputAddressFormatter, utils.toHex, formatters.inputDefaultBlockNumberFormatter]\n    });\n    eth.eth_getCode = new Method_1.Method({\n        callName: 'eth_getCode',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n    eth.eth_getBlockByHash = new Method_1.Method({\n        callName: 'eth_getBlockByHash',\n        params: 2,\n        inputFormatter: [\n            formatters.inputBlockNumberFormatter,\n            function (val) {\n                return !!val;\n            }\n        ],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n    eth.eth_getBlockByNumber = new Method_1.Method({\n        callName: 'eth_getBlockByNumber',\n        params: 2,\n        inputFormatter: [\n            formatters.inputBlockNumberFormatter,\n            function (val) {\n                return !!val;\n            }\n        ],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n    eth.eth_getUncleByBlockHashAndIndex = new Method_1.Method({\n        callName: 'eth_getUncleByBlockHashAndIndex',\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n    eth.eth_getUncleByBlockNumberAndIndex = new Method_1.Method({\n        callName: 'eth_getUncleByBlockNumberAndIndex',\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n    eth.eth_getCompilers = new Method_1.Method({\n        callName: 'eth_getCompilers',\n        params: 0,\n        inputFormatter: []\n    });\n    eth.eth_getBlockTransactionCountByHash = new Method_1.Method({\n        callName: 'eth_getBlockTransactionCountByHash',\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_getBlockTransactionCountByNumber = new Method_1.Method({\n        callName: 'eth_getBlockTransactionCountByNumber',\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_getUncleCountByBlockHash = new Method_1.Method({\n        callName: 'eth_getUncleCountByBlockHash',\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_getUncleCountByBlockNumber = new Method_1.Method({\n        callName: 'eth_getUncleCountByBlockNumber',\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_getTransactionByHash = new Method_1.Method({\n        callName: 'eth_getTransactionByHash',\n        params: 1,\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n    eth.eth_getTransactionByBlockHashAndIndex = new Method_1.Method({\n        callName: 'eth_getTransactionByBlockHashAndIndex',\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n    eth.eth_getTransactionByBlockNumberAndIndex = new Method_1.Method({\n        callName: 'eth_getTransactionByBlockNumberAndIndex',\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n    eth.eth_getTransactionReceipt = new Method_1.Method({\n        callName: 'eth_getTransactionReceipt',\n        params: 1,\n        outputFormatter: formatters.outputTransactionReceiptFormatter\n    });\n    eth.eth_getTransactionCount = new Method_1.Method({\n        callName: 'eth_getTransactionCount',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_sendRawTransaction = new Method_1.Method({\n        callName: 'eth_sendRawTransaction',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.web3_sha3 = new Method_1.Method({\n        callName: 'web3_sha3',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.eth_sendTransaction = new Method_1.Method({\n        callName: 'eth_sendTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter]\n    });\n    eth.eth_signTransaction = new Method_1.Method({\n        callName: 'eth_signTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter]\n    });\n    eth.eth_sign = new Method_1.Method({\n        callName: 'eth_sign',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, null]\n    });\n    eth.eth_call = new Method_1.Method({\n        callName: 'eth_call',\n        params: 2,\n        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n    eth.eth_estimateGas = new Method_1.Method({\n        callName: 'eth_estimateGas',\n        params: 1,\n        inputFormatter: [formatters.inputCallFormatter],\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_compileSolidity = new Method_1.Method({\n        callName: 'eth_compileSolidity',\n        params: 1\n    });\n    eth.eth_compileLLL = new Method_1.Method({\n        callName: 'eth_compileLLL',\n        params: 1\n    });\n    eth.eth_compileSerpent = new Method_1.Method({\n        callName: 'eth_compileSerpent',\n        params: 1\n    });\n    eth.eth_submitWork = new Method_1.Method({\n        callName: 'eth_submitWork',\n        params: 3,\n        outputFormatter: utils.toBoolean\n    });\n    eth.eth_getWork = new Method_1.Method({\n        callName: 'eth_getWork',\n        params: 0\n    });\n    eth.eth_coinbase = new Property_1.Property({\n        getter: 'eth_coinbase'\n    });\n    eth.eth_mining = new Property_1.Property({\n        getter: 'eth_mining',\n        outputFormatter: utils.toBoolean\n    });\n    eth.eth_hashrate = new Property_1.Property({\n        getter: 'eth_hashrate',\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_syncing = new Property_1.Property({\n        getter: 'eth_syncing',\n        outputFormatter: formatters.outputSyncingFormatter\n    });\n    eth.eth_gasPrice = new Property_1.Property({\n        getter: 'eth_gasPrice',\n        outputFormatter: formatters.outputBigNumberFormatter\n    });\n    eth.eth_accounts = new Property_1.Property({\n        getter: 'eth_accounts'\n    });\n    eth.eth_blockNumber = new Property_1.Property({\n        getter: 'eth_blockNumber',\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_protocolVersion = new Property_1.Property({\n        getter: 'eth_protocolVersion',\n        outputFormatter: utils.toDecimal\n    });\n    eth.web3_clientVersion = new Property_1.Property({\n        getter: 'web3_clientVersion'\n    });\n    eth.net_version = new Property_1.Property({\n        getter: 'net_version',\n        outputFormatter: utils.toDecimal\n    });\n    eth.shh_version = new Method_1.Method({\n        callName: 'shh_version',\n        params: 0,\n        outputFormatter: utils.toDecimal\n    });\n    eth.shh_info = new Method_1.Method({\n        callName: 'shh_info',\n        params: 0\n    });\n    eth.shh_setMaxMessageSize = new Method_1.Method({\n        callName: 'shh_setMaxMessageSize',\n        params: 1\n    });\n    eth.shh_setMinPoW = new Method_1.Method({\n        callName: 'shh_setMinPoW',\n        params: 1\n    });\n    eth.shh_markTrustedPeer = new Method_1.Method({\n        callName: 'shh_markTrustedPeer',\n        params: 1\n    });\n    eth.shh_newKeyPair = new Method_1.Method({\n        callName: 'shh_newKeyPair',\n        params: 0\n    });\n    eth.shh_addPrivateKey = new Method_1.Method({\n        callName: 'shh_addPrivateKey',\n        params: 1\n    });\n    eth.shh_deleteKeyPair = new Method_1.Method({\n        callName: 'shh_deleteKeyPair',\n        params: 1\n    });\n    eth.shh_hasKeyPair = new Method_1.Method({\n        callName: 'shh_hasKeyPair',\n        params: 1\n    });\n    eth.shh_getPublicKey = new Method_1.Method({\n        callName: 'shh_getPublicKey',\n        params: 1\n    });\n    eth.shh_getPrivateKey = new Method_1.Method({\n        callName: 'shh_getPrivateKey',\n        params: 1\n    });\n    eth.shh_newSymKey = new Method_1.Method({\n        callName: 'shh_newSymKey',\n        params: 0\n    });\n    eth.shh_addSymKey = new Method_1.Method({\n        callName: 'shh_addSymKey',\n        params: 1\n    });\n    eth.shh_generateSymKeyFromPassword = new Method_1.Method({\n        callName: 'shh_generateSymKeyFromPassword',\n        params: 1\n    });\n    eth.shh_hasSymKey = new Method_1.Method({\n        callName: 'shh_hasSymKey',\n        params: 1\n    });\n    eth.shh_getSymKey = new Method_1.Method({\n        callName: 'shh_getSymKey',\n        params: 1\n    });\n    eth.shh_deleteSymKey = new Method_1.Method({\n        callName: 'shh_deleteSymKey',\n        params: 1\n    });\n    // subscribe and unsubscribe missing\n    eth.shh_post = new Method_1.Method({\n        callName: 'shh_post',\n        params: 1,\n        inputFormatter: [null],\n        outputFormatter: utils.toBoolean\n    });\n    eth.personal_newAccount = new Method_1.Method({\n        callName: 'personal_newAccount',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.personal_importRawKey = new Method_1.Method({\n        callName: 'personal_importRawKey',\n        params: 2\n    });\n    eth.personal_sign = new Method_1.Method({\n        callName: 'personal_sign',\n        params: 3,\n        inputFormatter: [null, formatters.inputAddressFormatter, null]\n    });\n    eth.personal_ecRecover = new Method_1.Method({\n        callName: 'personal_ecRecover',\n        params: 2\n    });\n    eth.personal_unlockAccount = new Method_1.Method({\n        callName: 'personal_unlockAccount',\n        params: 3,\n        inputFormatter: [formatters.inputAddressFormatter, null, utils.toNullDecimal],\n        outputFormatter: utils.toBoolean\n    });\n    eth.personal_sendTransaction = new Method_1.Method({\n        callName: 'personal_sendTransaction',\n        params: 2,\n        inputFormatter: [formatters.inputTransactionFormatter, null]\n    });\n    eth.personal_lockAccount = new Method_1.Method({\n        callName: 'personal_lockAccount',\n        params: 1,\n        inputFormatter: [formatters.inputAddressFormatter],\n        outputFormatter: utils.toBoolean\n    });\n    eth.personal_listAccounts = new Property_1.Property({\n        getter: 'personal_listAccounts'\n    });\n    eth.net_listening = new Property_1.Property({\n        getter: 'net_listening',\n        outputFormatter: utils.toBoolean\n    });\n    eth.net_peerCount = new Property_1.Property({\n        getter: 'net_peerCount',\n        outputFormatter: utils.toDecimal\n    });\n    eth.eth_newFilter = new Method_1.Method({\n        callName: 'eth_newFilter',\n        params: 1,\n        outputFormatter: utils.toHex\n    });\n    eth.eth_getLogs = new Method_1.Method({\n        callName: 'eth_getLogs',\n        params: 1,\n        inputFormatter: [utils.toHex]\n    });\n    eth.eth_newBlockFilter = new Method_1.Method({\n        callName: 'eth_newBlockFilter',\n        params: 0,\n        outputFormatter: utils.toHex\n    });\n    eth.eth_newPendingTransactionFilter = new Method_1.Method({\n        callName: 'eth_newPendingTransactionFilter',\n        params: 0,\n        outputFormatter: utils.toHex\n    });\n    eth.eth_uninstallFilter = new Method_1.Method({\n        callName: 'eth_uninstallFilter',\n        params: 1,\n        inputFormatter: [utils.toHex],\n        outputFormatter: utils.toBoolean\n    });\n    eth.eth_getFilterLogs = new Method_1.Method({\n        callName: 'eth_getFilterLogs',\n        params: 1,\n        inputFormatter: [utils.toHex]\n    });\n    eth.eth_getFilterChanges = new Method_1.Method({\n        callName: 'eth_getFilterChanges',\n        params: 1,\n        inputFormatter: [utils.toHex]\n    });\n    eth.eth_submitHashrate = new Method_1.Method({\n        callName: 'eth_submitHashrate',\n        params: 2,\n        outputFormatter: utils.toBoolean\n    });\n    eth.shh_newIdentity = new Method_1.Method({\n        callName: 'shh_newIdentity',\n        params: 0\n    });\n    eth.shh_hasIdentity = new Method_1.Method({\n        callName: 'shh_hasIdentity',\n        params: 1,\n        outputFormatter: utils.toBoolean\n    });\n    eth.shh_newGroup = new Method_1.Method({\n        callName: 'shh_newGroup',\n        params: 0\n    });\n    eth.shh_addToGroup = new Method_1.Method({\n        callName: 'shh_addToGroup',\n        params: 1,\n        outputFormatter: utils.toBoolean\n    });\n    eth.shh_newFilter = new Method_1.Method({\n        callName: 'shh_newFilter',\n        params: 1,\n        outputFormatter: utils.toHex\n    });\n    eth.shh_uninstallFilter = new Method_1.Method({\n        callName: 'shh_uninstallFilter',\n        params: 1,\n        outputFormatter: utils.toBoolean\n    });\n    eth.shh_newMessageFilter = new Method_1.Method({\n        callName: 'shh_newMessageFilter',\n        params: 1\n    });\n    eth.shh_deleteMessageFilter = new Method_1.Method({\n        callName: 'shh_deleteMessageFilter',\n        params: 1\n    });\n    eth.shh_getLogs = new Method_1.Method({\n        callName: 'shh_getLogs',\n        params: 1\n    });\n    eth.shh_getFilterMessages = new Method_1.Method({\n        callName: 'shh_getFilterMessages',\n        params: 1\n    });\n    eth.shh_getFilterChanges = new Method_1.Method({\n        callName: 'shh_getFilterChanges',\n        params: 1\n    });\n    eth.shh_getMessages = new Method_1.Method({\n        callName: 'shh_getMessages',\n        params: 1\n    });\n    eth.bzz_blockNetworkRead = new Method_1.Method({\n        callName: 'bzz_blockNetworkRead',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.bzz_syncEnabled = new Method_1.Method({\n        callName: 'bzz_syncEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.bzz_swapEnabled = new Method_1.Method({\n        callName: 'bzz_swapEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.bzz_download = new Method_1.Method({\n        callName: 'bzz_download',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n    eth.bzz_upload = new Method_1.Method({\n        callName: 'bzz_upload',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n    eth.bzz_retrieve = new Method_1.Method({\n        callName: 'bzz_retrieve',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.bzz_store = new Method_1.Method({\n        callName: 'bzz_store',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n    eth.bzz_get = new Method_1.Method({\n        callName: 'bzz_get',\n        params: 1,\n        inputFormatter: [null]\n    });\n    eth.bzz_put = new Method_1.Method({\n        callName: 'bzz_put',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n    eth.bzz_modify = new Method_1.Method({\n        callName: 'bzz_modify',\n        params: 4,\n        inputFormatter: [null, null, null, null]\n    });\n    eth.bzz_hive = new Property_1.Property({\n        getter: 'bzz_hive'\n    });\n    eth.bzz_info = new Property_1.Property({\n        getter: 'bzz_info'\n    });\n})(eth = exports.eth || (exports.eth = {}));\n//# sourceMappingURL=eth.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/methods/eth.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/providers/HTTPProvider.js":
/*!*****************************************************************!*\
  !*** ./node_modules/eth-connect/dist/providers/HTTPProvider.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ./common */ \"./node_modules/eth-connect/dist/providers/common.js\");\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nclass HTTPProvider {\n    constructor(host, options = {}) {\n        this.host = host;\n        this.options = options;\n        this.debug = false;\n        this.host = host || 'http://localhost:8545';\n    }\n    /* istanbul ignore next */\n    // tslint:disable-next-line:prefer-function-over-method\n    send() {\n        /* istanbul ignore next */\n        throw new Error('Sync requests are deprecated');\n    }\n    /**\n     * Should be used to make async request\n     *\n     * @method send\n     * @param {Object} payload\n     * @param {Function} callback triggered on end with (err, result)\n     */\n    sendAsync(payload, callback) {\n        try {\n            let toSend = null;\n            if (payload instanceof Array) {\n                toSend = payload.map($ => common_1.toRPC($));\n            }\n            else {\n                toSend = common_1.toRPC(payload);\n            }\n            /* istanbul ignore if */\n            if (typeof fetch === 'undefined') {\n                throw new Error('There is no global fetch object. Please install and import isomorphic-fetch');\n            }\n            const params = {\n                body: JSON.stringify(toSend),\n                method: 'POST',\n                // mode: 'cors',\n                headers: Object.assign({}, this.options.headers, { 'Content-Type': 'application/json' })\n            };\n            /* istanbul ignore if */\n            // tslint:disable-next-line:no-console\n            if (this.debug)\n                console.log('SEND >> ' + params.body);\n            fetch(this.host, params).then(async ($) => {\n                if (!$.ok) {\n                    /* istanbul ignore if */\n                    // tslint:disable-next-line:no-console\n                    if (this.debug)\n                        console.log('ERR << ' + JSON.stringify($));\n                    callback(new Error('External error. response code: ' + $.status));\n                }\n                else {\n                    const json = await $.json();\n                    /* istanbul ignore if */\n                    // tslint:disable-next-line:no-console\n                    if (this.debug)\n                        console.log('RECV << ' + JSON.stringify(json));\n                    if (json.error) {\n                        callback(json);\n                    }\n                    else {\n                        callback(null, json);\n                    }\n                }\n            }, err => {\n                /* istanbul ignore if */\n                // tslint:disable-next-line:no-console\n                if (this.debug)\n                    console.log('ERR << ' + JSON.stringify(err));\n                callback(err);\n            });\n        }\n        catch (e) {\n            /* istanbul ignore if */\n            // tslint:disable-next-line:no-console\n            if (this.debug)\n                console.log('ERR << ' + JSON.stringify(e));\n            callback(e);\n        }\n    }\n}\nexports.HTTPProvider = HTTPProvider;\n//# sourceMappingURL=HTTPProvider.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/providers/HTTPProvider.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/providers/WebSocketProvider.js":
/*!**********************************************************************!*\
  !*** ./node_modules/eth-connect/dist/providers/WebSocketProvider.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ./common */ \"./node_modules/eth-connect/dist/providers/common.js\");\nconst future_1 = __webpack_require__(/*! ../utils/future */ \"./node_modules/eth-connect/dist/utils/future.js\");\nclass WebSocketProvider {\n    constructor(url, options = {}) {\n        this.url = url;\n        this.options = options;\n        this.isDisposed = false;\n        this.responseCallbacks = new Map();\n        this.notificationCallbacks = new Set();\n        this.debug = false;\n        this.lastChunk = '';\n        this.connect();\n    }\n    dispose() {\n        this.isDisposed = true;\n        // tslint:disable-next-line:no-floating-promises\n        this.connection.then($ => $.close());\n    }\n    /* istanbul ignore next */\n    // tslint:disable-next-line:prefer-function-over-method\n    send() {\n        /* istanbul ignore next */\n        throw new Error('Sync requests are deprecated');\n    }\n    sendAsync(payload, callback) {\n        const toSend = [];\n        let didFinish;\n        if (payload instanceof Array) {\n            didFinish = Promise.all(payload.map($ => {\n                const defer = future_1.future();\n                try {\n                    const message = common_1.toRPC($);\n                    toSend.push(message);\n                    this.responseCallbacks.set(message.id, defer);\n                }\n                catch (e) {\n                    defer.reject(e);\n                }\n                return defer;\n            }));\n        }\n        else {\n            const defer = future_1.future();\n            try {\n                const message = common_1.toRPC(payload);\n                toSend.push(message);\n                this.responseCallbacks.set(message.id, defer);\n            }\n            catch (e) {\n                defer.reject(e);\n            }\n            didFinish = defer;\n        }\n        didFinish.then($ => callback(null, $), err => callback(err));\n        this.connection.then(ws => {\n            toSend.forEach($ => {\n                const s = JSON.stringify($);\n                /* istanbul ignore if */\n                // tslint:disable-next-line:no-console\n                if (this.debug)\n                    console.log('SEND >> ' + s);\n                ws.send(s);\n            });\n        }, err => {\n            callback(err);\n        });\n    }\n    /**\n     * Will parse the response and make an array out of it.\n     * @method _parseResponse\n     * @param {String} data\n     */\n    parseResponse(data) {\n        let returnValues = [];\n        // DE-CHUNKER\n        let dechunkedData = data\n            .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n            .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n            .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n            .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n            .split('|--|');\n        dechunkedData.forEach(chunk => {\n            let data = chunk;\n            // prepend the last chunk\n            if (this.lastChunk) {\n                data = this.lastChunk + data;\n            }\n            let result = null;\n            try {\n                result = JSON.parse(data);\n            }\n            catch (e) {\n                this.lastChunk = data;\n                // start timeout to cancel all requests\n                clearTimeout(this.lastChunkTimeout);\n                this.lastChunkTimeout = setTimeout(() => {\n                    this.timeout();\n                }, 1000 * 15);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = null;\n            if (result)\n                returnValues.push(result);\n        });\n        return returnValues;\n    }\n    processMessage(message) {\n        if ('id' in message) {\n            const id = message.id;\n            const defer = this.responseCallbacks.get(id);\n            if (!defer) {\n                // tslint:disable-next-line:no-console\n                console.error('Error: Received a response for an unknown request', message);\n                return;\n            }\n            this.responseCallbacks.delete(id);\n            if ('error' in message) {\n                defer.reject(Object.assign(new Error(message.error.message || message.error), message.error));\n            }\n            else if ('result' in message) {\n                defer.resolve(message);\n            }\n        }\n        else {\n            this.notificationCallbacks.forEach($ => $(null, message));\n        }\n    }\n    /**\n     * Timeout all requests when the end/error event is fired\n     * @method _timeout\n     */\n    timeout() {\n        if (!this.connection || !this.connection.isPending) {\n            this.connection = future_1.future();\n        }\n        const timeoutError = new Error('Connection timeout');\n        this.responseCallbacks.forEach($ => $.reject(timeoutError));\n        this.responseCallbacks.clear();\n        // reset all requests and callbacks\n        if (!this.isDisposed) {\n            this.connect();\n        }\n    }\n    connect() {\n        if (this.connection && !this.connection.isPending) {\n            // tslint:disable-next-line\n            this.connection.then($ => $.close());\n        }\n        if (!this.connection || !this.connection.isPending) {\n            this.connection = future_1.future();\n        }\n        this.lastChunk = '';\n        let ctor = this.options.WebSocketConstructor || (typeof WebSocket !== 'undefined' ? WebSocket : void 0);\n        if (!ctor) {\n            throw new Error('Please provide a WebSocketConstructor');\n        }\n        const connection = new ctor(this.url, this.options.protocol);\n        connection.onopen = () => {\n            this.connection.resolve(connection);\n        };\n        connection.onerror = () => {\n            this.timeout();\n        };\n        connection.onclose = () => {\n            this.timeout();\n        };\n        // LISTEN FOR CONNECTION RESPONSES\n        connection.onmessage = e => {\n            let data = typeof e.data === 'string' ? e.data : '';\n            /* istanbul ignore if */\n            // tslint:disable-next-line:no-console\n            if (this.debug)\n                console.log('RECV << ' + e.data);\n            this.parseResponse(data).forEach(result => {\n                // get the id which matches the returned id\n                if (result instanceof Array) {\n                    result.forEach($ => this.processMessage($));\n                }\n                else {\n                    this.processMessage(result);\n                }\n            });\n        };\n    }\n}\nexports.WebSocketProvider = WebSocketProvider;\nexports.default = WebSocketProvider;\n//# sourceMappingURL=WebSocketProvider.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/providers/WebSocketProvider.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/providers/common.js":
/*!***********************************************************!*\
  !*** ./node_modules/eth-connect/dist/providers/common.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toRPC(message) {\n    message.jsonrpc = '2.0';\n    if (!message.id || typeof message.id !== 'number' || Math.floor(message.id) !== message.id) {\n        throw new Error(`Invalid RPC message(invalid id) message: ${JSON.stringify(message)}`);\n    }\n    if (!message.method || typeof message.method !== 'string' || message.method.trim().length === 0) {\n        throw new Error(`Invalid RPC message(invalid method) message: ${JSON.stringify(message)}`);\n    }\n    if (!message.params || typeof message.params !== 'object') {\n        throw new Error(`Invalid RPC message(invalid params) message: ${JSON.stringify(message)}`);\n    }\n    return message;\n}\nexports.toRPC = toRPC;\n//# sourceMappingURL=common.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/providers/common.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/address.js":
/*!***********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/address.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\nclass SolidityTypeAddress extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputInt,\n            outputFormatter: f.formatOutputAddress\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/address(\\[([0-9]*)\\])?/);\n    }\n}\nexports.SolidityTypeAddress = SolidityTypeAddress;\n//# sourceMappingURL=address.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/address.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/bool.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/bool.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeBool is a prootype that represents bool type\n * It matches:\n * bool\n * bool[]\n * bool[4]\n * bool[][]\n * bool[3][]\n * bool[][6][], ...\n */\nclass SolidityTypeBool extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputBool,\n            outputFormatter: f.formatOutputBool\n        });\n    }\n    isType(name) {\n        return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n    }\n}\nexports.SolidityTypeBool = SolidityTypeBool;\n//# sourceMappingURL=bool.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/bool.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/bytes.js":
/*!*********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/bytes.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeBytes is a prototype that represents the bytes type.\n * It matches:\n * bytes\n * bytes[]\n * bytes[4]\n * bytes[][]\n * bytes[3][]\n * bytes[][6][], ...\n * bytes32\n * bytes8[4]\n * bytes[3][]\n */\nclass SolidityTypeBytes extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputBytes,\n            outputFormatter: f.formatOutputBytes\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\n    }\n}\nexports.SolidityTypeBytes = SolidityTypeBytes;\n//# sourceMappingURL=bytes.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/bytes.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/coder.js":
/*!*********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/coder.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formatter = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst address_1 = __webpack_require__(/*! ./address */ \"./node_modules/eth-connect/dist/solidity/address.js\");\nconst bool_1 = __webpack_require__(/*! ./bool */ \"./node_modules/eth-connect/dist/solidity/bool.js\");\nconst int_1 = __webpack_require__(/*! ./int */ \"./node_modules/eth-connect/dist/solidity/int.js\");\nconst uint_1 = __webpack_require__(/*! ./uint */ \"./node_modules/eth-connect/dist/solidity/uint.js\");\nconst dynamicbytes_1 = __webpack_require__(/*! ./dynamicbytes */ \"./node_modules/eth-connect/dist/solidity/dynamicbytes.js\");\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/eth-connect/dist/solidity/string.js\");\nconst real_1 = __webpack_require__(/*! ./real */ \"./node_modules/eth-connect/dist/solidity/real.js\");\nconst ureal_1 = __webpack_require__(/*! ./ureal */ \"./node_modules/eth-connect/dist/solidity/ureal.js\");\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/eth-connect/dist/solidity/bytes.js\");\nfunction isDynamic(solidityType, type) {\n    return solidityType.isDynamicType(type) || solidityType.isDynamicArray(type);\n}\n/**\n * SolidityCoder prototype should be used to encode/decode solidity params of any type\n */\nclass SolidityCoder {\n    constructor(types) {\n        this._types = types;\n    }\n    /**\n     * This method should be used to transform type to SolidityType\n     *\n     * @method _requireType\n     * @param {string} type\n     * @returns {SolidityType}\n     * @throws {Error} throws if no matching type is found\n     */\n    _requireType(type) {\n        let solidityType = this._types.filter(function (t) {\n            return t.isType(type);\n        })[0];\n        if (!solidityType) {\n            throw Error('invalid solidity type!: ' + type);\n        }\n        return solidityType;\n    }\n    /**\n     * Should be used to encode plain param\n     *\n     * @method encodeParam\n     * @param {string} type\n     * @param {object} plain param\n     * @return {string} encoded plain param\n     */\n    encodeParam(type, param) {\n        return this.encodeParams([type], [param]);\n    }\n    /**\n     * Should be used to encode list of params\n     *\n     * @method encodeParams\n     * @param {Array} types\n     * @param {Array} params\n     * @return {string} encoded list of params\n     */\n    encodeParams(types, params) {\n        let solidityTypes = this.getSolidityTypes(types);\n        let encodeds = solidityTypes.map(function (solidityType, index) {\n            return solidityType.encode(params[index], types[index]);\n        });\n        let dynamicOffset = solidityTypes.reduce(function (acc, solidityType, index) {\n            let staticPartLength = solidityType.staticPartLength(types[index]);\n            let roundedStaticPartLength = Math.floor((staticPartLength + 31) / 32) * 32;\n            return acc + (isDynamic(solidityTypes[index], types[index]) ? 32 : roundedStaticPartLength);\n        }, 0);\n        let result = this.encodeMultiWithOffset(types, solidityTypes, encodeds, dynamicOffset);\n        return result;\n    }\n    encodeMultiWithOffset(types, solidityTypes, encodeds, _dynamicOffset) {\n        let dynamicOffset = _dynamicOffset;\n        let result = '';\n        types.forEach((_, i) => {\n            if (isDynamic(solidityTypes[i], types[i])) {\n                result += formatter.formatInputInt(dynamicOffset).encode();\n                let e = this.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n                dynamicOffset += e.length / 2;\n            }\n            else {\n                // don't add length to dynamicOffset. it's already counted\n                result += this.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n            }\n            // TODO: figure out nested arrays\n        });\n        types.forEach((_, i) => {\n            if (isDynamic(solidityTypes[i], types[i])) {\n                let e = this.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n                dynamicOffset += e.length / 2;\n                result += e;\n            }\n        });\n        return result;\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    encodeWithOffset(type, solidityType, encoded, offset) {\n        /* jshint maxcomplexity: 17 */\n        /* jshint maxdepth: 5 */\n        let encodingMode = { dynamic: 1, static: 2, other: 3 };\n        let mode = solidityType.isDynamicArray(type)\n            ? encodingMode.dynamic\n            : solidityType.isStaticArray(type)\n                ? encodingMode.static\n                : encodingMode.other;\n        if (mode !== encodingMode.other) {\n            let nestedName = solidityType.nestedName(type);\n            let nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n            let result = mode === encodingMode.dynamic ? encoded[0] : '';\n            if (solidityType.isDynamicArray(nestedName)) {\n                let previousLength = mode === encodingMode.dynamic ? 2 : 0;\n                for (let i = 0; i < encoded.length; i++) {\n                    // calculate length of previous item\n                    if (mode === encodingMode.dynamic) {\n                        previousLength += +encoded[i - 1][0] || 0;\n                    }\n                    else if (mode === encodingMode.static) {\n                        previousLength += +(encoded[i - 1] || [])[0] || 0;\n                    }\n                    result += formatter.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n                }\n            }\n            let len = mode === encodingMode.dynamic ? encoded.length - 1 : encoded.length;\n            for (let c = 0; c < len; c++) {\n                let additionalOffset = result / 2;\n                if (mode === encodingMode.dynamic) {\n                    result += this.encodeWithOffset(nestedName, solidityType, encoded[c + 1], offset + additionalOffset);\n                }\n                else if (mode === encodingMode.static) {\n                    result += this.encodeWithOffset(nestedName, solidityType, encoded[c], offset + additionalOffset);\n                }\n            }\n            return result;\n        }\n        return encoded;\n    }\n    /**\n     * Should be used to decode bytes to plain param\n     *\n     * @method decodeParam\n     * @param {string} type\n     * @param {string} bytes\n     * @return {object} plain param\n     */\n    decodeParam(type, bytes) {\n        return this.decodeParams([type], bytes)[0];\n    }\n    /**\n     * Should be used to decode list of params\n     *\n     * @method decodeParam\n     * @param {Array} types\n     * @param {string} bytes\n     * @return {Array} array of plain params\n     */\n    decodeParams(types, bytes) {\n        let solidityTypes = this.getSolidityTypes(types);\n        let offsets = this.getOffsets(types, solidityTypes);\n        return solidityTypes.map(function (solidityType, index) {\n            return solidityType.decode(bytes, offsets[index], types[index]);\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    getOffsets(types, solidityTypes) {\n        let lengths = solidityTypes.map(function (solidityType, index) {\n            return solidityType.staticPartLength(types[index]);\n        });\n        for (let i = 1; i < lengths.length; i++) {\n            // sum with length of previous element\n            lengths[i] += lengths[i - 1];\n        }\n        return lengths.map(function (length, index) {\n            // remove the current length, so the length is sum of previous elements\n            let staticPartLength = solidityTypes[index].staticPartLength(types[index]);\n            return length - staticPartLength;\n        });\n    }\n    getSolidityTypes(types) {\n        return types.map(type => this._requireType(type));\n    }\n}\nexports.SolidityCoder = SolidityCoder;\nexports.coder = new SolidityCoder([\n    new address_1.SolidityTypeAddress(),\n    new bool_1.SolidityTypeBool(),\n    new int_1.SolidityTypeInt(),\n    new uint_1.SolidityTypeUInt(),\n    new dynamicbytes_1.SolidityTypeDynamicBytes(),\n    new bytes_1.SolidityTypeBytes(),\n    new string_1.SolidityTypeString(),\n    new real_1.SolidityTypeReal(),\n    new ureal_1.SolidityTypeUReal()\n]);\n//# sourceMappingURL=coder.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/coder.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/dynamicbytes.js":
/*!****************************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/dynamicbytes.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\nclass SolidityTypeDynamicBytes extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputDynamicBytes,\n            outputFormatter: f.formatOutputDynamicBytes\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^bytes(\\[([0-9]*)\\])*$/);\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isDynamicType() {\n        return true;\n    }\n}\nexports.SolidityTypeDynamicBytes = SolidityTypeDynamicBytes;\n//# sourceMappingURL=dynamicbytes.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/dynamicbytes.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/formatters.js":
/*!**************************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/formatters.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\nconst utils = __webpack_require__(/*! ../utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst config = __webpack_require__(/*! ../utils/config */ \"./node_modules/eth-connect/dist/utils/config.js\");\nconst param_1 = __webpack_require__(/*! ./param */ \"./node_modules/eth-connect/dist/solidity/param.js\");\n/**\n * Formats input value to byte representation of int\n * If value is negative, return it's two's complement\n * If the value is floating point, round it down\n *\n * @method formatInputInt\n * @param {string|number|BigNumber} value that needs to be formatted\n * @returns {SolidityParam}\n */\nfunction formatInputInt(value) {\n    bignumber_js_1.BigNumber.config(config.ETH_BIGNUMBER_ROUNDING_MODE);\n    let result = utils.padLeft(utils.toTwosComplement(value).toString(16), 64);\n    return new param_1.SolidityParam(result);\n}\nexports.formatInputInt = formatInputInt;\n/**\n * Formats input bytes\n *\n * @method formatInputBytes\n * @param {string}\n * @returns {SolidityParam}\n */\nfunction formatInputBytes(value) {\n    let result = utils.toHex(value).substr(2);\n    let l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new param_1.SolidityParam(result);\n}\nexports.formatInputBytes = formatInputBytes;\n/**\n * Formats input bytes\n *\n * @method formatDynamicInputBytes\n * @param {string}\n * @returns {SolidityParam}\n */\nfunction formatInputDynamicBytes(value) {\n    let result = utils.toHex(value).substr(2);\n    let length = result.length / 2;\n    let l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new param_1.SolidityParam(formatInputInt(length).value + result);\n}\nexports.formatInputDynamicBytes = formatInputDynamicBytes;\n/**\n * Formats input value to byte representation of string\n *\n * @method formatInputString\n * @param {string}\n * @returns {SolidityParam}\n */\nfunction formatInputString(value) {\n    let result = utils.fromUtf8(value).substr(2);\n    let length = result.length / 2;\n    let l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new param_1.SolidityParam(formatInputInt(length).value + result);\n}\nexports.formatInputString = formatInputString;\n/**\n * Formats input value to byte representation of bool\n *\n * @method formatInputBool\n * @param {Boolean}\n * @returns {SolidityParam}\n */\nfunction formatInputBool(value) {\n    let result = '000000000000000000000000000000000000000000000000000000000000000' + (value ? '1' : '0');\n    return new param_1.SolidityParam(result);\n}\nexports.formatInputBool = formatInputBool;\n/**\n * Formats input value to byte representation of real\n * Values are multiplied by 2^m and encoded as integers\n *\n * @method formatInputReal\n * @param {string|number|BigNumber}\n * @returns {SolidityParam}\n */\nfunction formatInputReal(value) {\n    return formatInputInt(new bignumber_js_1.BigNumber(value).times(new bignumber_js_1.BigNumber(2).pow(128)));\n}\nexports.formatInputReal = formatInputReal;\n/**\n * Check if input value is negative\n *\n * @method signedIsNegative\n * @param {string} value is hex format\n * @returns {Boolean} true if it is negative, otherwise false\n */\nfunction signedIsNegative(value) {\n    return new bignumber_js_1.BigNumber(value.substr(0, 1), 16).toString(2).substr(0, 1) === '1';\n}\nexports.signedIsNegative = signedIsNegative;\n/**\n * Formats right-aligned output bytes to int\n *\n * @method formatOutputInt\n * @param {SolidityParam} param\n * @returns {BigNumber} right-aligned output bytes formatted to big number\n */\nfunction formatOutputInt(param) {\n    let value = param.staticPart() || '0';\n    // check if it's negative number\n    // it it is, return two's complement\n    if (signedIsNegative(value)) {\n        return new bignumber_js_1.BigNumber(value, 16)\n            .minus(new bignumber_js_1.BigNumber('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16))\n            .minus(1);\n    }\n    return new bignumber_js_1.BigNumber(value, 16);\n}\nexports.formatOutputInt = formatOutputInt;\n/**\n * Formats right-aligned output bytes to uint\n *\n * @method formatOutputUInt\n * @param {SolidityParam}\n * @returns {BigNumeber} right-aligned output bytes formatted to uint\n */\nfunction formatOutputUInt(param) {\n    let value = param.staticPart() || '0';\n    return new bignumber_js_1.BigNumber(value, 16);\n}\nexports.formatOutputUInt = formatOutputUInt;\n/**\n * Formats right-aligned output bytes to real\n *\n * @method formatOutputReal\n * @param {SolidityParam}\n * @returns {BigNumber} input bytes formatted to real\n */\nfunction formatOutputReal(param) {\n    return formatOutputInt(param).dividedBy(new bignumber_js_1.BigNumber(2).pow(128));\n}\nexports.formatOutputReal = formatOutputReal;\n/**\n * Formats right-aligned output bytes to ureal\n *\n * @method formatOutputUReal\n * @param {SolidityParam}\n * @returns {BigNumber} input bytes formatted to ureal\n */\nfunction formatOutputUReal(param) {\n    return formatOutputUInt(param).dividedBy(new bignumber_js_1.BigNumber(2).pow(128));\n}\nexports.formatOutputUReal = formatOutputUReal;\n/**\n * Should be used to format output bool\n *\n * @method formatOutputBool\n * @param {SolidityParam}\n * @returns {Boolean} right-aligned input bytes formatted to bool\n */\nfunction formatOutputBool(param) {\n    return param.staticPart() === '0000000000000000000000000000000000000000000000000000000000000001' ? true : false;\n}\nexports.formatOutputBool = formatOutputBool;\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputBytes\n * @param {SolidityParam} left-aligned hex representation of string\n * @param {string} name type name\n * @returns {string} hex string\n */\nfunction formatOutputBytes(param, name) {\n    let matches = name.match(/^bytes([0-9]*)/);\n    let size = parseInt(matches[1], 10);\n    return '0x' + param.staticPart().slice(0, 2 * size);\n}\nexports.formatOutputBytes = formatOutputBytes;\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputDynamicBytes\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {string} hex string\n */\nfunction formatOutputDynamicBytes(param) {\n    let length = new bignumber_js_1.BigNumber(param.dynamicPart().slice(0, 64), 16).toNumber() * 2;\n    return '0x' + param.dynamicPart().substr(64, length);\n}\nexports.formatOutputDynamicBytes = formatOutputDynamicBytes;\n/**\n * Should be used to format output string\n *\n * @method formatOutputString\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {string} ascii string\n */\nfunction formatOutputString(param) {\n    let length = new bignumber_js_1.BigNumber(param.dynamicPart().slice(0, 64), 16).toNumber() * 2;\n    return utils.toUtf8(param.dynamicPart().substr(64, length));\n}\nexports.formatOutputString = formatOutputString;\n/**\n * Should be used to format output address\n *\n * @method formatOutputAddress\n * @param {SolidityParam} right-aligned input bytes\n * @returns {string} address\n */\nfunction formatOutputAddress(param) {\n    let value = param.staticPart();\n    return '0x' + value.slice(value.length - 40, value.length);\n}\nexports.formatOutputAddress = formatOutputAddress;\n//# sourceMappingURL=formatters.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/formatters.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/int.js":
/*!*******************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/int.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeInt is a prootype that represents int type\n * It matches:\n * int\n * int[]\n * int[4]\n * int[][]\n * int[3][]\n * int[][6][], ...\n * int32\n * int64[]\n * int8[4]\n * int256[][]\n * int[3][]\n * int64[][6][], ...\n */\nclass SolidityTypeInt extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputInt,\n            outputFormatter: f.formatOutputInt\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\n    }\n}\nexports.SolidityTypeInt = SolidityTypeInt;\n//# sourceMappingURL=int.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/int.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/param.js":
/*!*********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/param.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(/*! ../utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\n/**\n * SolidityParam object prototype.\n * Should be used when encoding, decoding solidity bytes\n */\nclass SolidityParam {\n    constructor(value, offset = undefined) {\n        this.offset = undefined;\n        this.value = value || '';\n        this.offset = offset; // offset bytes\n    }\n    /**\n     * This method should be called to check if param has dynamic size.\n     * If it has, it returns true, otherwise false\n     *\n     * @method isDynamic\n     * @returns {Boolean}\n     */\n    isDynamic() {\n        return this.offset !== undefined;\n    }\n    /**\n     * This method should be called to transform offset to bytes\n     *\n     * @method offsetAsBytes\n     * @returns {string} bytes representation of offset\n     */\n    offsetAsBytes() {\n        return !this.isDynamic() ? '' : utils.padLeft(utils.toTwosComplement(this.offset).toString(16), 64);\n    }\n    /**\n     * This method should be called to get static part of param\n     *\n     * @method staticPart\n     * @returns {string} offset if it is a dynamic param, otherwise value\n     */\n    staticPart() {\n        if (!this.isDynamic()) {\n            return this.value;\n        }\n        return this.offsetAsBytes();\n    }\n    /**\n     * This method should be called to get dynamic part of param\n     *\n     * @method dynamicPart\n     * @returns {string} returns a value if it is a dynamic param, otherwise empty string\n     */\n    dynamicPart() {\n        return this.isDynamic() ? this.value : '';\n    }\n    /**\n     * This method should be called to encode param\n     *\n     * @method encode\n     * @returns {string}\n     */\n    encode() {\n        return this.staticPart() + this.dynamicPart();\n    }\n}\nexports.SolidityParam = SolidityParam;\n//# sourceMappingURL=param.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/param.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/real.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/real.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeReal is a prootype that represents real type\n * It matches:\n * real\n * real[]\n * real[4]\n * real[][]\n * real[3][]\n * real[][6][], ...\n * real32\n * real64[]\n * real8[4]\n * real256[][]\n * real[3][]\n * real64[][6][], ...\n */\nclass SolidityTypeReal extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputReal,\n            outputFormatter: f.formatOutputReal\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/real([0-9]*)?(\\[([0-9]*)\\])?/);\n    }\n}\nexports.SolidityTypeReal = SolidityTypeReal;\n//# sourceMappingURL=real.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/real.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/string.js":
/*!**********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/string.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\nclass SolidityTypeString extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputString,\n            outputFormatter: f.formatOutputString\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^string(\\[([0-9]*)\\])*$/);\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isDynamicType() {\n        return true;\n    }\n}\nexports.SolidityTypeString = SolidityTypeString;\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/string.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/type.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/type.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst param_1 = __webpack_require__(/*! ./param */ \"./node_modules/eth-connect/dist/solidity/param.js\");\n/**\n * SolidityType prototype is used to encode/decode solidity params of certain type\n */\nclass SolidityType {\n    constructor(config) {\n        this._inputFormatter = config.inputFormatter;\n        this._outputFormatter = config.outputFormatter;\n    }\n    /**\n     * Should be used to determine if this SolidityType do match given name\n     *\n     * @method isType\n     * @param {string} name\n     * @return {Bool} true if type match this SolidityType, otherwise false\n     */\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        throw new Error('this method should be overrwritten for type ' + name);\n    }\n    /**\n     * Should be used to determine what is the length of static part in given type\n     *\n     * @method staticPartLength\n     * @param {string} name\n     * @return {number} length of static part in bytes\n     */\n    staticPartLength(name) {\n        // If name isn't an array then treat it like a single element array.\n        return (this.nestedTypes(name) || ['[1]'])\n            .map(function (type) {\n            // the length of the nested array\n            return parseInt(type.slice(1, -1), 10) || 1;\n        })\n            .reduce(function (previous, current) {\n            return previous * current;\n            // all basic types are 32 bytes long\n        }, 32);\n    }\n    /**\n     * Should be used to determine if type is dynamic array\n     * eg:\n     * \"type[]\" => true\n     * \"type[4]\" => false\n     *\n     * @method isDynamicArray\n     * @param {string} name\n     * @return {bool} true if the type is dynamic array\n     */\n    isDynamicArray(name) {\n        let nestedTypes = this.nestedTypes(name);\n        return !!nestedTypes && !nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n    }\n    /**\n     * Should be used to determine if type is static array\n     * eg:\n     * \"type[]\" => false\n     * \"type[4]\" => true\n     *\n     * @method isStaticArray\n     * @param {string} name\n     * @return {Bool} true if the type is static array\n     */\n    isStaticArray(name) {\n        let nestedTypes = this.nestedTypes(name);\n        return !!nestedTypes && !!nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n    }\n    /**\n     * Should return length of static array\n     * eg.\n     * \"int[32]\" => 32\n     * \"int256[14]\" => 14\n     * \"int[2][3]\" => 3\n     * \"int\" => 1\n     * \"int[1]\" => 1\n     * \"int[]\" => 1\n     *\n     * @method staticArrayLength\n     * @param {string} name\n     * @return {number} static array length\n     */\n    staticArrayLength(name) {\n        let nestedTypes = this.nestedTypes(name);\n        if (nestedTypes) {\n            const match = nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n            return parseInt(match[match.length - 1] || '1', 10);\n        }\n        return 1;\n    }\n    /**\n     * Should return nested type\n     * eg.\n     * \"int[32]\" => \"int\"\n     * \"int256[14]\" => \"int256\"\n     * \"int[2][3]\" => \"int[2]\"\n     * \"int\" => \"int\"\n     * \"int[]\" => \"int\"\n     *\n     * @method nestedName\n     * @param {string} name\n     * @return {string} nested name\n     */\n    nestedName(name) {\n        // remove last [] in name\n        let nestedTypes = this.nestedTypes(name);\n        if (!nestedTypes) {\n            return name;\n        }\n        return name.substr(0, name.length - nestedTypes[nestedTypes.length - 1].length);\n    }\n    /**\n     * Should return true if type has dynamic size by default\n     * such types are \"string\", \"bytes\"\n     *\n     * @method isDynamicType\n     * @param {string} name\n     * @return {Bool} true if is dynamic, otherwise false\n     */\n    // tslint:disable-next-line:prefer-function-over-method\n    isDynamicType(_) {\n        return false;\n    }\n    /**\n     * Should return array of nested types\n     * eg.\n     * \"int[2][3][]\" => [\"[2]\", \"[3]\", \"[]\"]\n     * \"int[] => [\"[]\"]\n     * \"int\" => null\n     *\n     * @method nestedTypes\n     * @param {string} name\n     * @return {Array} array of nested types\n     */\n    // tslint:disable-next-line:prefer-function-over-method\n    nestedTypes(name) {\n        // return list of strings eg. \"[]\", \"[3]\", \"[]\", \"[2]\"\n        return name.match(/(\\[[0-9]*\\])/g);\n    }\n    /**\n     * Should be used to encode the value\n     *\n     * @method encode\n     * @param {object} value\n     * @param {string} name\n     * @return {string} encoded value\n     */\n    encode(value, name) {\n        if (this.isDynamicArray(name)) {\n            let length = value.length; // in int\n            let nestedName = this.nestedName(name);\n            let result = [];\n            result.push(f.formatInputInt(length).encode());\n            value.forEach(v => {\n                result.push(this.encode(v, nestedName));\n            });\n            return result;\n        }\n        else if (this.isStaticArray(name)) {\n            let length = this.staticArrayLength(name); // in int\n            let nestedName = this.nestedName(name);\n            let result = [];\n            for (let i = 0; i < length; i++) {\n                result.push(this.encode(value[i], nestedName));\n            }\n            return result;\n        }\n        return this._inputFormatter(value, name).encode();\n    }\n    /**\n     * Should be used to decode value from bytes\n     *\n     * @method decode\n     * @param {string} bytes\n     * @param {number} offset in bytes\n     * @param {string} name type name\n     * @returns {object} decoded value\n     */\n    decode(bytes, offset, name) {\n        if (this.isDynamicArray(name)) {\n            let arrayOffset = parseInt('0x' + bytes.substr(offset * 2, 64), 16); // in bytes\n            let length = parseInt('0x' + bytes.substr(arrayOffset * 2, 64), 16); // in int\n            let arrayStart = arrayOffset + 32; // array starts after length; // in bytes\n            let nestedName = this.nestedName(name);\n            let nestedStaticPartLength = this.staticPartLength(nestedName); // in bytes\n            let roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            let result = [];\n            for (let i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(this.decode(bytes, arrayStart + i, nestedName));\n            }\n            return result;\n        }\n        else if (this.isStaticArray(name)) {\n            let length = this.staticArrayLength(name); // in int\n            let arrayStart = offset; // in bytes\n            let nestedName = this.nestedName(name);\n            let nestedStaticPartLength = this.staticPartLength(nestedName); // in bytes\n            let roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            let result = [];\n            for (let i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(this.decode(bytes, arrayStart + i, nestedName));\n            }\n            return result;\n        }\n        else if (this.isDynamicType(name)) {\n            let dynamicOffset = parseInt('0x' + bytes.substr(offset * 2, 64), 16); // in bytes\n            let length = parseInt('0x' + bytes.substr(dynamicOffset * 2, 64), 16); // in bytes\n            let roundedLength = Math.floor((length + 31) / 32); // in int\n            let param = new param_1.SolidityParam(bytes.substr(dynamicOffset * 2, (1 + roundedLength) * 64), 0);\n            return this._outputFormatter(param, name);\n        }\n        let length = this.staticPartLength(name);\n        let param = new param_1.SolidityParam(bytes.substr(offset * 2, length * 2));\n        return this._outputFormatter(param, name);\n    }\n}\nexports.SolidityType = SolidityType;\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/type.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/uint.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/uint.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeUInt is a prootype that represents uint type\n * It matches:\n * uint\n * uint[]\n * uint[4]\n * uint[][]\n * uint[3][]\n * uint[][6][], ...\n * uint32\n * uint64[]\n * uint8[4]\n * uint256[][]\n * uint[3][]\n * uint64[][6][], ...\n */\nclass SolidityTypeUInt extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputInt,\n            outputFormatter: f.formatOutputUInt\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\n    }\n}\nexports.SolidityTypeUInt = SolidityTypeUInt;\n//# sourceMappingURL=uint.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/uint.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/solidity/ureal.js":
/*!*********************************************************!*\
  !*** ./node_modules/eth-connect/dist/solidity/ureal.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f = __webpack_require__(/*! ./formatters */ \"./node_modules/eth-connect/dist/solidity/formatters.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/eth-connect/dist/solidity/type.js\");\n/**\n * SolidityTypeUReal is a prootype that represents ureal type\n * It matches:\n * ureal\n * ureal[]\n * ureal[4]\n * ureal[][]\n * ureal[3][]\n * ureal[][6][], ...\n * ureal32\n * ureal64[]\n * ureal8[4]\n * ureal256[][]\n * ureal[3][]\n * ureal64[][6][], ...\n */\nclass SolidityTypeUReal extends type_1.SolidityType {\n    constructor() {\n        super({\n            inputFormatter: f.formatInputReal,\n            outputFormatter: f.formatOutputUReal\n        });\n    }\n    // tslint:disable-next-line:prefer-function-over-method\n    isType(name) {\n        return !!name.match(/^ureal([0-9]*)?(\\[([0-9]*)\\])*$/);\n    }\n}\nexports.SolidityTypeUReal = SolidityTypeUReal;\n//# sourceMappingURL=ureal.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/solidity/ureal.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/config.js":
/*!*******************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/config.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// required to define ETH_BIGNUMBER_ROUNDING_MODE\nconst bignumber_js_1 = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\nexports.ETH_UNITS = [\n    'wei',\n    'kwei',\n    'Mwei',\n    'Gwei',\n    'szabo',\n    'finney',\n    'femtoether',\n    'picoether',\n    'nanoether',\n    'microether',\n    'milliether',\n    'nano',\n    'micro',\n    'milli',\n    'ether',\n    'grand',\n    'Mether',\n    'Gether',\n    'Tether',\n    'Pether',\n    'Eether',\n    'Zether',\n    'Yether',\n    'Nether',\n    'Dether',\n    'Vether',\n    'Uether'\n];\nexports.ETH_PADDING = 32;\nexports.ETH_SIGNATURE_LENGTH = 4;\nexports.ETH_BIGNUMBER_ROUNDING_MODE = {\n    ROUNDING_MODE: bignumber_js_1.BigNumber.ROUND_DOWN\n};\nexports.ETH_POLLING_TIMEOUT = 1000 / 2;\nexports.defaultBlock = 'latest';\n//# sourceMappingURL=config.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/config.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/errors.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction InvalidNumberOfSolidityArgs(given, expected) {\n    return new Error(`Invalid number of arguments to Solidity function. given: ${given}, expected: ${expected}`);\n}\nexports.InvalidNumberOfSolidityArgs = InvalidNumberOfSolidityArgs;\nfunction InvalidNumberOfRPCParams(methodName, given, expected) {\n    return new Error(`Invalid number of input parameters to RPC method \"${methodName}\" given: ${given}, expected: ${expected}`);\n}\nexports.InvalidNumberOfRPCParams = InvalidNumberOfRPCParams;\nfunction InvalidConnection(host) {\n    return new Error(\"CONNECTION ERROR: Couldn't connect to node \" + host + '.');\n}\nexports.InvalidConnection = InvalidConnection;\nfunction InvalidProvider() {\n    return new Error('Provider not set or invalid');\n}\nexports.InvalidProvider = InvalidProvider;\nfunction InvalidResponse(result) {\n    let message = !!result && !!result.error && !!result.error.message\n        ? result.error.message\n        : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n    return new Error(message);\n}\nexports.InvalidResponse = InvalidResponse;\nfunction ConnectionTimeout(ms) {\n    return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n}\nexports.ConnectionTimeout = ConnectionTimeout;\n//# sourceMappingURL=errors.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/errors.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/formatters.js":
/*!***********************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/formatters.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(/*! ../utils/utils */ \"./node_modules/eth-connect/dist/utils/utils.js\");\nconst config = __webpack_require__(/*! ../utils/config */ \"./node_modules/eth-connect/dist/utils/config.js\");\n/**\n * Should the format output to a big number\n *\n * @method outputBigNumberFormatter\n * @param {string|number|BigNumber}\n * @returns {BigNumber} object\n */\nfunction outputBigNumberFormatter(num) {\n    return utils.toBigNumber(num);\n}\nexports.outputBigNumberFormatter = outputBigNumberFormatter;\nfunction isPredefinedBlockNumber(blockNumber) {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n}\nexports.isPredefinedBlockNumber = isPredefinedBlockNumber;\nfunction inputDefaultBlockNumberFormatter(blockNumber) {\n    if (blockNumber === undefined) {\n        return config.defaultBlock;\n    }\n    return inputBlockNumberFormatter(blockNumber);\n}\nexports.inputDefaultBlockNumberFormatter = inputDefaultBlockNumberFormatter;\nfunction inputBlockNumberFormatter(blockNumber) {\n    if (blockNumber === undefined || blockNumber == null) {\n        return undefined;\n    }\n    else if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n    return utils.toHex(blockNumber);\n}\nexports.inputBlockNumberFormatter = inputBlockNumberFormatter;\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputCallFormatter\n * @param {object} transaction options\n * @returns object\n */\nfunction inputCallFormatter(options) {\n    options.from = options.from;\n    if (options.from) {\n        options.from = inputAddressFormatter(options.from);\n    }\n    if (options.to) {\n        // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n    // tslint:disable-next-line:semicolon\n    ;\n    ['gasPrice', 'gas', 'value', 'nonce']\n        .filter(function (key) {\n        return options[key] !== undefined;\n    })\n        .forEach(function (key) {\n        options[key] = utils.fromDecimal(options[key]);\n    });\n    if (options.data && !options.data.startsWith('0x') && /^[A-Za-z0-9]+$/.test(options.data)) {\n        options.data = '0x' + options.data;\n    }\n    return options;\n}\nexports.inputCallFormatter = inputCallFormatter;\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputTransactionFormatter\n * @param {object} transaction options\n * @returns object\n */\nfunction inputTransactionFormatter(options) {\n    if (typeof options !== 'object') {\n        throw new Error('Did not provide transaction options');\n    }\n    if (!options.from) {\n        throw new Error('Missing \"from\" in transaction options');\n    }\n    options.from = inputAddressFormatter(options.from);\n    if (options.to) {\n        // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n    // tslint:disable-next-line:semicolon\n    ;\n    ['gasPrice', 'gas', 'value', 'nonce']\n        .filter(function (key) {\n        return options[key] !== undefined;\n    })\n        .forEach(function (key) {\n        options[key] = utils.fromDecimal(options[key]);\n    });\n    if (options.data && !options.data.startsWith('0x') && /^[A-Za-z0-9]+$/.test(options.data)) {\n        options.data = '0x' + options.data;\n    }\n    return options;\n}\nexports.inputTransactionFormatter = inputTransactionFormatter;\n/**\n * Formats the output of a transaction to its proper values\n *\n * @method outputTransactionFormatter\n * @param {object} tx\n * @returns {object}\n */\nfunction outputTransactionFormatter(tx) {\n    if (tx.blockNumber !== null) {\n        tx.blockNumber = utils.toDecimal(tx.blockNumber);\n    }\n    if (tx.transactionIndex !== null) {\n        tx.transactionIndex = utils.toDecimal(tx.transactionIndex);\n    }\n    tx.nonce = utils.toDecimal(tx.nonce);\n    tx.gas = utils.toDecimal(tx.gas);\n    tx.gasPrice = utils.toBigNumber(tx.gasPrice);\n    tx.value = utils.toBigNumber(tx.value);\n    return tx;\n}\nexports.outputTransactionFormatter = outputTransactionFormatter;\n/**\n * Formats the output of a transaction receipt to its proper values\n *\n * @method outputTransactionReceiptFormatter\n * @param {object} receipt\n * @returns {object}\n */\nfunction outputTransactionReceiptFormatter(receipt) {\n    if (receipt.blockNumber !== null)\n        receipt.blockNumber = utils.toDecimal(receipt.blockNumber);\n    if (receipt.transactionIndex !== null)\n        receipt.transactionIndex = utils.toDecimal(receipt.transactionIndex);\n    receipt.cumulativeGasUsed = utils.toDecimal(receipt.cumulativeGasUsed);\n    receipt.gasUsed = utils.toDecimal(receipt.gasUsed);\n    if (utils.isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(function (log) {\n            return outputLogFormatter(log);\n        });\n    }\n    receipt.status = utils.toDecimal(receipt.status);\n    return receipt;\n}\nexports.outputTransactionReceiptFormatter = outputTransactionReceiptFormatter;\n/**\n * Formats the output of a block to its proper values\n *\n * @method outputBlockFormatter\n * @param {object} block\n * @returns {object}\n */\nfunction outputBlockFormatter(block) {\n    // transform to number\n    block.gasLimit = utils.toDecimal(block.gasLimit);\n    block.gasUsed = utils.toDecimal(block.gasUsed);\n    block.size = utils.toDecimal(block.size);\n    block.timestamp = utils.toDecimal(block.timestamp);\n    if (block.number !== null)\n        block.number = utils.toDecimal(block.number);\n    block.difficulty = utils.toBigNumber(block.difficulty);\n    block.totalDifficulty = utils.toBigNumber(block.totalDifficulty);\n    if (utils.isArray(block.transactions)) {\n        block.transactions.forEach(function (item) {\n            if (!utils.isString(item))\n                return outputTransactionFormatter(item);\n        });\n    }\n    return block;\n}\nexports.outputBlockFormatter = outputBlockFormatter;\n/**\n * Formats the output of a log\n *\n * @method outputLogFormatter\n * @param {object} log object\n * @returns {object} log\n */\nfunction outputLogFormatter(log) {\n    if (log.blockNumber) {\n        log.blockNumber = utils.toDecimal(log.blockNumber);\n    }\n    if (log.transactionIndex) {\n        log.transactionIndex = utils.toDecimal(log.transactionIndex);\n    }\n    if (log.logIndex) {\n        log.logIndex = utils.toDecimal(log.logIndex);\n    }\n    return log;\n}\nexports.outputLogFormatter = outputLogFormatter;\n/**\n * Formats the input of a whisper post and converts all values to HEX\n *\n * @method inputPostFormatter\n * @param {object} transaction object\n * @returns {object}\n */\nfunction inputPostFormatter(post) {\n    post.ttl = utils.fromDecimal(post.ttl);\n    post.workToProve = utils.fromDecimal(post.workToProve);\n    post.priority = utils.fromDecimal(post.priority);\n    // fallback\n    if (!utils.isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n    }\n    // format the following options\n    post.topics = post.topics.map(function (topic) {\n        // convert only if not hex\n        return topic.indexOf('0x') === 0 ? topic : utils.fromUtf8(topic);\n    });\n    return post;\n}\nexports.inputPostFormatter = inputPostFormatter;\n/**\n * Formats the output of a received post message\n *\n * @method outputPostFormatter\n * @param {object}\n * @returns {object}\n */\nfunction outputPostFormatter(post) {\n    post.expiry = utils.toDecimal(post.expiry);\n    post.sent = utils.toDecimal(post.sent);\n    post.ttl = utils.toDecimal(post.ttl);\n    post.workProved = utils.toDecimal(post.workProved);\n    // format the following options\n    if (!post.topics) {\n        post.topics = [];\n    }\n    post.topics = post.topics.map(function (topic) {\n        return utils.toAscii(topic);\n    });\n    return post;\n}\nexports.outputPostFormatter = outputPostFormatter;\nfunction inputAddressFormatter(address) {\n    if (utils.isStrictAddress(address)) {\n        return address;\n    }\n    else if (utils.isAddress(address)) {\n        return '0x' + address;\n    }\n    throw new Error(`Invalid address: ${JSON.stringify(address)}`);\n}\nexports.inputAddressFormatter = inputAddressFormatter;\nfunction outputSyncingFormatter(result) {\n    if (!result) {\n        return result;\n    }\n    result.startingBlock = utils.toDecimal(result.startingBlock);\n    result.currentBlock = utils.toDecimal(result.currentBlock);\n    result.highestBlock = utils.toDecimal(result.highestBlock);\n    if (result.knownStates) {\n        result.knownStates = utils.toDecimal(result.knownStates);\n        result.pulledStates = utils.toDecimal(result.pulledStates);\n    }\n    return result;\n}\nexports.outputSyncingFormatter = outputSyncingFormatter;\n//# sourceMappingURL=formatters.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/formatters.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/future.js":
/*!*******************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/future.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction future() {\n    let resolver = (_) => {\n        throw new Error('Error initilizing mutex');\n    };\n    let rejecter = (x) => {\n        throw x;\n    };\n    const promise = new Promise((ok, err) => {\n        resolver = ok;\n        rejecter = err;\n    });\n    promise.then(() => (promise.isPending = false));\n    promise.catch(() => (promise.isPending = false));\n    promise.resolve = resolver;\n    promise.reject = rejecter;\n    if (!('finally' in promise)) {\n        promise.finally = fn => {\n            promise.then(fn);\n            promise.catch(fn);\n        };\n    }\n    promise.isPending = true;\n    return promise;\n}\nexports.future = future;\n//# sourceMappingURL=future.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/future.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/jsonrpc.js":
/*!********************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/jsonrpc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.messageId = 0;\n/**\n * Should be called to valid json create payload object\n *\n * @method toPayload\n * @param {Function} method of jsonrpc call, required\n * @param {Array} params, an array of method params, optional\n * @returns {object} valid jsonrpc payload object\n */\nfunction toPayload(method, params) {\n    if (!method) {\n        throw new Error('jsonrpc method should be specified!');\n    }\n    if (typeof method !== 'string') {\n        throw new Error(`jsonrpc must be a string, got ${typeof method}!`);\n    }\n    // advance message ID\n    exports.messageId++;\n    return {\n        jsonrpc: '2.0',\n        id: exports.messageId,\n        method: method,\n        params: params || []\n    };\n}\nexports.toPayload = toPayload;\n/**\n * Should be called to check if jsonrpc response is valid\n *\n * @method isValidResponse\n * @param {object}\n * @returns {Boolean} true if response is valid, otherwise false\n */\nfunction isValidResponse(response) {\n    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n    function validateSingleMessage(message) {\n        return (!!message &&\n            !message.error &&\n            message.jsonrpc === '2.0' &&\n            typeof message.id === 'number' &&\n            message.result !== undefined); // only undefined is not valid json object\n    }\n}\nexports.isValidResponse = isValidResponse;\n/**\n * Should be called to create batch payload object\n *\n * @method toBatchPayload\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n * @returns {Array} batch payload\n */\nfunction toBatchPayload(messages) {\n    return messages.map(function (message) {\n        return toPayload(message.method, message.params);\n    });\n}\nexports.toBatchPayload = toBatchPayload;\n//# sourceMappingURL=jsonrpc.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/jsonrpc.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/sleep.js":
/*!******************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/sleep.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sleep for a certain amount of milliseconds\n * @param {integer} ms - miliseconds to sleep\n * @return {Promise} - Promise that resolves when the sleeping is done\n */\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\n//# sourceMappingURL=sleep.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/sleep.js?");

/***/ }),

/***/ "./node_modules/eth-connect/dist/utils/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/eth-connect/dist/utils/utils.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\nconst utf8 = __webpack_require__(/*! utf8 */ \"./node_modules/utf8/utf8.js\");\nconst CryptoJS = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\nconst _sha3 = __webpack_require__(/*! crypto-js/sha3 */ \"./node_modules/crypto-js/sha3.js\");\nfunction sha3(value, options) {\n    let mutValue = value;\n    if (options && options.encoding === 'hex') {\n        if (mutValue.length > 2 && mutValue.substr(0, 2) === '0x') {\n            mutValue = mutValue.substr(2);\n        }\n        mutValue = CryptoJS.enc.Hex.parse(mutValue);\n    }\n    return _sha3(mutValue, {\n        outputLength: 256\n    }).toString();\n}\nexports.sha3 = sha3;\nlet unitMap = {\n    noether: '0',\n    wei: '1',\n    kwei: '1000',\n    Kwei: '1000',\n    babbage: '1000',\n    femtoether: '1000',\n    mwei: '1000000',\n    Mwei: '1000000',\n    lovelace: '1000000',\n    picoether: '1000000',\n    gwei: '1000000000',\n    Gwei: '1000000000',\n    shannon: '1000000000',\n    nanoether: '1000000000',\n    nano: '1000000000',\n    szabo: '1000000000000',\n    microether: '1000000000000',\n    micro: '1000000000000',\n    finney: '1000000000000000',\n    milliether: '1000000000000000',\n    milli: '1000000000000000',\n    ether: '1000000000000000000',\n    kether: '1000000000000000000000',\n    grand: '1000000000000000000000',\n    mether: '1000000000000000000000000',\n    gether: '1000000000000000000000000000',\n    tether: '1000000000000000000000000000000'\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method padLeft\n * @param {string} str to be padded\n * @param {number} characters that result string should have\n * @param {string} sign, by default 0\n * @returns {string} right aligned string\n */\nfunction padLeft(str, chars, sign) {\n    return new Array(chars - str.length + 1).join(sign ? sign : '0') + str;\n}\nexports.padLeft = padLeft;\n/**\n * Should be called to pad string to expected length\n *\n * @method padRight\n * @param {string} str to be padded\n * @param {number} characters that result string should have\n * @param {string} sign, by default 0\n * @returns {string} right aligned string\n */\nfunction padRight(str, chars, sign) {\n    return str + new Array(chars - str.length + 1).join(sign ? sign : '0');\n}\nexports.padRight = padRight;\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {string} string in hex\n * @returns {string} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n    // Find termination\n    let str = '';\n    let i = 0;\n    let l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        let code = parseInt(hex.substr(i, 2), 16);\n        if (code === 0)\n            break;\n        str += String.fromCharCode(code);\n    }\n    return utf8.decode(str);\n}\nexports.toUtf8 = toUtf8;\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {string} string in hex\n * @returns {string} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    // Find termination\n    let str = '';\n    let i = 0;\n    let l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        let code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {string} string\n * @param {Boolean} allowZero to convert code point zero to 00 instead of end of string\n * @returns {string} hex representation of input string\n */\nfunction fromUtf8(_str, allowZero = false) {\n    let str = utf8.encode(_str);\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code === 0) {\n            if (allowZero) {\n                hex += '00';\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            let n = code.toString(16);\n            hex += n.length < 2 ? '0' + n : n;\n        }\n    }\n    return '0x' + hex;\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {string} string\n * @param {number} optional padding\n * @returns {string} hex representation of input string\n */\nfunction fromAscii(str, num = 0) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        let n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return '0x' + hex.padEnd(num, '0');\n}\nexports.fromAscii = fromAscii;\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method transformToFullName\n * @param {object} json-abi\n * @return {string} full fnction/event name\n */\nfunction transformToFullName(json) {\n    if (json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    let typeName = json.inputs\n        .map(function (i) {\n        return i.type;\n    })\n        .join();\n    return json.name + '(' + typeName + ')';\n}\nexports.transformToFullName = transformToFullName;\n/**\n * Should be called to get display name of contract function\n *\n * @method extractDisplayName\n * @param {string} name of function/event\n * @returns {string} display name for function/event eg. multiply(uint256) -> multiply\n */\nfunction extractDisplayName(name) {\n    let stBracket = name.indexOf('(');\n    let endBracket = name.indexOf(')');\n    return stBracket !== -1 && endBracket !== -1 ? name.substr(0, stBracket) : name;\n}\nexports.extractDisplayName = extractDisplayName;\n/**\n * Should be called to get type name of contract function\n *\n * @method extractTypeName\n * @param {string} name of function/event\n * @returns {string} type name for function/event eg. multiply(uint256) -> uint256\n */\nfunction extractTypeName(name) {\n    let stBracket = name.indexOf('(');\n    let endBracket = name.indexOf(')');\n    return stBracket !== -1 && endBracket !== -1\n        ? name.substr(stBracket + 1, endBracket - stBracket - 1).replace(' ', '')\n        : '';\n}\nexports.extractTypeName = extractTypeName;\n/**\n * Converts value to it's decimal representation in string\n *\n * @method toDecimal\n * @param {string|number|BigNumber}\n * @return {string}\n */\nfunction isHex(value) {\n    if (typeof value === 'string') {\n        return /^0x[0-9a-fA-F]+$/.test(value);\n    }\n    else\n        return false;\n}\nexports.isHex = isHex;\n/**\n * Converts value to it's decimal representation in string\n *\n * @method toDecimal\n * @param {string|number|BigNumber}\n * @return {string}\n */\nfunction toNullDecimal(value) {\n    if (value === undefined || value === null)\n        return value;\n    return toBigNumber(value).toNumber();\n}\nexports.toNullDecimal = toNullDecimal;\n/**\n * Converts value to it's decimal representation in string\n *\n * @method toDecimal\n * @param {string|number|BigNumber}\n * @return {string}\n */\nfunction toDecimal(value) {\n    return toBigNumber(value).toNumber();\n}\nexports.toDecimal = toDecimal;\n/**\n * Converts value to it's hex  representation in string\n */\nfunction toData(val) {\n    if (typeof val === 'string') {\n        if (!val.startsWith('0x') && /^[A-Za-z0-9]+$/.test(val)) {\n            return '0x' + val;\n        }\n    }\n    return toHex(val);\n}\nexports.toData = toData;\n/**\n * Converts value to it's boolean representation (x != 0)\n *\n * @method toBoolean\n * @param {string|number|BigNumber}\n * @return {string}\n */\nfunction toBoolean(value) {\n    if (typeof value === 'boolean')\n        return value;\n    return toBigNumber(value).toNumber() !== 0;\n}\nexports.toBoolean = toBoolean;\n/**\n * Converts value to it's hex representation\n *\n * @method fromDecimal\n * @param {string|number|BigNumber}\n * @return {string}\n */\nfunction fromDecimal(value) {\n    let num = toBigNumber(value);\n    let result = num.toString(16);\n    return num.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n}\nexports.fromDecimal = fromDecimal;\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {string|number|BigNumber|Object}\n * @return {string}\n */\nfunction toHex(val) {\n    /*jshint maxcomplexity: 8 */\n    if (isBoolean(val))\n        return fromDecimal(+val);\n    if (isBigNumber(val))\n        return fromDecimal(val);\n    if (typeof val === 'object')\n        return fromUtf8(JSON.stringify(val));\n    // if its a negative number, pass it through fromDecimal\n    if (isString(val)) {\n        const valStr = val;\n        if (valStr.indexOf('-0x') === 0)\n            return fromDecimal(valStr);\n        else if (valStr.indexOf('0x') === 0)\n            return valStr;\n        else if (!isFinite(valStr))\n            return fromUtf8(valStr, true);\n    }\n    return fromDecimal(val);\n}\nexports.toHex = toHex;\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {string} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(_unit) {\n    let unit = _unit ? _unit.toLowerCase() : 'ether';\n    let unitValue = unitMap[unit];\n    if (unitValue === undefined) {\n        throw new Error(\"This unit doesn't exists, please use the one of the following units\" + JSON.stringify(unitMap, null, 2));\n    }\n    return new bignumber_js_1.BigNumber(unitValue, 10);\n}\nexports.getValueOfUnit = getValueOfUnit;\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} num can be a number, number string or a HEX of a decimal\n * @param {string} unit the unit to convert to, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n */\nfunction fromWei(num, unit) {\n    let returnValue = toBigNumber(num).dividedBy(getValueOfUnit(unit));\n    return isBigNumber(num) ? returnValue : returnValue.toString(10);\n}\nexports.fromWei = fromWei;\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BigNumber} num can be a number, number string or a HEX of a decimal\n * @param {string} unit the unit to convert from, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n */\nfunction toWei(num, unit) {\n    let returnValue = toBigNumber(num).times(getValueOfUnit(unit));\n    return isBigNumber(num) ? returnValue : returnValue.toString(10);\n}\nexports.toWei = toWei;\n/**\n * Takes an input and transforms it into an bignumber\n *\n * @method toBigNumber\n * @param {Number|String|BigNumber} a number, string, HEX string or BigNumber\n * @return {BigNumber} BigNumber\n */\nfunction toBigNumber(_num) {\n    let num = _num || 0;\n    if (isBigNumber(num)) {\n        return num;\n    }\n    if (typeof num === 'string' && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n        return new bignumber_js_1.BigNumber(num.replace('0x', ''), 16);\n    }\n    return new bignumber_js_1.BigNumber(num.toString(10), 10);\n}\nexports.toBigNumber = toBigNumber;\n/**\n * Takes and input transforms it into bignumber and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BigNumber}\n * @return {BigNumber}\n */\nfunction toTwosComplement(num) {\n    let bigNumber = toBigNumber(num).integerValue();\n    if (bigNumber.isLessThan(0)) {\n        return new bignumber_js_1.BigNumber('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16).plus(bigNumber).plus(1);\n    }\n    return bigNumber;\n}\nexports.toTwosComplement = toTwosComplement;\n/**\n * Checks if the given string is strictly an address\n *\n * @method isStrictAddress\n * @param {string} address the given HEX adress\n * @return {Boolean}\n */\nfunction isStrictAddress(address) {\n    return /^0x[0-9a-f]{40}$/i.test(address);\n}\nexports.isStrictAddress = isStrictAddress;\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {string} address the given HEX adress\n * @return {Boolean}\n */\nfunction isAddress(address) {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    }\n    else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n}\nexports.isAddress = isAddress;\n/**\n * Checks if the given string is a checksummed address\n *\n * @method isChecksumAddress\n * @param {string} address the given HEX adress\n * @return {Boolean}\n */\nfunction isChecksumAddress(_address) {\n    // Check each case\n    const address = _address.replace('0x', '');\n    let addressHash = sha3(address.toLowerCase());\n    for (let i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n            (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isChecksumAddress = isChecksumAddress;\n/**\n * Makes a checksum address\n *\n * @method toChecksumAddress\n * @param {string} address the given HEX adress\n * @return {string}\n */\nfunction toChecksumAddress(_address) {\n    if (typeof _address === 'undefined')\n        return '';\n    const address = _address.toLowerCase().replace('0x', '');\n    const addressHash = sha3(address);\n    let checksumAddress = '0x';\n    for (let i = 0; i < address.length; i++) {\n        // If ith character is 9 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n}\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Transforms given string to valid 20 bytes-length addres with 0x prefix\n *\n * @method toAddress\n * @param {string} address\n * @return {string} formatted address\n */\nfunction toAddress(address) {\n    if (isStrictAddress(address)) {\n        return address;\n    }\n    if (/^[0-9a-f]{40}$/.test(address)) {\n        return '0x' + address;\n    }\n    return '0x' + padLeft(toHex(address).substr(2), 40);\n}\nexports.toAddress = toAddress;\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {object}\n * @return {Boolean}\n */\nfunction isBigNumber(object) {\n    return object instanceof bignumber_js_1.BigNumber || (object && object.constructor && object.constructor.name === 'BigNumber');\n}\nexports.isBigNumber = isBigNumber;\nfunction isString(object) {\n    return typeof object === 'string' || (object && object.constructor && object.constructor.name === 'String');\n}\nexports.isString = isString;\n/**\n * Returns true if object is function, otherwise false\n *\n * @method isFunction\n * @param {object}\n * @return {Boolean}\n */\nfunction isFunction(object) {\n    return typeof object === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Returns true if object is Objet, otherwise false\n *\n * @method isObject\n * @param {object}\n * @return {Boolean}\n */\nfunction isObject(object) {\n    return object !== null && !Array.isArray(object) && typeof object === 'object';\n}\nexports.isObject = isObject;\n/**\n * Returns true if object is boolean, otherwise false\n *\n * @method isBoolean\n * @param {object}\n * @return {Boolean}\n */\nfunction isBoolean(object) {\n    return typeof object === 'boolean';\n}\nexports.isBoolean = isBoolean;\n/**\n * Returns true if object is array, otherwise false\n *\n * @method isArray\n * @param {object}\n * @return {Boolean}\n */\nfunction isArray(object) {\n    return Array.isArray(object);\n}\nexports.isArray = isArray;\n/**\n * Returns true if given string is valid json object\n *\n * @method isJson\n * @param {string}\n * @return {Boolean}\n */\nfunction isJson(str) {\n    try {\n        return !!JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.isJson = isJson;\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {string} hex encoded bloom filter\n * @return {Boolean}\n */\nfunction isBloom(bloom) {\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n}\nexports.isBloom = isBloom;\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {string} hex encoded topic\n * @return {Boolean}\n */\nfunction isTopic(topic) {\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n}\nexports.isTopic = isTopic;\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/eth-connect/dist/utils/utils.js?");

/***/ }),

/***/ "./node_modules/event-lite/event-lite.js":
/*!***********************************************!*\
  !*** ./node_modules/event-lite/event-lite.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)\n *\n * @copyright Yusuke Kawasaki\n * @license MIT\n * @constructor\n * @see https://github.com/kawanet/event-lite\n * @see http://kawanet.github.io/event-lite/EventLite.html\n * @example\n * var EventLite = require(\"event-lite\");\n *\n * function MyClass() {...}             // your class\n *\n * EventLite.mixin(MyClass.prototype);  // import event methods\n *\n * var obj = new MyClass();\n * obj.on(\"foo\", function() {...});     // add event listener\n * obj.once(\"bar\", function() {...});   // add one-time event listener\n * obj.emit(\"foo\");                     // dispatch event\n * obj.emit(\"bar\");                     // dispatch another event\n * obj.off(\"foo\");                      // remove event listener\n */\n\nfunction EventLite() {\n  if (!(this instanceof EventLite)) return new EventLite();\n}\n\n(function(EventLite) {\n  // export the class for node.js\n  if (true) module.exports = EventLite;\n\n  // property name to hold listeners\n  var LISTENERS = \"listeners\";\n\n  // methods to export\n  var methods = {\n    on: on,\n    once: once,\n    off: off,\n    emit: emit\n  };\n\n  // mixin to self\n  mixin(EventLite.prototype);\n\n  // export mixin function\n  EventLite.mixin = mixin;\n\n  /**\n   * Import on(), once(), off() and emit() methods into target object.\n   *\n   * @function EventLite.mixin\n   * @param target {Prototype}\n   */\n\n  function mixin(target) {\n    for (var key in methods) {\n      target[key] = methods[key];\n    }\n    return target;\n  }\n\n  /**\n   * Add an event listener.\n   *\n   * @function EventLite.prototype.on\n   * @param type {string}\n   * @param func {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function on(type, func) {\n    getListeners(this, type).push(func);\n    return this;\n  }\n\n  /**\n   * Add one-time event listener.\n   *\n   * @function EventLite.prototype.once\n   * @param type {string}\n   * @param func {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function once(type, func) {\n    var that = this;\n    wrap.originalListener = func;\n    getListeners(that, type).push(wrap);\n    return that;\n\n    function wrap() {\n      off.call(that, type, wrap);\n      func.apply(this, arguments);\n    }\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @function EventLite.prototype.off\n   * @param [type] {string}\n   * @param [func] {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function off(type, func) {\n    var that = this;\n    var listners;\n    if (!arguments.length) {\n      delete that[LISTENERS];\n    } else if (!func) {\n      listners = that[LISTENERS];\n      if (listners) {\n        delete listners[type];\n        if (!Object.keys(listners).length) return off.call(that);\n      }\n    } else {\n      listners = getListeners(that, type, true);\n      if (listners) {\n        listners = listners.filter(ne);\n        if (!listners.length) return off.call(that, type);\n        that[LISTENERS][type] = listners;\n      }\n    }\n    return that;\n\n    function ne(test) {\n      return test !== func && test.originalListener !== func;\n    }\n  }\n\n  /**\n   * Dispatch (trigger) an event.\n   *\n   * @function EventLite.prototype.emit\n   * @param type {string}\n   * @param [value] {*}\n   * @returns {boolean} True when a listener received the event\n   */\n\n  function emit(type, value) {\n    var that = this;\n    var listeners = getListeners(that, type, true);\n    if (!listeners) return false;\n    var arglen = arguments.length;\n    if (arglen === 1) {\n      listeners.forEach(zeroarg);\n    } else if (arglen === 2) {\n      listeners.forEach(onearg);\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      listeners.forEach(moreargs);\n    }\n    return !!listeners.length;\n\n    function zeroarg(func) {\n      func.call(that);\n    }\n\n    function onearg(func) {\n      func.call(that, value);\n    }\n\n    function moreargs(func) {\n      func.apply(that, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n\n  function getListeners(that, type, readonly) {\n    if (readonly && !that[LISTENERS]) return;\n    var listeners = that[LISTENERS] || (that[LISTENERS] = {});\n    return listeners[type] || (listeners[type] = []);\n  }\n\n})(EventLite);\n\n\n//# sourceURL=webpack:///./node_modules/event-lite/event-lite.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/int64-buffer/int64-buffer.js":
/*!***************************************************!*\
  !*** ./node_modules/int64-buffer/int64-buffer.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/int64-buffer/int64-buffer.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/MessageBus.js":
/*!******************************************************!*\
  !*** ./node_modules/metaverse-api/lib/MessageBus.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventDispatcher_1 = __webpack_require__(/*! metaverse-rpc/lib/common/core/EventDispatcher */ \"./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js\");\n/**\n * MessageBusClient provides an easy way to send and reveive peer to peer\n * messages thru the communications interface of Decentraland.\n *\n * The usage is simple, it implements a pub-sub pattern that shares messages\n * using the connection that already exists between peers.\n *\n * @example inside your ScriptableScene\n * ```ts\n *   let messageBusClient = await MessageBusClient.acquireEstateChannel(this)\n *   messageBusClient.on('a message name', (message) => {...})\n *   messageBusClient.emit('a message name', message)\n * ```\n */\nclass MessageBusClient extends EventDispatcher_1.EventDispatcher {\n    constructor(api, id, busClientId) {\n        super();\n        this.api = api;\n        this.id = id;\n        this.busClientId = busClientId;\n        api[`on${this.id}`]((message) => {\n            if (this.busClientId !== message.sender) {\n                super.emit(message.event, ...message.args);\n            }\n        });\n    }\n    static async acquireEstateChannel(system) {\n        const busId = Math.random().toString(36);\n        const { MessageBus } = await system.loadAPIs(['MessageBus']);\n        const bus = await MessageBus.getEstateChannel();\n        return new MessageBusClient(MessageBus, bus.id, busId);\n    }\n    emit(event, ...args) {\n        this.api[this.id]({\n            event,\n            args,\n            sender: this.busClientId\n        });\n        super.emit(event, ...args);\n    }\n}\nexports.MessageBusClient = MessageBusClient;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUJ1cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9NZXNzYWdlQnVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUZBQStFO0FBUy9FOzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxzQkFBdUMsU0FBUSxpQ0FBa0I7SUFDL0QsWUFBOEIsR0FBUSxFQUFZLEVBQVUsRUFBWSxXQUFtQjtRQUN6RixLQUFLLEVBQUUsQ0FBQTtRQURxQixRQUFHLEdBQUgsR0FBRyxDQUFLO1FBQVksT0FBRSxHQUFGLEVBQUUsQ0FBUTtRQUFZLGdCQUFXLEdBQVgsV0FBVyxDQUFRO1FBRXpGLEdBQUcsQ0FBQyxLQUFLLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBaUIsRUFBRSxFQUFFO1lBQ3hDLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxPQUFPLENBQUMsTUFBTSxFQUFFO2dCQUN2QyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7YUFDM0M7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLE1BQXVCO1FBQ3ZELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDeEMsTUFBTSxFQUFFLFVBQVUsRUFBRSxHQUFHLE1BQU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUE7UUFFNUQsTUFBTSxHQUFHLEdBQUcsTUFBTSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtRQUUvQyxPQUFPLElBQUksZ0JBQWdCLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDeEQsQ0FBQztJQUVELElBQUksQ0FBQyxLQUFhLEVBQUUsR0FBRyxJQUFXO1FBQ2hDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ2hCLEtBQUs7WUFDTCxJQUFJO1lBQ0osTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXO1NBQ2IsQ0FBQyxDQUFBO1FBQ2QsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQTtJQUM1QixDQUFDO0NBQ0Y7QUEzQkQsNENBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnbWV0YXZlcnNlLXJwYy9saWIvY29tbW9uL2NvcmUvRXZlbnREaXNwYXRjaGVyJ1xuaW1wb3J0IHsgU2NyaXB0YWJsZVNjZW5lIH0gZnJvbSAnLidcblxuZXhwb3J0IGludGVyZmFjZSBJTWVzc2FnZSB7XG4gIGV2ZW50OiBzdHJpbmdcbiAgYXJnczogYW55W11cbiAgc2VuZGVyOiBzdHJpbmdcbn1cblxuLyoqXG4gKiBNZXNzYWdlQnVzQ2xpZW50IHByb3ZpZGVzIGFuIGVhc3kgd2F5IHRvIHNlbmQgYW5kIHJldmVpdmUgcGVlciB0byBwZWVyXG4gKiBtZXNzYWdlcyB0aHJ1IHRoZSBjb21tdW5pY2F0aW9ucyBpbnRlcmZhY2Ugb2YgRGVjZW50cmFsYW5kLlxuICpcbiAqIFRoZSB1c2FnZSBpcyBzaW1wbGUsIGl0IGltcGxlbWVudHMgYSBwdWItc3ViIHBhdHRlcm4gdGhhdCBzaGFyZXMgbWVzc2FnZXNcbiAqIHVzaW5nIHRoZSBjb25uZWN0aW9uIHRoYXQgYWxyZWFkeSBleGlzdHMgYmV0d2VlbiBwZWVycy5cbiAqXG4gKiBAZXhhbXBsZSBpbnNpZGUgeW91ciBTY3JpcHRhYmxlU2NlbmVcbiAqIGBgYHRzXG4gKiAgIGxldCBtZXNzYWdlQnVzQ2xpZW50ID0gYXdhaXQgTWVzc2FnZUJ1c0NsaWVudC5hY3F1aXJlRXN0YXRlQ2hhbm5lbCh0aGlzKVxuICogICBtZXNzYWdlQnVzQ2xpZW50Lm9uKCdhIG1lc3NhZ2UgbmFtZScsIChtZXNzYWdlKSA9PiB7Li4ufSlcbiAqICAgbWVzc2FnZUJ1c0NsaWVudC5lbWl0KCdhIG1lc3NhZ2UgbmFtZScsIG1lc3NhZ2UpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2VCdXNDbGllbnQ8VCA9IGFueT4gZXh0ZW5kcyBFdmVudERpc3BhdGNoZXI8VD4ge1xuICBwcml2YXRlIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBhcGk6IGFueSwgcHJvdGVjdGVkIGlkOiBzdHJpbmcsIHByb3RlY3RlZCBidXNDbGllbnRJZDogc3RyaW5nKSB7XG4gICAgc3VwZXIoKVxuICAgIGFwaVtgb24ke3RoaXMuaWR9YF0oKG1lc3NhZ2U6IElNZXNzYWdlKSA9PiB7XG4gICAgICBpZiAodGhpcy5idXNDbGllbnRJZCAhPT0gbWVzc2FnZS5zZW5kZXIpIHtcbiAgICAgICAgc3VwZXIuZW1pdChtZXNzYWdlLmV2ZW50LCAuLi5tZXNzYWdlLmFyZ3MpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBhY3F1aXJlRXN0YXRlQ2hhbm5lbChzeXN0ZW06IFNjcmlwdGFibGVTY2VuZSkge1xuICAgIGNvbnN0IGJ1c0lkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNilcbiAgICBjb25zdCB7IE1lc3NhZ2VCdXMgfSA9IGF3YWl0IHN5c3RlbS5sb2FkQVBJcyhbJ01lc3NhZ2VCdXMnXSlcblxuICAgIGNvbnN0IGJ1cyA9IGF3YWl0IE1lc3NhZ2VCdXMuZ2V0RXN0YXRlQ2hhbm5lbCgpXG5cbiAgICByZXR1cm4gbmV3IE1lc3NhZ2VCdXNDbGllbnQoTWVzc2FnZUJ1cywgYnVzLmlkLCBidXNJZClcbiAgfVxuXG4gIGVtaXQoZXZlbnQ6IHN0cmluZywgLi4uYXJnczogYW55W10pIHtcbiAgICB0aGlzLmFwaVt0aGlzLmlkXSh7XG4gICAgICBldmVudCxcbiAgICAgIGFyZ3MsXG4gICAgICBzZW5kZXI6IHRoaXMuYnVzQ2xpZW50SWRcbiAgICB9IGFzIElNZXNzYWdlKVxuICAgIHN1cGVyLmVtaXQoZXZlbnQsIC4uLmFyZ3MpXG4gIH1cbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/MessageBus.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/ScriptableScene.js":
/*!***********************************************************!*\
  !*** ./node_modules/metaverse-api/lib/ScriptableScene.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/metaverse-api/lib/index.js\");\nconst future_1 = __webpack_require__(/*! ./utils/future */ \"./node_modules/metaverse-api/lib/utils/future.js\");\nexports.defer = Promise.resolve().then.bind(Promise.resolve());\n/** Managed queue of dirty components to be re-rendered */\nlet items = [];\nfunction enqueueRender(scene) {\n    if (!scene._dirty) {\n        scene._dirty = true;\n        if (items.push(scene) === 1) {\n            exports.defer(rerender);\n        }\n    }\n}\nfunction rerender() {\n    let p;\n    const list = items;\n    items = [];\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((p = list.pop())) {\n        if (p._dirty)\n            renderScriptableScene(p);\n    }\n}\nfunction filterNonFalsy($) {\n    return !!$;\n}\nfunction recursiveRender(tree) {\n    if (typeof tree === 'string') {\n        // tslint:disable-next-line:no-console\n        console.error('Warning, you are trying to render a text');\n        return null;\n    }\n    if (typeof tree.tag === 'function') {\n        const hoc = tree.tag;\n        if (hoc.prototype && hoc.prototype.render) {\n            throw new Error('Only function components are allowed');\n        }\n        return hoc(Object.assign({}, tree.attrs, { children: tree.children }));\n    }\n    if (!tree || !tree.tag)\n        return null;\n    return {\n        tag: tree.tag,\n        attrs: tree.attrs,\n        children: tree.children.map(recursiveRender).filter(filterNonFalsy)\n    };\n}\nexports.recursiveRender = recursiveRender;\n/**\n * Render a ScriptableScene, triggering necessary lifecycle events and taking High-Order ScriptableScenes into account.\n * @param {ScriptableScene} scene\n * @internal\n */\nfunction renderScriptableScene(scene, force) {\n    let props = scene.props;\n    let state = scene.state;\n    let previousProps = scene.prevProps || props;\n    let previousState = scene.prevState || state;\n    let skip = false;\n    const isUpdate = !!scene._component;\n    // if updating\n    if (isUpdate) {\n        scene.props = previousProps;\n        scene.state = previousState;\n        if (!force && scene.shouldSceneUpdate && scene.shouldSceneUpdate(props, state) === false) {\n            skip = true;\n        }\n        scene.props = props;\n        scene.state = state;\n    }\n    scene.prevProps = scene.prevState = null;\n    scene._dirty = false;\n    if (!skip) {\n        let rendererResult = scene.render(props, state);\n        if (!('then' in rendererResult && 'catch' in rendererResult)) {\n            rendererResult = Promise.resolve(rendererResult);\n        }\n        rendererResult\n            .then(recursiveRender)\n            .then(async (rendered) => {\n            if (!rendered) {\n                throw new Error('the async render() method yielded an empty result');\n            }\n            scene._component = rendered;\n            if (scene.sceneDidUpdate) {\n                await scene.sceneDidUpdate(previousProps, previousState);\n            }\n            await scene.connectionFuture;\n            try {\n                // TODO(agus): diff/patch\n                await scene.entityController.render(rendered);\n            }\n            catch (e) {\n                if (e.message === _1.Constants.ReplaceWholeTreeException) {\n                    await scene.entityController.render(rendered);\n                }\n                else {\n                    throw e;\n                }\n            }\n        })\n            .catch(err => {\n            // tslint:disable-next-line:no-console\n            console.error(err);\n        });\n    }\n}\nexports.renderScriptableScene = renderScriptableScene;\n/**\n * Base Scene class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @public\n *\n * @example\n * class MyFoo extends ScriptableScene {\n *   async render() {\n *     return <sphere />;\n *   }\n * }\n */\nclass ScriptableScene extends _1.Script {\n    constructor() {\n        super(...arguments);\n        // @internal\n        this._dirty = true;\n        // @internal\n        this.prevProps = null;\n        // @internal\n        this.prevState = null;\n        // @internal\n        this._component = null;\n        this.state = {};\n        // @internal\n        this.connectionFuture = future_1.future();\n    }\n    /**\n     * Update scene state by copying properties from `state` to `this.state`.\n     * @param {object} state A hash of state properties to update with new values\n     */\n    setState(state) {\n        let s = this.state;\n        if (!this.prevState)\n            this.prevState = Object.assign({}, s);\n        Object.assign(s, typeof state === 'function' ? state(s, this.props) : state);\n        enqueueRender(this);\n    }\n    /**\n     * Immediately perform a synchronous re-render of the component.\n     */\n    forceUpdate() {\n        renderScriptableScene(this, true);\n    }\n    /**\n     * It makes a subscription to remote events, those events occur in the context of the game and are sent thru the wire\n     * protocol.\n     *\n     * @param event name of the remote event to listen\n     * @param handler an async\n     */\n    subscribeTo(event, handler) {\n        // tslint:disable-next-line:no-floating-promises\n        this.connectionFuture.then(() => {\n            this.eventSubscriber.on(event, x => {\n                const ret = handler(x.data);\n                if (ret && 'catch' in ret && typeof ret.catch === 'function') {\n                    ret.catch(err => this.emit('error', err));\n                }\n            });\n        });\n    }\n    /**\n     * Get a standard ethereum provider\n     * Please notice this is highly experimental and might change in the future.\n     *\n     * method whitelist = [\n     *   'eth_sendTransaction',\n     *   'eth_getTransactionReceipt',\n     *   'eth_estimateGas',\n     *   'eth_call',\n     *   'eth_getBalance',\n     *   'eth_getStorageAt',\n     *   'eth_blockNumber',\n     *   'eth_getBlockByNumber',\n     *   'eth_gasPrice',\n     *   'eth_protocolVersion',\n     *   'net_version',\n     *   'web3_sha3',\n     *   'web3_clientVersion',\n     *   'eth_getTransactionCount'\n     * ]\n     */\n    async getEthereumProvider() {\n        const { experimentalEthereumController } = await this.loadAPIs(['experimentalEthereumController']);\n        return {\n            // @internal\n            send() {\n                throw new Error('Decentraland provider only allows async calls');\n            },\n            sendAsync(message, callback) {\n                experimentalEthereumController\n                    .sendAsync(message)\n                    .then((x) => callback(null, x))\n                    .catch(callback);\n            }\n        };\n    }\n    // @internal\n    async systemDidEnable() {\n        this.props = (await this.entityController.getOwnAttributes());\n        // we create an event subscriber\n        this.eventSubscriber = new _1.EventSubscriber(this.entityController);\n        this.on('SIGKILL', () => {\n            if (this.sceneWillUnmount) {\n                this.sceneWillUnmount();\n            }\n        });\n        this.subscribeTo('setAttributes', newProps => {\n            this.prevProps = this.props;\n            this.props = newProps;\n            enqueueRender(this);\n        });\n        this.connectionFuture.resolve(this);\n        renderScriptableScene(this, true);\n        if (this.sceneDidMount) {\n            await this.sceneDidMount();\n        }\n    }\n}\n__decorate([\n    _1.inject('EntityController'),\n    __metadata(\"design:type\", Object)\n], ScriptableScene.prototype, \"entityController\", void 0);\nexports.ScriptableScene = ScriptableScene;\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/ScriptableScene.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/events.js":
/*!**************************************************!*\
  !*** ./node_modules/metaverse-api/lib/events.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createEvent(event, data) {\n    return { event, data };\n}\nexports.createEvent = createEvent;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2V2ZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQXdGQSxxQkFBbUQsS0FBUSxFQUFFLElBQWdCO0lBQzNFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUE7QUFDeEIsQ0FBQztBQUZELGtDQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjdG9yM0NvbXBvbmVudCwgUXVhdGVybmlvbiB9IGZyb20gJy4vaW50ZXJmYWNlcydcblxuZXhwb3J0IHR5cGUgUG9pbnRlckV2ZW50ID0ge1xuICAvKiogT3JpZ2luIG9mIHRoZSByYXkgKi9cbiAgZnJvbTogVmVjdG9yM0NvbXBvbmVudFxuICAvKiogRGlyZWN0aW9uIHZlY3RvciBvZiB0aGUgcmF5IChub3JtYWxpemVkKSAqL1xuICBkaXJlY3Rpb246IFZlY3RvcjNDb21wb25lbnRcbiAgLyoqIExlbmd0aCBvZiB0aGUgcmF5ICovXG4gIGxlbmd0aDogbnVtYmVyXG4gIC8qKiBJRCBvZiB0aGUgcG9pbnRlciB0aGF0IHRyaWdnZXJlZCB0aGUgZXZlbnQgKi9cbiAgcG9pbnRlcklkOiBudW1iZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRXZlbnRzIHtcbiAgLyoqXG4gICAqIGBwb3NpdGlvbkNoYW5nZWRgIGlzIHRyaWdnZXJlZCB3aGVuIHRoZSBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhIGNoYW5nZXNcbiAgICogVGhpcyBldmVudCBpcyB0aHJvdHRsZWQgdG8gMTAgdGltZXMgcGVyIHNlY29uZC5cbiAgICovXG4gIHBvc2l0aW9uQ2hhbmdlZDoge1xuICAgIC8qKiBQb3NpdGlvbiByZWxhdGl2ZSB0byB0aGUgYmFzZSBwYXJjZWwgb2YgdGhlIHNjZW5lICovXG4gICAgcG9zaXRpb246IFZlY3RvcjNDb21wb25lbnRcblxuICAgIC8qKiBDYW1lcmEgcG9zaXRpb24sIHRoaXMgaXMgYSBhYnNvbHV0ZSB3b3JsZCBwb3NpdGlvbiAqL1xuICAgIGNhbWVyYVBvc2l0aW9uOiBWZWN0b3IzQ29tcG9uZW50XG5cbiAgICAvKiogRXllIGhlaWdodCwgaW4gbWV0ZXJzLiAqL1xuICAgIHBsYXllckhlaWdodDogbnVtYmVyXG4gIH1cblxuICAvKipcbiAgICogYHJvdGF0aW9uQ2hhbmdlZGAgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHJvdGF0aW9uIG9mIHRoZSBjYW1lcmEgY2hhbmdlcy5cbiAgICogVGhpcyBldmVudCBpcyB0aHJvdHRsZWQgdG8gMTAgdGltZXMgcGVyIHNlY29uZC5cbiAgICovXG4gIHJvdGF0aW9uQ2hhbmdlZDoge1xuICAgIC8qKiB7WCxZLFp9IERlZ3JlZSB2ZWN0b3IuIFNhbWUgYXMgZW50aXRpZXMgKi9cbiAgICByb3RhdGlvbjogVmVjdG9yM0NvbXBvbmVudFxuICAgIC8qKiBSb3RhdGlvbiBxdWF0ZXJuaW9uLCB1c2VmdWwgaW4gc29tZSBzY2VuYXJpb3MuICovXG4gICAgcXVhdGVybmlvbjogUXVhdGVybmlvblxuICB9XG5cbiAgLyoqXG4gICAqIGBzZXRBdHRyaWJ1dGVzYCBpcyB0cmlnZ2VyZWQgYWZ0ZXIgdGhlIHN5c3RlbSByZWNlaXZlcyBuZXcgcHJvcGVydGllcy5cbiAgICovXG4gIHNldEF0dHJpYnV0ZXM6IHtcbiAgICBba2V5OiBzdHJpbmddOiBhbnlcbiAgfVxuXG4gIC8qKlxuICAgKiBgY2xpY2tgIGlzIHRyaWdnZXJlZCB3aGVuIGEgdXNlciBwb2ludHMgYW5kIHRoZSByYXkgKGZyb20gbW91c2Ugb3IgY29udHJvbGxlcikgaGl0cyB0aGUgZW50aXR5LlxuICAgKiBOb3RpY2U6IE9ubHkgZW50aXRpZXMgd2l0aCBJRCB3aWxsIGJlIGxpc3RlbmluZyBmb3IgY2xpY2sgZXZlbnRzLlxuICAgKi9cbiAgY2xpY2s6IHtcbiAgICAvKiogSUQgb2YgdGhlIGVudGl0aXkgb2YgdGhlIGV2ZW50ICovXG4gICAgZWxlbWVudElkOiBzdHJpbmdcblxuICAgIC8qKiBJRCBvZiB0aGUgcG9pbnRlciB0aGF0IHRyaWdnZXJlZCB0aGUgZXZlbnQgKi9cbiAgICBwb2ludGVySWQ6IG51bWJlclxuICB9XG5cbiAgLyoqXG4gICAqIGBwb2ludGVyVXBgIGlzIHRyaWdnZXJlZCB3aGVuIHRoZSB1c2VyIHJlbGVhc2VzIGFuIGlucHV0IHBvaW50ZXIuXG4gICAqIEl0IGNvdWxkIGJlIGEgVlIgY29udHJvbGxlciwgYSB0b3VjaCBzY3JlZW4gb3IgdGhlIG1vdXNlLlxuICAgKi9cbiAgcG9pbnRlclVwOiBQb2ludGVyRXZlbnRcblxuICAvKipcbiAgICogYHBvaW50ZXJEb3duYCBpcyB0cmlnZ2VyZWQgd2hlbiB0aGUgdXNlciBwcmVzcyBhbiBpbnB1dCBwb2ludGVyLlxuICAgKiBJdCBjb3VsZCBiZSBhIFZSIGNvbnRyb2xsZXIsIGEgdG91Y2ggc2NyZWVuIG9yIHRoZSBtb3VzZS5cbiAgICovXG4gIHBvaW50ZXJEb3duOiBQb2ludGVyRXZlbnRcblxuICAvKipcbiAgICogYGNoYW5nZWRgIGlzIHRyaWdnZXJlZCB3aGVuIGFuIGVudGl0eSBjaGFuZ2VzIGl0cyBvd24gaW50ZXJuYWwgc3RhdGUuXG4gICAqIERpc3BhdGNoZWQgYnkgdGhlIGBpbnB1dC10ZXh0YCBlbnRpdHkgd2hlbiB0aGUgdmFsdWUgaXMgY2hhbmdlZC5cbiAgICovXG4gIGNoYW5nZWQ6IHtcbiAgICBlbGVtZW50SWQ6IHN0cmluZ1xuICAgIHZhbHVlOiBhbnlcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBJRXZlbnROYW1lcyA9IGtleW9mIElFdmVudHNcblxuZXhwb3J0IHR5cGUgUlBDRXZlbnQ8SyBleHRlbmRzIElFdmVudE5hbWVzLCBEID0gYW55PiA9IHtcbiAgZXZlbnQ6IEtcbiAgZGF0YTogRFxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXZlbnQ8VCBleHRlbmRzIElFdmVudE5hbWVzPihldmVudDogVCwgZGF0YTogSUV2ZW50c1tUXSk6IFJQQ0V2ZW50PFQsIElFdmVudHNbVF0+IHtcbiAgcmV0dXJuIHsgZXZlbnQsIGRhdGEgfVxufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/events.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/metaverse-api/lib/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! metaverse-rpc */ \"./node_modules/metaverse-rpc/lib/client/index.js\"));\n__export(__webpack_require__(/*! metaverse-rpc/lib/common/transports/WebWorker */ \"./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js\"));\n__export(__webpack_require__(/*! metaverse-rpc/lib/common/transports/WebSocket */ \"./node_modules/metaverse-rpc/lib/common/transports/WebSocket.js\"));\n__export(__webpack_require__(/*! metaverse-rpc/lib/common/core/EventDispatcher */ \"./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js\"));\n__export(__webpack_require__(/*! ./interfaces */ \"./node_modules/metaverse-api/lib/interfaces.js\"));\n__export(__webpack_require__(/*! ./events */ \"./node_modules/metaverse-api/lib/events.js\"));\n__export(__webpack_require__(/*! ./MessageBus */ \"./node_modules/metaverse-api/lib/MessageBus.js\"));\nconst ScriptableScene_1 = __webpack_require__(/*! ./ScriptableScene */ \"./node_modules/metaverse-api/lib/ScriptableScene.js\");\nexports.ScriptableScene = ScriptableScene_1.ScriptableScene;\nconst createElement_1 = __webpack_require__(/*! ./internal/createElement */ \"./node_modules/metaverse-api/lib/internal/createElement.js\");\nexports.createElement = createElement_1.createElement;\nif (typeof global !== 'undefined') {\n    global['createElement'] = global['createElement'] || createElement_1.createElement;\n}\nelse if (typeof window !== 'undefined') {\n    // tslint:disable-next-line:semicolon\n    window['createElement'] = window['createElement'] || createElement_1.createElement;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxtQ0FBNkI7QUFDN0IsbUVBQTZEO0FBQzdELG1FQUE2RDtBQUM3RCxtRUFBNkQ7QUFDN0Qsa0NBQTRCO0FBQzVCLDhCQUF3QjtBQUd4QixrQ0FBNEI7QUFFNUIsdURBQW1EO0FBRzNCLDBCQUhmLGlDQUFlLENBR2U7QUFGdkMsNERBQXdEO0FBRS9DLHdCQUZBLDZCQUFhLENBRUE7QUFLdEIsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLEVBQUU7SUFDakMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSw2QkFBYSxDQUFBO0NBQ25FO0tBQU0sSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLEVBQUU7SUFDeEMscUNBQXFDO0lBQ3JDLE1BQU0sQ0FBQyxlQUFlLENBQUMsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksNkJBQWEsQ0FBQTtDQUNuRSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ21ldGF2ZXJzZS1ycGMnXG5leHBvcnQgKiBmcm9tICdtZXRhdmVyc2UtcnBjL2xpYi9jb21tb24vdHJhbnNwb3J0cy9XZWJXb3JrZXInXG5leHBvcnQgKiBmcm9tICdtZXRhdmVyc2UtcnBjL2xpYi9jb21tb24vdHJhbnNwb3J0cy9XZWJTb2NrZXQnXG5leHBvcnQgKiBmcm9tICdtZXRhdmVyc2UtcnBjL2xpYi9jb21tb24vY29yZS9FdmVudERpc3BhdGNoZXInXG5leHBvcnQgKiBmcm9tICcuL2ludGVyZmFjZXMnXG5leHBvcnQgKiBmcm9tICcuL2V2ZW50cydcbmV4cG9ydCAqIGZyb20gJy4vSlNYJ1xuZXhwb3J0ICogZnJvbSAnLi9hcGlzJ1xuZXhwb3J0ICogZnJvbSAnLi9NZXNzYWdlQnVzJ1xuXG5pbXBvcnQgeyBTY3JpcHRhYmxlU2NlbmUgfSBmcm9tICcuL1NjcmlwdGFibGVTY2VuZSdcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tICcuL2ludGVybmFsL2NyZWF0ZUVsZW1lbnQnXG5cbmV4cG9ydCB7IGNyZWF0ZUVsZW1lbnQsIFNjcmlwdGFibGVTY2VuZSB9XG5cbmRlY2xhcmUgdmFyIGdsb2JhbDogYW55XG5kZWNsYXJlIHZhciB3aW5kb3c6IGFueVxuXG5pZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgZ2xvYmFsWydjcmVhdGVFbGVtZW50J10gPSBnbG9iYWxbJ2NyZWF0ZUVsZW1lbnQnXSB8fCBjcmVhdGVFbGVtZW50XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzZW1pY29sb25cbiAgd2luZG93WydjcmVhdGVFbGVtZW50J10gPSB3aW5kb3dbJ2NyZWF0ZUVsZW1lbnQnXSB8fCBjcmVhdGVFbGVtZW50XG59XG4iXX0=\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/index.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/interfaces.js":
/*!******************************************************!*\
  !*** ./node_modules/metaverse-api/lib/interfaces.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BillboardModes = {\n    BILLBOARDMODE_NONE: 0,\n    BILLBOARDMODE_X: 1,\n    BILLBOARDMODE_Y: 2,\n    BILLBOARDMODE_Z: 4,\n    BILLBOARDMODE_ALL: 7\n};\nexports.TextureSamplingMode = {\n    NEAREST: 1,\n    BILINEAR: 2,\n    TRILINEAR: 3\n};\nexports.TextureWrapping = {\n    CLAMP: 0,\n    WRAP: 1,\n    MIRROR: 2\n};\nexports.TransparencyModes = {\n    OPAQUE: 0,\n    ALPHATEST: 1,\n    ALPHABLEND: 2,\n    ALPHATESTANDBLEND: 3\n};\nvar Constants;\n(function (Constants) {\n    // DO NOT EVER CHANGE THESE VALUES\n    Constants.ReplaceWholeTreeException = 'ReplaceWholeTreeException';\n})(Constants = exports.Constants || (exports.Constants = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbnRlcmZhY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBcUJhLFFBQUEsY0FBYyxHQUFHO0lBQzVCLGtCQUFrQixFQUFFLENBQUM7SUFDckIsZUFBZSxFQUFFLENBQUM7SUFDbEIsZUFBZSxFQUFFLENBQUM7SUFDbEIsZUFBZSxFQUFFLENBQUM7SUFDbEIsaUJBQWlCLEVBQUUsQ0FBQztDQUNyQixDQUFBO0FBRVksUUFBQSxtQkFBbUIsR0FBRztJQUNqQyxPQUFPLEVBQUUsQ0FBQztJQUNWLFFBQVEsRUFBRSxDQUFDO0lBQ1gsU0FBUyxFQUFFLENBQUM7Q0FDYixDQUFBO0FBRVksUUFBQSxlQUFlLEdBQUc7SUFDN0IsS0FBSyxFQUFFLENBQUM7SUFDUixJQUFJLEVBQUUsQ0FBQztJQUNQLE1BQU0sRUFBRSxDQUFDO0NBQ1YsQ0FBQTtBQUlZLFFBQUEsaUJBQWlCLEdBQUc7SUFDL0IsTUFBTSxFQUFFLENBQUM7SUFDVCxTQUFTLEVBQUUsQ0FBQztJQUNaLFVBQVUsRUFBRSxDQUFDO0lBQ2IsaUJBQWlCLEVBQUUsQ0FBQztDQUNyQixDQUFBO0FBb0lELElBQWlCLFNBQVMsQ0FJekI7QUFKRCxXQUFpQixTQUFTO0lBQ3hCLGtDQUFrQztJQUVyQixtQ0FBeUIsR0FBRywyQkFBMkIsQ0FBQTtBQUN0RSxDQUFDLEVBSmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBSXpCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSUVudGl0eSB9IGZyb20gJy4vaW50ZXJuYWwvYXBwbHlQYXRjaCdcblxuZXhwb3J0IGludGVyZmFjZSBJU2ltcGxpZmllZE5vZGUge1xuICB0YWc6IHN0cmluZ1xuICBjaGlsZHJlbjogSVNpbXBsaWZpZWROb2RlW11cbiAgYXR0cnM6IHsgW25hbWU6IHN0cmluZ106IHN0cmluZyB8IG51bWJlcltdIHwgb2JqZWN0IHwgYm9vbGVhbiB8IG51bWJlciB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWRlbnRpdHkge1xuICBnZXRVc2VyUHVibGljS2V5KCk6IFByb21pc2U8c3RyaW5nPlxufVxuXG5leHBvcnQgdHlwZSBMYW5kRGF0YVZlcnNpb24wID0ge1xuICB2ZXJzaW9uOiAwXG4gIG5hbWU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gIGlwbnM6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBMYW5kRGF0YSA9IExhbmREYXRhVmVyc2lvbjBcblxuZXhwb3J0IGNvbnN0IEJpbGxib2FyZE1vZGVzID0ge1xuICBCSUxMQk9BUkRNT0RFX05PTkU6IDAsXG4gIEJJTExCT0FSRE1PREVfWDogMSxcbiAgQklMTEJPQVJETU9ERV9ZOiAyLFxuICBCSUxMQk9BUkRNT0RFX1o6IDQsXG4gIEJJTExCT0FSRE1PREVfQUxMOiA3XG59XG5cbmV4cG9ydCBjb25zdCBUZXh0dXJlU2FtcGxpbmdNb2RlID0ge1xuICBORUFSRVNUOiAxLFxuICBCSUxJTkVBUjogMixcbiAgVFJJTElORUFSOiAzXG59XG5cbmV4cG9ydCBjb25zdCBUZXh0dXJlV3JhcHBpbmcgPSB7XG4gIENMQU1QOiAwLFxuICBXUkFQOiAxLFxuICBNSVJST1I6IDJcbn1cblxuZXhwb3J0IHR5cGUgSUJpbGxib2FyZE1vZGVzID0gMCB8IDEgfCAyIHwgMyB8IDQgfCA1IHwgNiB8IDdcblxuZXhwb3J0IGNvbnN0IFRyYW5zcGFyZW5jeU1vZGVzID0ge1xuICBPUEFRVUU6IDAsXG4gIEFMUEhBVEVTVDogMSxcbiAgQUxQSEFCTEVORDogMixcbiAgQUxQSEFURVNUQU5EQkxFTkQ6IDNcbn1cblxuZXhwb3J0IHR5cGUgSVRyYW5zcGFyZW5jeU1vZGVzID0gMCB8IDEgfCAyIHwgM1xuXG5leHBvcnQgaW50ZXJmYWNlIElMYW5kIHtcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxuICBoYXNoOiBzdHJpbmdcbiAgb3duZXI6IHN0cmluZ1xuICBsYW5kRGF0YTogTGFuZERhdGFcbiAgc2NlbmU/OiBhbnlcbiAgYmFzZVVybDogc3RyaW5nXG4gIC8vIEhUTUwgaXMgdXNlZCBieSB0aGUgcHJldmlldyBsb2FkZXIgdG8gcGFyc2Ugc2NlbmUgZGF0YSBkaXJlY3RseVxuICAvLyB0byBzdGF0aWNQYXJjZWwuXG4gIGh0bWw/OiBzdHJpbmdcbiAgZGlzdHJpY3Q/OiBzdHJpbmdcbiAgdHlwZT86ICdyb2FkJyB8ICdsYW5kJyB8ICdwbGF6YSdcbn1cblxuLyoqXG4gKiBUaGlzIGRhdGEgdHlwZSBkZWZpbmVzIGEgdHdvIGNvbXBvbmVudCB2ZWN0b3IuXG4gKi9cbmV4cG9ydCB0eXBlIFZlY3RvcjJDb21wb25lbnQgPSB7XG4gIHg6IG51bWJlclxuICB5OiBudW1iZXJcbn1cblxuLyoqXG4gKiBUaGlzIGRhdGEgdHlwZSBkZWZpbmVzIGEgdGhyZWUgY29tcG9uZW50IHZlY3Rvci4gSXQgaXMgdXNlZCBmb3Igc2NhbGluZywgcG9zaXRpb25pbmcgYW5kIHJvdGF0aW9uc1xuICovXG5leHBvcnQgdHlwZSBWZWN0b3IzQ29tcG9uZW50ID0ge1xuICB4OiBudW1iZXJcbiAgeTogbnVtYmVyXG4gIHo6IG51bWJlclxufVxuXG5leHBvcnQgdHlwZSBRdWF0ZXJuaW9uID0ge1xuICB4OiBudW1iZXJcbiAgeTogbnVtYmVyXG4gIHo6IG51bWJlclxuICB3OiBudW1iZXJcbn1cblxuZXhwb3J0IHR5cGUgU291bmRDb21wb25lbnQgPSB7XG4gIC8qKiBEaXN0YW5jZSBmYWRpbmcgbW9kZWwsIGRlZmF1bHQ6ICdsaW5lYXInICovXG4gIGRpc3RhbmNlTW9kZWw/OiAnbGluZWFyJyB8ICdpbnZlcnNlJyB8ICdleHBvbmVudGlhbCdcbiAgLyoqIERvZXMgdGhlIHNvdW5kIGxvb3A/IGRlZmF1bHQ6IGZhbHNlICovXG4gIGxvb3A/OiBib29sZWFuXG4gIC8qKiBUaGUgc3JjIG9mIHRoZSBzb3VuZCB0byBiZSBwbGF5ZWQgKi9cbiAgc3JjOiBzdHJpbmdcbiAgLyoqIFZvbHVtZSBvZiB0aGUgc291bmQsIHZhbHVlcyAwIHRvIDEsIGRlZmF1bHQ6IDEgKi9cbiAgdm9sdW1lPzogbnVtYmVyXG4gIC8qKiBVc2VkIGluIGludmVyc2UgYW5kIGV4cG9uZW50aWFsIGRpc3RhbmNlIG1vZGVscywgZGVmYXVsdDogMSAqL1xuICByb2xsb2ZmRmFjdG9yPzogbnVtYmVyXG4gIC8qKiBJcyB0aGUgc291bmQgcGxheWluZz8sIGRlZmF1bHQ6IHRydWUgKi9cbiAgcGxheWluZz86IGJvb2xlYW5cbn1cblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvblZhbHVlID0ge1xuICBkdXJhdGlvbjogbnVtYmVyXG4gIHRpbWluZz86IFRpbWluZ0Z1bmN0aW9uXG4gIGRlbGF5PzogbnVtYmVyXG59XG5cbmV4cG9ydCB0eXBlIFRpbWluZ0Z1bmN0aW9uID1cbiAgfCAnbGluZWFyJ1xuICB8ICdlYXNlLWluJ1xuICB8ICdlYXNlLW91dCdcbiAgfCAnZWFzZS1pbi1vdXQnXG4gIHwgJ3F1YWRyYXRpYy1pbidcbiAgfCAncXVhZHJhdGljLW91dCdcbiAgfCAncXVhZHJhdGljLWlub3V0J1xuICB8ICdjdWJpYy1pbidcbiAgfCAnY3ViaWMtb3V0J1xuICB8ICdjdWJpYy1pbm91dCdcbiAgfCAncXVhcnRpYy1pbidcbiAgfCAncXVhcnRpYy1vdXQnXG4gIHwgJ3F1YXJ0aWMtaW5vdXQnXG4gIHwgJ3F1aW50aWMtaW4nXG4gIHwgJ3F1aW50aWMtb3V0J1xuICB8ICdxdWludGljLWlub3V0J1xuICB8ICdzaW4taW4nXG4gIHwgJ3Npbi1vdXQnXG4gIHwgJ3Npbi1pbm91dCdcbiAgfCAnZXhwb25lbnRpYWwtaW4nXG4gIHwgJ2V4cG9uZW50aWFsLW91dCdcbiAgfCAnZXhwb25lbnRpYWwtaW5vdXQnXG4gIHwgJ2JvdW5jZS1pbidcbiAgfCAnYm91bmNlLW91dCdcbiAgfCAnYm91bmNlLWlub3V0J1xuICB8ICdlbGFzdGljLWluJ1xuICB8ICdlbGFzdGljLW91dCdcbiAgfCAnZWxhc3RpYy1pbm91dCdcbiAgfCAnY2lyY3VsYXItaW4nXG4gIHwgJ2NpcmN1bGFyLW91dCdcbiAgfCAnY2lyY3VsYXItaW5vdXQnXG4gIHwgJ2JhY2staW4nXG4gIHwgJ2JhY2stb3V0J1xuICB8ICdiYWNrLWlub3V0J1xuXG5leHBvcnQgdHlwZSBUcmFuc2l0aW9uQ29tcG9uZW50ID0ge1xuICBwb3NpdGlvbj86IFRyYW5zaXRpb25WYWx1ZVxuICByb3RhdGlvbj86IFRyYW5zaXRpb25WYWx1ZVxuICBzY2FsZT86IFRyYW5zaXRpb25WYWx1ZVxuICBjb2xvcj86IFRyYW5zaXRpb25WYWx1ZVxuICBsb29rQXQ/OiBUcmFuc2l0aW9uVmFsdWVcbn1cblxuZXhwb3J0IHR5cGUgU2tlbGV0YWxBbmltYXRpb25WYWx1ZSA9IHtcbiAgLyoqXG4gICAqIE5hbWUgb3IgaW5kZXggb2YgdGhlIGFuaW1hdGlvbiBpbiB0aGUgbW9kZWxcbiAgICovXG4gIGNsaXA6IHN0cmluZyB8IG51bWJlclxuXG4gIC8qKlxuICAgKiBEb2VzIHRoZSBhbmltYXRpb24gbG9vcD8sIGRlZmF1bHQ6IHRydWVcbiAgICovXG4gIGxvb3A/OiBib29sZWFuXG5cbiAgLyoqXG4gICAqIFdlaWdodCBvZiB0aGUgYW5pbWF0aW9uLCB2YWx1ZXMgZnJvbSAwIHRvIDEsIHVzZWQgdG8gYmxlbmQgc2V2ZXJhbCBhbmltYXRpb25zLiBkZWZhdWx0OiAxXG4gICAqL1xuICB3ZWlnaHQ/OiBudW1iZXJcblxuICAvKipcbiAgICogSXMgdGhlIGFuaW1hdGlvbiBwbGF5aW5nPyBkZWZhdWx0OiB0cnVlXG4gICAqL1xuICBwbGF5aW5nPzogYm9vbGVhblxufVxuXG5leHBvcnQgdHlwZSBTa2VsZXRhbEFuaW1hdGlvbkNvbXBvbmVudCA9IFNrZWxldGFsQW5pbWF0aW9uVmFsdWVbXVxuXG5leHBvcnQgbmFtZXNwYWNlIENvbnN0YW50cyB7XG4gIC8vIERPIE5PVCBFVkVSIENIQU5HRSBUSEVTRSBWQUxVRVNcblxuICBleHBvcnQgY29uc3QgUmVwbGFjZVdob2xlVHJlZUV4Y2VwdGlvbiA9ICdSZXBsYWNlV2hvbGVUcmVlRXhjZXB0aW9uJ1xufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/interfaces.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/internal/createElement.js":
/*!******************************************************************!*\
  !*** ./node_modules/metaverse-api/lib/internal/createElement.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stack = [];\nfunction createElement(nodeName, attributes) {\n    let children = [];\n    let lastSimple = false;\n    let child;\n    let simple = false;\n    let i;\n    let nodeType;\n    // tslint:disable-next-line:space-within-parens\n    for (i = arguments.length; i-- > 2;) {\n        if (arguments[i] && typeof arguments[i] !== 'string')\n            stack.push(arguments[i]);\n    }\n    if (attributes && attributes.children != null) {\n        if (!stack.length)\n            stack.push(attributes.children);\n        delete attributes.children;\n    }\n    while (stack.length) {\n        // tslint:disable-next-line:no-conditional-assignment\n        if ((child = stack.pop()) && child.pop !== undefined) {\n            // tslint:disable-next-line:space-within-parens\n            for (i = child.length; i--;)\n                stack.push(child[i]);\n        }\n        else {\n            if (typeof child === 'boolean')\n                child = null;\n            nodeType = typeof nodeName;\n            // tslint:disable-next-line:no-conditional-assignment\n            if ((simple = nodeType !== 'function')) {\n                if (child == null)\n                    child = null;\n                else if (typeof child !== 'string')\n                    simple = false;\n            }\n            if (simple && lastSimple) {\n                children[children.length - 1] += child;\n            }\n            else if (child) {\n                children.push(child);\n            }\n            lastSimple = simple;\n        }\n    }\n    return {\n        tag: nodeName,\n        attrs: attributes || {},\n        children: children || []\n    };\n}\nexports.createElement = createElement;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlRWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9jcmVhdGVFbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsTUFBTSxLQUFLLEdBQVUsRUFBRSxDQUFBO0FBMER2Qix1QkFBOEIsUUFBMkIsRUFBRSxVQUFlO0lBQ3hFLElBQUksUUFBUSxHQUFzQixFQUFFLENBQUE7SUFDcEMsSUFBSSxVQUFVLEdBQVksS0FBSyxDQUFBO0lBQy9CLElBQUksS0FBSyxDQUFBO0lBQ1QsSUFBSSxNQUFNLEdBQVksS0FBSyxDQUFBO0lBQzNCLElBQUksQ0FBQyxDQUFBO0lBQ0wsSUFBSSxRQUFnQixDQUFBO0lBRXBCLCtDQUErQztJQUMvQyxLQUFLLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBSTtRQUNwQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxRQUFRO1lBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtLQUMvRTtJQUNELElBQUksVUFBVSxJQUFJLFVBQVUsQ0FBQyxRQUFRLElBQUksSUFBSSxFQUFFO1FBQzdDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTTtZQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ2xELE9BQU8sVUFBVSxDQUFDLFFBQVEsQ0FBQTtLQUMzQjtJQUNELE9BQU8sS0FBSyxDQUFDLE1BQU0sRUFBRTtRQUNuQixxREFBcUQ7UUFDckQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLFNBQVMsRUFBRTtZQUNwRCwrQ0FBK0M7WUFDL0MsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUU7Z0JBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUNuRDthQUFNO1lBQ0wsSUFBSSxPQUFPLEtBQUssS0FBSyxTQUFTO2dCQUFFLEtBQUssR0FBRyxJQUFJLENBQUE7WUFFNUMsUUFBUSxHQUFHLE9BQU8sUUFBUSxDQUFBO1lBRTFCLHFEQUFxRDtZQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsS0FBSyxVQUFVLENBQUMsRUFBRTtnQkFDdEMsSUFBSSxLQUFLLElBQUksSUFBSTtvQkFBRSxLQUFLLEdBQUcsSUFBSSxDQUFBO3FCQUMxQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7b0JBQUUsTUFBTSxHQUFHLEtBQUssQ0FBQTthQUNuRDtZQUVELElBQUksTUFBTSxJQUFJLFVBQVUsRUFBRTtnQkFDeEIsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFBO2FBQ3ZDO2lCQUFNLElBQUksS0FBSyxFQUFFO2dCQUNoQixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO2FBQ3JCO1lBRUQsVUFBVSxHQUFHLE1BQU0sQ0FBQTtTQUNwQjtLQUNGO0lBRUQsT0FBTztRQUNMLEdBQUcsRUFBRSxRQUFRO1FBQ2IsS0FBSyxFQUFFLFVBQVUsSUFBSSxFQUFFO1FBQ3ZCLFFBQVEsRUFBRSxRQUFRLElBQUksRUFBRTtLQUN6QixDQUFBO0FBQ0gsQ0FBQztBQS9DRCxzQ0ErQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY3JpcHRhYmxlU2NlbmUgfSBmcm9tICcuLi9TY3JpcHRhYmxlU2NlbmUnXG5pbXBvcnQgeyBJU2ltcGxpZmllZE5vZGUgfSBmcm9tICcuLi9pbnRlcmZhY2VzJ1xuXG5jb25zdCBzdGFjazogYW55W10gPSBbXVxuXG5leHBvcnQgdHlwZSBDb21wb25lbnRDaGlsZCA9IEpTWC5FbGVtZW50XG5leHBvcnQgdHlwZSBDb21wb25lbnRDaGlsZHJlbiA9IENvbXBvbmVudENoaWxkW11cblxuZXhwb3J0IHR5cGUgQ29tcG9uZW50RmFjdG9yeTxQPiA9IENvbXBvbmVudENvbnN0cnVjdG9yPFA+IHwgRnVuY3Rpb25hbENvbXBvbmVudDxQPlxuXG5leHBvcnQgdHlwZSBSZW5kZXJhYmxlUHJvcHM8UD4gPSBSZWFkb25seTxQPiAmIFJlYWRvbmx5PHsgY2hpbGRyZW4/OiBDb21wb25lbnRDaGlsZHJlbiB9PlxuXG5leHBvcnQgaW50ZXJmYWNlIEZ1bmN0aW9uYWxDb21wb25lbnQ8UHJvcHMgPSB7fT4ge1xuICAocHJvcHM6IFJlbmRlcmFibGVQcm9wczxQcm9wcz4sIGNvbnRleHQ/OiBhbnkpOiBJU2ltcGxpZmllZE5vZGUgfCBudWxsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50Q29uc3RydWN0b3I8UHJvcHMgPSB7fSwgU3RhdGUgPSB7fT4ge1xuICBuZXcgKHByb3BzOiBQcm9wcywgY29udGV4dD86IGFueSk6IFNjcmlwdGFibGVTY2VuZTxQcm9wcywgU3RhdGU+XG59XG5cbi8qKlxuICogSlNYL2h5cGVyc2NyaXB0IHJldml2ZXIuXG4gKiBAc2VlIGh0dHA6Ly9qYXNvbmZvcm1hdC5jb20vd3RmLWlzLWpzeFxuICpcbiAqIENyZWF0ZXMgYSBJU2ltcGxpZmllZE5vZGUgKHZpcnR1YWwgZW50aXR5KS4gQSB0cmVlIG9mIElTaW1wbGlmaWVkTm9kZSBjYW4gYmUgdXNlZCBhcyBhIGxpZ2h0d2VpZ2h0IHJlcHJlc2VudGF0aW9uXG4gKiBvZiB0aGUgc3RydWN0dXJlIG9mIGEgZW50aXR5IHRyZWUuIFRoaXMgc3RydWN0dXJlIGNhbiBiZSByZWFsaXplZCBieSByZWN1cnNpdmVseSBjb21wYXJpbmcgaXQgYWdhaW5zdFxuICogdGhlIGN1cnJlbnQgX2FjdHVhbF8gZW50aXR5IHN0cnVjdHVyZSwgYW5kIGFwcGx5aW5nIG9ubHkgdGhlIGRpZmZlcmVuY2VzLlxuICpcbiAqIGBjcmVhdGVFbGVtZW50KClgIGFjY2VwdHMgYW4gZWxlbWVudCBuYW1lLCBhIGxpc3Qgb2YgYXR0cmlidXRlcy9wcm9wcyxcbiAqIGFuZCBvcHRpb25hbGx5IGNoaWxkcmVuIHRvIGFwcGVuZCB0byB0aGUgZWxlbWVudC5cbiAqXG4gKiBAZXhhbXBsZSBUaGUgZm9sbG93aW5nIGVudGl0eSB0cmVlXG4gKlxuICogYDxib3ggcG9zaXRpb249e3t4OiAxLCB5OiAyLCB6OiAzfX0gLz5gXG4gKlxuICogY2FuIGJlIGNvbnN0cnVjdGVkIHVzaW5nIHRoaXMgZnVuY3Rpb24gYXM6XG4gKlxuICogYGNyZWF0ZUVsZW1lbnQoJ2JveCcsIHsgcG9zaXRpb246IHt4OiAxLCB5OiAyLCB6OiAzfSB9KTtgXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5vZGVOYW1lXHRBbiBlbnRpdHkgbmFtZS4gRXg6IGBzY2VuZWAsIGBib3hgLCBgZ2x0Zi1tb2RlbGAsIGV0Yy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBhdHRyaWJ1dGVzXHRBbnkgYXR0cmlidXRlcy9wcm9wcyB0byBzZXQgb24gdGhlIGNyZWF0ZWQgZW50aXR5LlxuICogQHBhcmFtIHJlc3QgQWRkaXRpb25hbCBhcmd1bWVudHMgYXJlIHRha2VuIHRvIGJlIGNoaWxkcmVuIHRvIGFwcGVuZC4gQ2FuIGJlIGluZmluaXRlbHkgbmVzdGVkIEFycmF5cy5cbiAqXG4gKiBAcHVibGljXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQ8UD4oXG4gIG5vZGU6IENvbXBvbmVudEZhY3Rvcnk8UD4sXG4gIHBhcmFtczogSlNYLkJhc2VFbnRpdHkgJiBQIHwgbnVsbCxcbiAgLi4uY2hpbGRyZW46IChDb21wb25lbnRDaGlsZCB8IENvbXBvbmVudENoaWxkcmVuKVtdXG4pOiBJU2ltcGxpZmllZE5vZGVcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbGVtZW50PEsgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KFxuICBub2RlOiBLLFxuICBwYXJhbXM6IEpTWC5JbnRyaW5zaWNFbGVtZW50c1tLXSxcbiAgLi4uY2hpbGRyZW46IChDb21wb25lbnRDaGlsZCB8IENvbXBvbmVudENoaWxkcmVuKVtdXG4pOiBJU2ltcGxpZmllZE5vZGVcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbGVtZW50KFxuICBub2RlOiBzdHJpbmcsXG4gIHBhcmFtczogUmVjb3JkPHN0cmluZywgYW55PiB8IG51bGwsXG4gIC4uLmNoaWxkcmVuOiAoQ29tcG9uZW50Q2hpbGQgfCBDb21wb25lbnRDaGlsZHJlbilbXVxuKTogSVNpbXBsaWZpZWROb2RlXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWxlbWVudChub2RlTmFtZTogc3RyaW5nIHwgRnVuY3Rpb24sIGF0dHJpYnV0ZXM6IGFueSkge1xuICBsZXQgY2hpbGRyZW46IElTaW1wbGlmaWVkTm9kZVtdID0gW11cbiAgbGV0IGxhc3RTaW1wbGU6IGJvb2xlYW4gPSBmYWxzZVxuICBsZXQgY2hpbGRcbiAgbGV0IHNpbXBsZTogYm9vbGVhbiA9IGZhbHNlXG4gIGxldCBpXG4gIGxldCBub2RlVHlwZTogc3RyaW5nXG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnNwYWNlLXdpdGhpbi1wYXJlbnNcbiAgZm9yIChpID0gYXJndW1lbnRzLmxlbmd0aDsgaS0tID4gMjsgKSB7XG4gICAgaWYgKGFyZ3VtZW50c1tpXSAmJiB0eXBlb2YgYXJndW1lbnRzW2ldICE9PSAnc3RyaW5nJykgc3RhY2sucHVzaChhcmd1bWVudHNbaV0pXG4gIH1cbiAgaWYgKGF0dHJpYnV0ZXMgJiYgYXR0cmlidXRlcy5jaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgaWYgKCFzdGFjay5sZW5ndGgpIHN0YWNrLnB1c2goYXR0cmlidXRlcy5jaGlsZHJlbilcbiAgICBkZWxldGUgYXR0cmlidXRlcy5jaGlsZHJlblxuICB9XG4gIHdoaWxlIChzdGFjay5sZW5ndGgpIHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uZGl0aW9uYWwtYXNzaWdubWVudFxuICAgIGlmICgoY2hpbGQgPSBzdGFjay5wb3AoKSkgJiYgY2hpbGQucG9wICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzcGFjZS13aXRoaW4tcGFyZW5zXG4gICAgICBmb3IgKGkgPSBjaGlsZC5sZW5ndGg7IGktLTsgKSBzdGFjay5wdXNoKGNoaWxkW2ldKVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIGNoaWxkID09PSAnYm9vbGVhbicpIGNoaWxkID0gbnVsbFxuXG4gICAgICBub2RlVHlwZSA9IHR5cGVvZiBub2RlTmFtZVxuXG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uZGl0aW9uYWwtYXNzaWdubWVudFxuICAgICAgaWYgKChzaW1wbGUgPSBub2RlVHlwZSAhPT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgICAgaWYgKGNoaWxkID09IG51bGwpIGNoaWxkID0gbnVsbFxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgY2hpbGQgIT09ICdzdHJpbmcnKSBzaW1wbGUgPSBmYWxzZVxuICAgICAgfVxuXG4gICAgICBpZiAoc2ltcGxlICYmIGxhc3RTaW1wbGUpIHtcbiAgICAgICAgY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV0gKz0gY2hpbGRcbiAgICAgIH0gZWxzZSBpZiAoY2hpbGQpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgIH1cblxuICAgICAgbGFzdFNpbXBsZSA9IHNpbXBsZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdGFnOiBub2RlTmFtZSxcbiAgICBhdHRyczogYXR0cmlidXRlcyB8fCB7fSxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4gfHwgW11cbiAgfVxufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/internal/createElement.js?");

/***/ }),

/***/ "./node_modules/metaverse-api/lib/utils/future.js":
/*!********************************************************!*\
  !*** ./node_modules/metaverse-api/lib/utils/future.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction future() {\n    let resolver = (x) => {\n        throw new Error('Error initilizing mutex');\n    };\n    let rejecter = (x) => {\n        throw x;\n    };\n    const promise = new Promise((ok, err) => {\n        resolver = ok;\n        rejecter = err;\n    });\n    promise.then(() => (promise.isPending = false));\n    promise.catch(() => (promise.isPending = false));\n    promise.resolve = resolver;\n    promise.reject = rejecter;\n    promise.isPending = true;\n    return promise;\n}\nexports.future = future;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnV0dXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL2Z1dHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQU1BO0lBQ0UsSUFBSSxRQUFRLEdBQW1CLENBQUMsQ0FBSSxFQUFFLEVBQUU7UUFDdEMsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFBO0lBQzVDLENBQUMsQ0FBQTtJQUNELElBQUksUUFBUSxHQUF1QixDQUFDLENBQVEsRUFBRSxFQUFFO1FBQzlDLE1BQU0sQ0FBQyxDQUFBO0lBQ1QsQ0FBQyxDQUFBO0lBRUQsTUFBTSxPQUFPLEdBQVEsSUFBSSxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDM0MsUUFBUSxHQUFHLEVBQUUsQ0FBQTtRQUNiLFFBQVEsR0FBRyxHQUFHLENBQUE7SUFDaEIsQ0FBQyxDQUFDLENBQUE7SUFFRixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBQy9DLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUE7SUFFaEQsT0FBTyxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUE7SUFDMUIsT0FBTyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUE7SUFFekIsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7SUFFeEIsT0FBTyxPQUFxQixDQUFBO0FBQzlCLENBQUM7QUF0QkQsd0JBc0JDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgSUZ1dHVyZTxUPiA9IFByb21pc2U8VD4gJiB7XG4gIHJlc29sdmU6ICh4OiBUKSA9PiB2b2lkXG4gIHJlamVjdDogKHg6IEVycm9yKSA9PiB2b2lkXG4gIGlzUGVuZGluZzogYm9vbGVhblxufVxuXG5leHBvcnQgZnVuY3Rpb24gZnV0dXJlPFQgPSBhbnk+KCk6IElGdXR1cmU8VD4ge1xuICBsZXQgcmVzb2x2ZXI6ICh4OiBUKSA9PiB2b2lkID0gKHg6IFQpID0+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGluaXRpbGl6aW5nIG11dGV4JylcbiAgfVxuICBsZXQgcmVqZWN0ZXI6ICh4OiBFcnJvcikgPT4gdm9pZCA9ICh4OiBFcnJvcikgPT4ge1xuICAgIHRocm93IHhcbiAgfVxuXG4gIGNvbnN0IHByb21pc2U6IGFueSA9IG5ldyBQcm9taXNlKChvaywgZXJyKSA9PiB7XG4gICAgcmVzb2x2ZXIgPSBva1xuICAgIHJlamVjdGVyID0gZXJyXG4gIH0pXG5cbiAgcHJvbWlzZS50aGVuKCgpID0+IChwcm9taXNlLmlzUGVuZGluZyA9IGZhbHNlKSlcbiAgcHJvbWlzZS5jYXRjaCgoKSA9PiAocHJvbWlzZS5pc1BlbmRpbmcgPSBmYWxzZSkpXG5cbiAgcHJvbWlzZS5yZXNvbHZlID0gcmVzb2x2ZXJcbiAgcHJvbWlzZS5yZWplY3QgPSByZWplY3RlclxuXG4gIHByb21pc2UuaXNQZW5kaW5nID0gdHJ1ZVxuXG4gIHJldHVybiBwcm9taXNlIGFzIElGdXR1cmU8VD5cbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/metaverse-api/lib/utils/future.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/client/EventSubscriber.js":
/*!******************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/client/EventSubscriber.js ***!
  \******************************************************************/
/*! exports provided: EventSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventSubscriber\", function() { return EventSubscriber; });\n/* harmony import */ var _common_core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/core/EventDispatcher */ \"./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js\");\n\nclass EventSubscriber extends _common_core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"] {\n    constructor(component) {\n        super();\n        this.component = component;\n        component.onSubscribedEvent((data) => {\n            super.emit(data.event, data);\n        });\n    }\n    on(event, handler) {\n        if (this.getEventBindings(event).length === 0) {\n            this.component.subscribe(event).catch(e => this.emit('error', e));\n        }\n        return super.on.apply(this, arguments);\n    }\n    off(event) {\n        let theEventToValidate = null;\n        const offResult = super.off.apply(this, arguments);\n        if (typeof event === 'string') {\n            theEventToValidate = event;\n        }\n        else if (event instanceof _common_core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcherBinding\"]) {\n            event = event.event;\n        }\n        if (theEventToValidate !== null) {\n            if (this.getEventBindings(theEventToValidate).length === 0) {\n                this.component.unsubscribe(theEventToValidate).catch(e => this.emit('error', e));\n            }\n        }\n        return offResult;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRTdWJzY3JpYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC9FdmVudFN1YnNjcmliZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFBO0FBR3hGLE1BQU0sc0JBQXVCLFNBQVEsZUFBZTtJQUNsRCxZQUFvQixTQUEyQjtRQUM3QyxLQUFLLEVBQUUsQ0FBQTtRQURXLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBRzdDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO1lBQ3hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUM5QixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFTRCxFQUFFLENBQUMsS0FBYSxFQUFFLE9BQVk7UUFDNUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUM3QyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQ2xFO1FBQ0QsT0FBTyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUE7SUFDeEMsQ0FBQztJQU9ELEdBQUcsQ0FBQyxLQUFpRDtRQUNuRCxJQUFJLGtCQUFrQixHQUFrQixJQUFJLENBQUE7UUFDNUMsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFBO1FBRWxELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzdCLGtCQUFrQixHQUFHLEtBQUssQ0FBQTtTQUMzQjthQUFNLElBQUksS0FBSyxZQUFZLHNCQUFzQixFQUFFO1lBQ2xELEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFBO1NBQ3BCO1FBRUQsSUFBSSxrQkFBa0IsS0FBSyxJQUFJLEVBQUU7WUFDL0IsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUkxRCxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7YUFDakY7U0FDRjtRQUVELE9BQU8sU0FBUyxDQUFBO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RGlzcGF0Y2hlciwgRXZlbnREaXNwYXRjaGVyQmluZGluZyB9IGZyb20gJy4uL2NvbW1vbi9jb3JlL0V2ZW50RGlzcGF0Y2hlcidcbmltcG9ydCB7IElTdWJzY3JpYmFibGVBUEkgfSBmcm9tICcuLi9ob3N0L0FQSSdcblxuZXhwb3J0IGNsYXNzIEV2ZW50U3Vic2NyaWJlciBleHRlbmRzIEV2ZW50RGlzcGF0Y2hlciB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29tcG9uZW50OiBJU3Vic2NyaWJhYmxlQVBJKSB7XG4gICAgc3VwZXIoKVxuXG4gICAgY29tcG9uZW50Lm9uU3Vic2NyaWJlZEV2ZW50KChkYXRhOiBhbnkpID0+IHtcbiAgICAgIHN1cGVyLmVtaXQoZGF0YS5ldmVudCwgZGF0YSlcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhIG5ldyBsaXN0ZW5lciBmb3IgYW4gc3BlY2lmaWMgZXZlbnQuXG4gICAqIEBwYXJhbSBldmVudCBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIGhhbmRsZXIgQSBoYW5kbGVyIHdoaWNoIGJlIGNhbGxlZCBlYWNoIHRpbWUgdGhlIGV2ZW50IGlzIHJlY2VpdmVkXG4gICAqL1xuICBvbihldmVudDogc3RyaW5nLCBjYWxsYmFjazogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkLCBvbmNlPzogYm9vbGVhbik6IEV2ZW50RGlzcGF0Y2hlckJpbmRpbmdcbiAgb24oZXZlbnQ6IHN0cmluZywgY2FsbGJhY2s6IGFueSwgb25jZT86IGJvb2xlYW4pOiBFdmVudERpc3BhdGNoZXJCaW5kaW5nXG4gIG9uKGV2ZW50OiBzdHJpbmcsIGhhbmRsZXI6IGFueSkge1xuICAgIGlmICh0aGlzLmdldEV2ZW50QmluZGluZ3MoZXZlbnQpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5jb21wb25lbnQuc3Vic2NyaWJlKGV2ZW50KS5jYXRjaChlID0+IHRoaXMuZW1pdCgnZXJyb3InLCBlKSlcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLm9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGEgbGlzdGVuZXIgZm9yIGFuIHNwZWNpZmljIGV2ZW50XG4gICAqIEBwYXJhbSBldmVudCBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIGJpbmRpbmcgQSByZWZlcmVuY2UgdG8gYSBiaW5kaW5nIHJldHVybmVkIGJ5IGEgcHJldmlvdXMgYGFkZEV2ZW50TGlzdGVuZXJgIGNhbGxcbiAgICovXG4gIG9mZihldmVudDogc3RyaW5nIHwgRXZlbnREaXNwYXRjaGVyQmluZGluZyB8IEZ1bmN0aW9uKSB7XG4gICAgbGV0IHRoZUV2ZW50VG9WYWxpZGF0ZTogc3RyaW5nIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBvZmZSZXN1bHQgPSBzdXBlci5vZmYuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuXG4gICAgaWYgKHR5cGVvZiBldmVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoZUV2ZW50VG9WYWxpZGF0ZSA9IGV2ZW50XG4gICAgfSBlbHNlIGlmIChldmVudCBpbnN0YW5jZW9mIEV2ZW50RGlzcGF0Y2hlckJpbmRpbmcpIHtcbiAgICAgIGV2ZW50ID0gZXZlbnQuZXZlbnRcbiAgICB9XG5cbiAgICBpZiAodGhlRXZlbnRUb1ZhbGlkYXRlICE9PSBudWxsKSB7XG4gICAgICBpZiAodGhpcy5nZXRFdmVudEJpbmRpbmdzKHRoZUV2ZW50VG9WYWxpZGF0ZSkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIC8vIElmIHdlIGFyZSByZW1vdmluZyB0aGUgbGFzdCBldmVudCBsaXN0ZW5lciwgcmVtb3ZlIGl0IGFsc28gZnJvbSB0aGUgY29tcG9uZW50XG4gICAgICAgIC8vIHRoaXMgd2lsbCBrZWVwIGxpc3RlbmVycyB1bnJlbGF0ZWQgdG8gdGhlIGNvbXBvbmVudCBpbnRhY3RcblxuICAgICAgICB0aGlzLmNvbXBvbmVudC51bnN1YnNjcmliZSh0aGVFdmVudFRvVmFsaWRhdGUpLmNhdGNoKGUgPT4gdGhpcy5lbWl0KCdlcnJvcicsIGUpKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvZmZSZXN1bHRcbiAgfVxufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/client/EventSubscriber.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/client/Script.js":
/*!*********************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/client/Script.js ***!
  \*********************************************************/
/*! exports provided: inject, getInjectedAPIs, Script */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inject\", function() { return inject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getInjectedAPIs\", function() { return getInjectedAPIs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Script\", function() { return Script; });\n/* harmony import */ var _common_json_rpc_Client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/json-rpc/Client */ \"./node_modules/metaverse-rpc/lib/common/json-rpc/Client.js\");\n/* harmony import */ var _common_json_rpc_API__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/json-rpc/API */ \"./node_modules/metaverse-rpc/lib/common/json-rpc/API.js\");\n/* harmony import */ var _common_core_isPromiseLike__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/core/isPromiseLike */ \"./node_modules/metaverse-rpc/lib/common/core/isPromiseLike.js\");\n\n\n\nconst loadAPIsNotificationName = 'LoadComponents';\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\nconst injectedAPISymbol = hasSymbol ? Symbol('injectedAPIs') : 0xfea0;\nfunction inject(apiName) {\n    if (apiName !== undefined && !apiName) {\n        throw new TypeError('API name cannot be null / empty');\n    }\n    return function (target, propertyKey) {\n        if (typeof propertyKey === 'string') {\n            getInjectedAPIs(target).set(propertyKey, apiName || propertyKey);\n        }\n        else\n            throw new TypeError('Cannot inject APIs with non-string names');\n    };\n}\nfunction getInjectedAPIs(instance) {\n    const instanceAny = instance;\n    instanceAny[injectedAPISymbol] = instanceAny[injectedAPISymbol] || new Map();\n    return instanceAny[injectedAPISymbol];\n}\nasync function _injectAPIs(target) {\n    const injectedMap = getInjectedAPIs(target);\n    if (injectedMap.size === 0)\n        return;\n    await target.loadAPIs(Array.from(injectedMap.values()));\n    injectedMap.forEach(function (apiName, property) {\n        target[property] = target.loadedAPIs[apiName];\n    });\n}\nclass Script extends _common_json_rpc_Client__WEBPACK_IMPORTED_MODULE_0__[\"Client\"] {\n    constructor(transport, opt) {\n        super(opt);\n        this.transport = transport;\n        this.loadedAPIs = {};\n        this.started = false;\n        if (transport.onError) {\n            transport.onError(e => {\n                this.emit('error', e);\n            });\n        }\n        if (transport.onClose) {\n            transport.onClose(() => {\n                this.emit('transportClosed');\n            });\n        }\n        transport.onMessage(message => {\n            this.processMessage(message);\n        });\n        if (transport.onConnect) {\n            transport.onConnect(() => {\n                this.didConnect();\n            });\n        }\n        else {\n            this.didConnect();\n        }\n    }\n    sendMessage(message) {\n        this.transport.sendMessage(message);\n    }\n    async loadAPIs(apiName) {\n        const loadedKeys = Object.keys(this.loadedAPIs);\n        const keysToRequest = apiName.filter(function ($) {\n            return !loadedKeys.includes($);\n        });\n        if (keysToRequest.length) {\n            await this.call(loadAPIsNotificationName, [keysToRequest]);\n            keysToRequest.forEach(async (apiName) => {\n                this.loadedAPIs[apiName] = Object(_common_json_rpc_API__WEBPACK_IMPORTED_MODULE_1__[\"getApi\"])(this, apiName);\n            });\n        }\n        return this.loadedAPIs;\n    }\n    didConnect() {\n        const injection = _injectAPIs(this);\n        super.didConnect();\n        injection\n            .then(() => {\n            if (this.systemDidEnable && !this.started) {\n                this.started = true;\n                try {\n                    const r = this.systemDidEnable();\n                    if (r && Object(_common_core_isPromiseLike__WEBPACK_IMPORTED_MODULE_2__[\"isPromiseLike\"])(r)) {\n                        r.catch(e => this.emit('error', e));\n                    }\n                }\n                catch (e) {\n                    this.emit('error', e);\n                }\n            }\n        })\n            .catch(e => this.emit('error', e));\n    }\n}\nScript.inject = inject;\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/client/Script.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/client/index.js":
/*!********************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/client/index.js ***!
  \********************************************************/
/*! exports provided: WebWorkerTransport, WebSocketTransport, MemoryTransport, inject, getInjectedAPIs, Script, EventSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Script */ \"./node_modules/metaverse-rpc/lib/client/Script.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"inject\", function() { return _Script__WEBPACK_IMPORTED_MODULE_0__[\"inject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getInjectedAPIs\", function() { return _Script__WEBPACK_IMPORTED_MODULE_0__[\"getInjectedAPIs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Script\", function() { return _Script__WEBPACK_IMPORTED_MODULE_0__[\"Script\"]; });\n\n/* harmony import */ var _EventSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventSubscriber */ \"./node_modules/metaverse-rpc/lib/client/EventSubscriber.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventSubscriber\", function() { return _EventSubscriber__WEBPACK_IMPORTED_MODULE_1__[\"EventSubscriber\"]; });\n\n/* harmony import */ var _common_transports_WebWorker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/transports/WebWorker */ \"./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WebWorkerTransport\", function() { return _common_transports_WebWorker__WEBPACK_IMPORTED_MODULE_2__[\"WebWorkerTransport\"]; });\n\n/* harmony import */ var _common_transports_WebSocket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/transports/WebSocket */ \"./node_modules/metaverse-rpc/lib/common/transports/WebSocket.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WebSocketTransport\", function() { return _common_transports_WebSocket__WEBPACK_IMPORTED_MODULE_3__[\"WebSocketTransport\"]; });\n\n/* harmony import */ var _common_transports_Memory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/transports/Memory */ \"./node_modules/metaverse-rpc/lib/common/transports/Memory.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MemoryTransport\", function() { return _common_transports_Memory__WEBPACK_IMPORTED_MODULE_4__[\"MemoryTransport\"]; });\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xpZW50L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLGNBQWMsVUFBVSxDQUFBO0FBQ3hCLGNBQWMsbUJBQW1CLENBQUE7QUFFakMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUE7QUFDbkUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUE7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xuXG5leHBvcnQgKiBmcm9tICcuL1NjcmlwdCdcbmV4cG9ydCAqIGZyb20gJy4vRXZlbnRTdWJzY3JpYmVyJ1xuXG5leHBvcnQgeyBXZWJXb3JrZXJUcmFuc3BvcnQgfSBmcm9tICcuLi9jb21tb24vdHJhbnNwb3J0cy9XZWJXb3JrZXInXG5leHBvcnQgeyBXZWJTb2NrZXRUcmFuc3BvcnQgfSBmcm9tICcuLi9jb21tb24vdHJhbnNwb3J0cy9XZWJTb2NrZXQnXG5leHBvcnQgeyBNZW1vcnlUcmFuc3BvcnQgfSBmcm9tICcuLi9jb21tb24vdHJhbnNwb3J0cy9NZW1vcnknXG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/client/index.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js":
/*!***********************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js ***!
  \***********************************************************************/
/*! exports provided: EventDispatcherBinding, EventDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventDispatcherBinding\", function() { return EventDispatcherBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventDispatcher\", function() { return EventDispatcher; });\nconst eventSplitter = /\\s+/g;\nclass EventDispatcherBinding {\n    constructor(id, cb, event, sharedList, object) {\n        this.id = id;\n        this.cb = cb;\n        this.event = event;\n        this.sharedList = sharedList;\n        this.object = object;\n        this.enabled = true;\n    }\n    off() {\n        if (this.object) {\n            this.cb && this.object.off(this);\n            this.cb = null;\n            this.object = null;\n            if (this.sharedList) {\n                delete this.sharedList;\n            }\n        }\n    }\n    enable() {\n        if (this.sharedList) {\n            for (let i = 0; i < this.sharedList.length; i++) {\n                this.sharedList[i].enabled = true;\n            }\n        }\n        else\n            this.enabled = true;\n    }\n    disable() {\n        if (this.sharedList) {\n            for (let i = 0; i < this.sharedList.length; i++) {\n                this.sharedList[i].enabled = false;\n            }\n        }\n        else {\n            this.enabled = false;\n        }\n    }\n}\nfunction turnOffCallback(f) {\n    delete f.cb;\n}\nclass EventDispatcher {\n    constructor() {\n        this.edBindings = {};\n        this.edBindCount = 0;\n    }\n    on(event, callback, once) {\n        this.edBindCount++;\n        let events = event.split(eventSplitter);\n        let bindList = [];\n        let latest = null;\n        for (let evt of events) {\n            let tmp = new EventDispatcherBinding(this.edBindCount, null, evt, bindList, this);\n            bindList && bindList.push(tmp);\n            if (once) {\n                tmp.cb = function () {\n                    callback.apply(this, arguments);\n                    tmp.cb = null;\n                }.bind(this);\n            }\n            else {\n                tmp.cb = callback.bind(this);\n            }\n            this.edBindings[evt] = this.edBindings[evt] || [];\n            this.edBindings[evt].push(tmp);\n            latest = tmp;\n        }\n        return latest;\n    }\n    once(event, callback) {\n        return this.on(event, callback, true);\n    }\n    off(arg0, arg1) {\n        if (arguments.length === 0) {\n            for (let i in this.edBindings) {\n                for (let e in this.edBindings[i]) {\n                    delete this.edBindings[i][e].cb;\n                }\n                this.edBindings[i].length = 0;\n            }\n        }\n        else if (arg0 instanceof EventDispatcherBinding) {\n            arg0.cb = null;\n            arg0.sharedList && arg0.sharedList.length && arg0.sharedList.forEach(turnOffCallback);\n        }\n        else if (typeof arg0 === 'string') {\n            if (typeof arg1 === 'function') {\n                for (let i in this.edBindings[arg0]) {\n                    if (this.edBindings[arg0][i].cb === arg1) {\n                        this.edBindings[arg0][i].cb = null;\n                    }\n                }\n            }\n            else if (typeof arg0 === 'string') {\n                this.edBindings[arg0] = [];\n            }\n        }\n        else if (typeof arg0 === 'function') {\n            for (let evt in this.edBindings) {\n                for (let i in this.edBindings[evt]) {\n                    if (this.edBindings[evt][i].cb === arg0) {\n                        this.edBindings[evt][i].cb = null;\n                    }\n                }\n            }\n        }\n    }\n    emit(event) {\n        if (event in this.edBindings) {\n            if (arguments.length === 1) {\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb();\n                }\n            }\n            else if (arguments.length === 2) {\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb(arguments[1]);\n                }\n            }\n            else if (arguments.length === 3) {\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb(arguments[1], arguments[2]);\n                }\n            }\n            else if (arguments.length === 4) {\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb(arguments[1], arguments[2], arguments[3]);\n                }\n            }\n            else if (arguments.length === 5) {\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb(arguments[1], arguments[2], arguments[3], arguments[4]);\n                }\n            }\n            else if (arguments.length > 4) {\n                let args = Array.prototype.slice.call(arguments, 1);\n                for (let i = 0; i < this.edBindings[event].length; i++) {\n                    let e = this.edBindings[event][i];\n                    e && e.cb && e.enabled && e.cb.apply(this, args);\n                }\n            }\n        }\n        else if (event === 'error') {\n            const firstArgument = arguments[1];\n            let error = null;\n            if (firstArgument instanceof Error) {\n                error = firstArgument;\n            }\n            else {\n                error = Object.assign(new Error('EventDispatcher: Unhandled \"error\" event'), { data: arguments });\n            }\n            console.error(error);\n            console.trace(arguments);\n            throw error;\n        }\n    }\n    getEventBindings(event) {\n        return (this.edBindings[event] || []).filter($ => $ && $.enabled);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/core/isPromiseLike.js":
/*!*********************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/core/isPromiseLike.js ***!
  \*********************************************************************/
/*! exports provided: isPromiseLike */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPromiseLike\", function() { return isPromiseLike; });\nfunction isPromiseLike(thing) {\n    return (thing &&\n        typeof thing === 'object' &&\n        typeof thing['then'] === 'function' &&\n        typeof thing['catch'] === 'function');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNQcm9taXNlTGlrZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vY29yZS9pc1Byb21pc2VMaWtlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sd0JBQXdCLEtBQVU7SUFDdEMsT0FBTyxDQUNMLEtBQUs7UUFFTCxPQUFPLEtBQUssS0FBSyxRQUFRO1FBRXpCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLFVBQVU7UUFFbkMsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssVUFBVSxDQUNyQyxDQUFBO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2VMaWtlKHRoaW5nOiBQcm9taXNlPGFueT4pOiB0cnVlXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlTGlrZSh0aGluZzogdm9pZCk6IGZhbHNlXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlTGlrZSh0aGluZzogYW55KTogZmFsc2VcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2VMaWtlKHRoaW5nOiBhbnkpOiBib29sZWFuIHtcbiAgcmV0dXJuIChcbiAgICB0aGluZyAmJlxuICAgIC8vIGl0IGlzIGFuIG9iamVjdFxuICAgIHR5cGVvZiB0aGluZyA9PT0gJ29iamVjdCcgJiZcbiAgICAvLyBpdCBoYXMgdGhlblxuICAgIHR5cGVvZiB0aGluZ1sndGhlbiddID09PSAnZnVuY3Rpb24nICYmXG4gICAgLy8gaXQgaGFzIGNhdGNoXG4gICAgdHlwZW9mIHRoaW5nWydjYXRjaCddID09PSAnZnVuY3Rpb24nXG4gIClcbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/core/isPromiseLike.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/json-rpc/API.js":
/*!***************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/json-rpc/API.js ***!
  \***************************************************************/
/*! exports provided: getApi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getApi\", function() { return getApi; });\nconst blacklistedMethods = ['then', 'catch'];\nfunction getApi(rpcClient, _prefix = '') {\n    if (!Proxy) {\n        throw new Error('getApi() requires ES6 Proxy. Please use an ES6 compatible engine');\n    }\n    const prefix = _prefix === '' ? '' : `${_prefix}.`;\n    return new Proxy({}, {\n        get: (target, prop) => {\n            if (target[prop]) {\n                return target[prop];\n            }\n            if (prop === '__proto__' || prop === 'prototype') {\n                return Object.prototype;\n            }\n            else if (prop.substr(0, 2) === 'on' && prop.length > 3) {\n                const method = prop.substr(2);\n                target[prop] = (handler) => rpcClient.on(`${prefix}${method}`, (params) => {\n                    try {\n                        if (params && params instanceof Array) {\n                            handler.apply(null, params);\n                        }\n                        else {\n                            handler.call(null, params);\n                        }\n                    }\n                    catch (e) {\n                        rpcClient.emit('error', e);\n                    }\n                });\n            }\n            else if (prop.substr(0, 4) === 'emit' && prop.length > 5) {\n                const method = prop.substr(4);\n                target[prop] = (...args) => rpcClient.notify(`${prefix}${method}`, args);\n            }\n            else if (blacklistedMethods.indexOf(prop) !== -1) {\n                return undefined;\n            }\n            else {\n                const method = prop;\n                target[prop] = (...args) => rpcClient.call(`${prefix}${method}`, args);\n            }\n            return target[prop];\n        }\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQVBJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9qc29uLXJwYy9BUEkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQTtBQVU1QyxNQUFNLGlCQUF5QyxTQUFpQixFQUFFLFVBQWtCLEVBQUU7SUFDcEYsSUFBSSxDQUFDLEtBQUssRUFBRTtRQUNWLE1BQU0sSUFBSSxLQUFLLENBQUMsa0VBQWtFLENBQUMsQ0FBQTtLQUNwRjtJQUVELE1BQU0sTUFBTSxHQUFHLE9BQU8sS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLEdBQUcsQ0FBQTtJQUVsRCxPQUFPLElBQUksS0FBSyxDQUFDLEVBQU8sRUFBRTtRQUN4QixHQUFHLEVBQUUsQ0FBQyxNQUFXLEVBQUUsSUFBWSxFQUFFLEVBQUU7WUFDakMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ2hCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO2FBQ3BCO1lBRUQsSUFBSSxJQUFJLEtBQUssV0FBVyxJQUFJLElBQUksS0FBSyxXQUFXLEVBQUU7Z0JBQ2hELE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQTthQUN4QjtpQkFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDeEQsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQTtnQkFDN0IsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBaUIsRUFBRSxFQUFFLENBQ25DLFNBQVMsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEdBQUcsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFXLEVBQUUsRUFBRTtvQkFDakQsSUFBSTt3QkFDRixJQUFJLE1BQU0sSUFBSSxNQUFNLFlBQVksS0FBSyxFQUFFOzRCQUNyQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQTt5QkFDNUI7NkJBQU07NEJBQ0wsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUE7eUJBQzNCO3FCQUNGO29CQUFDLE9BQU8sQ0FBQyxFQUFFO3dCQUNWLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFBO3FCQUMzQjtnQkFDSCxDQUFDLENBQUMsQ0FBQTthQUNMO2lCQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUMxRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO2dCQUM3QixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQVcsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sR0FBRyxNQUFNLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQTthQUNoRjtpQkFBTSxJQUFJLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDbEQsT0FBTyxTQUFTLENBQUE7YUFDakI7aUJBQU07Z0JBQ0wsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFBO2dCQUNuQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQVcsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sR0FBRyxNQUFNLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQTthQUM5RTtZQUVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3JCLENBQUM7S0FDRixDQUFDLENBQUE7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAnLi9DbGllbnQnXG5cbmNvbnN0IGJsYWNrbGlzdGVkTWV0aG9kcyA9IFsndGhlbicsICdjYXRjaCddXG5cbi8qKlxuICogQnVpbGRzIGFuIEVTNiBQcm94eSB3aGVyZSBhcGkuZG9tYWluLm1ldGhvZChwYXJhbXMpIHRyYW5zYXRlcyBpbnRvIGNsaWVudC5zZW5kKCd7ZG9tYWlufS57bWV0aG9kfScsIHBhcmFtcykgY2FsbHNcbiAqIGFwaS5kb21haW4ub257bWV0aG9kfSB3aWxsIGFkZCBldmVudCBoYW5kbGVycyBmb3Ige21ldGhvZH0gZXZlbnRzXG4gKiBhcGkuZG9tYWluLmVtaXR7bWV0aG9kfSB3aWxsIHNlbmQge21ldGhvZH0gbm90aWZpY2F0aW9ucyB0byB0aGUgc2VydmVyXG4gKiBUaGUgYXBpIG9iamVjdCBsZWFkcyBpdHNlbGYgdG8gYSB2ZXJ5IGNsZWFuIGludGVyZmFjZSBpLmUgYGF3YWl0IGFwaS5Eb21haW4uZnVuYyhwYXJhbXMpYCBjYWxsc1xuICogVGhpcyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGFic3RyYWN0IGFsbCB0aGUgaW50ZXJuYWwgZGV0YWlscyBvZiBtYXJzaGFsbGluZyB0aGUgbWVzc2FnZSBmcm9tIGZ1bmN0aW9uIGNhbGwgdG8gYSBzdHJpbmdcbiAqIENhbGxpbmcgY2xpZW50LmFwaSgnJykgd2lsbCByZXR1cm4gYW4gdW5wcmVmaXhlZCBjbGllbnQuIGUuZyBhcGkuaGVsbG8oKSBpcyBlcXVpdmFsaWVudCB0byBjbGllbnQuc2VuZCgnaGVsbG8nKVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXBpPFQgZXh0ZW5kcyBvYmplY3QgPSBhbnk+KHJwY0NsaWVudDogQ2xpZW50LCBfcHJlZml4OiBzdHJpbmcgPSAnJyk6IFQge1xuICBpZiAoIVByb3h5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdnZXRBcGkoKSByZXF1aXJlcyBFUzYgUHJveHkuIFBsZWFzZSB1c2UgYW4gRVM2IGNvbXBhdGlibGUgZW5naW5lJylcbiAgfVxuXG4gIGNvbnN0IHByZWZpeCA9IF9wcmVmaXggPT09ICcnID8gJycgOiBgJHtfcHJlZml4fS5gXG5cbiAgcmV0dXJuIG5ldyBQcm94eSh7fSBhcyBULCB7XG4gICAgZ2V0OiAodGFyZ2V0OiBhbnksIHByb3A6IHN0cmluZykgPT4ge1xuICAgICAgaWYgKHRhcmdldFtwcm9wXSkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdXG4gICAgICB9XG4gICAgICAvLyBTcGVjaWFsIGhhbmRsaW5nIGZvciBwcm90b3R5cGUgc28gY29uc29sZSBpbnRlbGxpc2Vuc2Ugd29ya3Mgb24gb2JqZWN0c1xuICAgICAgaWYgKHByb3AgPT09ICdfX3Byb3RvX18nIHx8IHByb3AgPT09ICdwcm90b3R5cGUnKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlXG4gICAgICB9IGVsc2UgaWYgKHByb3Auc3Vic3RyKDAsIDIpID09PSAnb24nICYmIHByb3AubGVuZ3RoID4gMykge1xuICAgICAgICBjb25zdCBtZXRob2QgPSBwcm9wLnN1YnN0cigyKVxuICAgICAgICB0YXJnZXRbcHJvcF0gPSAoaGFuZGxlcjogRnVuY3Rpb24pID0+XG4gICAgICAgICAgcnBjQ2xpZW50Lm9uKGAke3ByZWZpeH0ke21ldGhvZH1gLCAocGFyYW1zOiBhbnkpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVyLmFwcGx5KG51bGwsIHBhcmFtcylcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVyLmNhbGwobnVsbCwgcGFyYW1zKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIHJwY0NsaWVudC5lbWl0KCdlcnJvcicsIGUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgIH0gZWxzZSBpZiAocHJvcC5zdWJzdHIoMCwgNCkgPT09ICdlbWl0JyAmJiBwcm9wLmxlbmd0aCA+IDUpIHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gcHJvcC5zdWJzdHIoNClcbiAgICAgICAgdGFyZ2V0W3Byb3BdID0gKC4uLmFyZ3M6IGFueVtdKSA9PiBycGNDbGllbnQubm90aWZ5KGAke3ByZWZpeH0ke21ldGhvZH1gLCBhcmdzKVxuICAgICAgfSBlbHNlIGlmIChibGFja2xpc3RlZE1ldGhvZHMuaW5kZXhPZihwcm9wKSAhPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gcHJvcFxuICAgICAgICB0YXJnZXRbcHJvcF0gPSAoLi4uYXJnczogYW55W10pID0+IHJwY0NsaWVudC5jYWxsKGAke3ByZWZpeH0ke21ldGhvZH1gLCBhcmdzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdXG4gICAgfVxuICB9KVxufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/json-rpc/API.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/json-rpc/Client.js":
/*!******************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/json-rpc/Client.js ***!
  \******************************************************************/
/*! exports provided: Client */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Client\", function() { return Client; });\n/* harmony import */ var _core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/EventDispatcher */ \"./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js\");\n/* harmony import */ var msgpack_lite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! msgpack-lite */ \"./node_modules/msgpack-lite/lib/browser.js\");\n/* harmony import */ var msgpack_lite__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(msgpack_lite__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst codec = Object(msgpack_lite__WEBPACK_IMPORTED_MODULE_1__[\"createCodec\"])();\nclass Client extends _core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"] {\n    constructor(opts) {\n        super();\n        this.sendEncoding = 'JSON';\n        this._responsePromiseMap = new Map();\n        this._nextMessageId = 0;\n        this._consoleLog = false;\n        this._requestQueue = [];\n        this._connected = false;\n        this.setLogging(opts);\n    }\n    processMessage(messageStr) {\n        let message;\n        if (typeof messageStr === 'string' && messageStr.charAt(0) === '{') {\n            this._logMessage(messageStr, 'receive');\n            try {\n                message = JSON.parse(messageStr);\n            }\n            catch (e) {\n                return this.emit('error', e);\n            }\n        }\n        else if (typeof messageStr === 'string' ||\n            messageStr instanceof Uint8Array ||\n            (typeof Buffer !== 'undefined' && messageStr instanceof Buffer) ||\n            messageStr instanceof Array) {\n            message = Object(msgpack_lite__WEBPACK_IMPORTED_MODULE_1__[\"decode\"])(messageStr, { codec });\n        }\n        else {\n            message = messageStr;\n        }\n        if (!message) {\n            this.emit('error', new Error(`Message cannot be null, empty or undefined`));\n        }\n        else if (message.id) {\n            if (this._responsePromiseMap.has(message.id)) {\n                const promise = this._responsePromiseMap.get(message.id);\n                this._responsePromiseMap.delete(message.id);\n                if ('result' in message) {\n                    promise.resolve(message.result);\n                }\n                else if ('error' in message) {\n                    const error = Object.assign(new Error('Remote error'), message.error, (message.error && message.error.data) || {});\n                    promise.reject(error);\n                }\n                else {\n                    promise.reject(Object.assign(new Error(`Response must have result or error: ${messageStr}`), {\n                        code: -32700\n                    }));\n                }\n            }\n            else {\n                this.emit('error', new Error(`Response with id:${message.id} has no pending request`));\n            }\n        }\n        else if (message.method) {\n            this.emit(message.method, message.params);\n        }\n        else {\n            this.emit('error', new Error(`Invalid message: ${messageStr}`));\n        }\n    }\n    setLogging({ logConsole } = {}) {\n        this._consoleLog = !!logConsole;\n    }\n    call(method, params) {\n        if (typeof params !== 'undefined' && typeof params !== 'object') {\n            throw new Error(`Client#call Params must be structured data (Array | Object) got ${JSON.stringify(params)}`);\n        }\n        const id = ++this._nextMessageId;\n        const message = { id, method, params, jsonrpc: '2.0' };\n        return new Promise((resolve, reject) => {\n            try {\n                this._responsePromiseMap.set(id, { resolve, reject });\n                this._send(message);\n            }\n            catch (error) {\n                return reject(error);\n            }\n        });\n    }\n    notify(method, params) {\n        if (typeof params !== 'undefined' && typeof params !== 'object') {\n            throw new Error(`Client#notify Params must be structured data (Array | Object) got ${JSON.stringify(params)}`);\n        }\n        this._send({ method, params, jsonrpc: '2.0' });\n    }\n    didConnect() {\n        if (this._connected === false) {\n            this._connected = true;\n            this._sendQueuedRequests();\n        }\n    }\n    _send(message) {\n        if (this.sendEncoding === 'msgpack') {\n            this._requestQueue.push(Object(msgpack_lite__WEBPACK_IMPORTED_MODULE_1__[\"encode\"])(message, { codec }));\n        }\n        else {\n            this._requestQueue.push(JSON.stringify(message));\n        }\n        this._sendQueuedRequests();\n    }\n    _sendQueuedRequests() {\n        if (this._connected) {\n            const queue = this._requestQueue.splice(0, this._requestQueue.length);\n            for (let messageStr of queue) {\n                this._logMessage(messageStr, 'send');\n                this.sendMessage(messageStr);\n            }\n        }\n    }\n    _logMessage(message, direction) {\n        if (this._consoleLog) {\n            console.log(`Client ${direction === 'send' ? '>' : '<'}`, message.toString());\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/json-rpc/Client.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/transports/Memory.js":
/*!********************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/transports/Memory.js ***!
  \********************************************************************/
/*! exports provided: MemoryTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MemoryTransport\", function() { return MemoryTransport; });\n/* harmony import */ var _core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/EventDispatcher */ \"./node_modules/metaverse-rpc/lib/common/core/EventDispatcher.js\");\n\nfunction MemoryTransport() {\n    const clientEd = new _core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"]();\n    const serverEd = new _core_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"]();\n    function configureMemoryTransport(receiver, sender) {\n        return {\n            sendMessage(message) {\n                sender.emit('message', message);\n            },\n            close() {\n                sender.emit('close');\n            },\n            onMessage(handler) {\n                receiver.on('message', handler);\n            },\n            onClose(handler) {\n                receiver.on('close', handler);\n            },\n            onError(handler) {\n                receiver.on('error', handler);\n            },\n            onConnect(handler) {\n                setInterval(handler, 16);\n            }\n        };\n    }\n    const client = configureMemoryTransport(clientEd, serverEd);\n    const server = configureMemoryTransport(serverEd, clientEd);\n    return {\n        client,\n        server\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVtb3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi90cmFuc3BvcnRzL01lbW9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUE7QUFFekQsTUFBTTtJQUNKLE1BQU0sUUFBUSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUE7SUFDdEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQTtJQUV0QyxrQ0FBa0MsUUFBeUIsRUFBRSxNQUF1QjtRQUNsRixPQUFPO1lBQ0wsV0FBVyxDQUFDLE9BQU87Z0JBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1lBQ2pDLENBQUM7WUFFRCxLQUFLO2dCQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7WUFDdEIsQ0FBQztZQUVELFNBQVMsQ0FBQyxPQUFPO2dCQUNmLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1lBQ2pDLENBQUM7WUFFRCxPQUFPLENBQUMsT0FBTztnQkFDYixRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQTtZQUMvQixDQUFDO1lBRUQsT0FBTyxDQUFDLE9BQU87Z0JBQ2IsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUE7WUFDL0IsQ0FBQztZQUVELFNBQVMsQ0FBQyxPQUFPO2dCQUNmLFdBQVcsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUE7WUFDMUIsQ0FBQztTQUNGLENBQUE7SUFDSCxDQUFDO0lBRUQsTUFBTSxNQUFNLEdBQUcsd0JBQXdCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFBO0lBQzNELE1BQU0sTUFBTSxHQUFHLHdCQUF3QixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQTtJQUUzRCxPQUFPO1FBQ0wsTUFBTTtRQUNOLE1BQU07S0FDUCxDQUFBO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjcmlwdGluZ1RyYW5zcG9ydCB9IGZyb20gJy4uL2pzb24tcnBjL3R5cGVzJ1xuaW1wb3J0IHsgRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnLi4vY29yZS9FdmVudERpc3BhdGNoZXInXG5cbmV4cG9ydCBmdW5jdGlvbiBNZW1vcnlUcmFuc3BvcnQoKSB7XG4gIGNvbnN0IGNsaWVudEVkID0gbmV3IEV2ZW50RGlzcGF0Y2hlcigpXG4gIGNvbnN0IHNlcnZlckVkID0gbmV3IEV2ZW50RGlzcGF0Y2hlcigpXG5cbiAgZnVuY3Rpb24gY29uZmlndXJlTWVtb3J5VHJhbnNwb3J0KHJlY2VpdmVyOiBFdmVudERpc3BhdGNoZXIsIHNlbmRlcjogRXZlbnREaXNwYXRjaGVyKTogU2NyaXB0aW5nVHJhbnNwb3J0IHtcbiAgICByZXR1cm4ge1xuICAgICAgc2VuZE1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICBzZW5kZXIuZW1pdCgnbWVzc2FnZScsIG1lc3NhZ2UpXG4gICAgICB9LFxuXG4gICAgICBjbG9zZSgpIHtcbiAgICAgICAgc2VuZGVyLmVtaXQoJ2Nsb3NlJylcbiAgICAgIH0sXG5cbiAgICAgIG9uTWVzc2FnZShoYW5kbGVyKSB7XG4gICAgICAgIHJlY2VpdmVyLm9uKCdtZXNzYWdlJywgaGFuZGxlcilcbiAgICAgIH0sXG5cbiAgICAgIG9uQ2xvc2UoaGFuZGxlcikge1xuICAgICAgICByZWNlaXZlci5vbignY2xvc2UnLCBoYW5kbGVyKVxuICAgICAgfSxcblxuICAgICAgb25FcnJvcihoYW5kbGVyKSB7XG4gICAgICAgIHJlY2VpdmVyLm9uKCdlcnJvcicsIGhhbmRsZXIpXG4gICAgICB9LFxuXG4gICAgICBvbkNvbm5lY3QoaGFuZGxlcikge1xuICAgICAgICBzZXRJbnRlcnZhbChoYW5kbGVyLCAxNilcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCBjbGllbnQgPSBjb25maWd1cmVNZW1vcnlUcmFuc3BvcnQoY2xpZW50RWQsIHNlcnZlckVkKVxuICBjb25zdCBzZXJ2ZXIgPSBjb25maWd1cmVNZW1vcnlUcmFuc3BvcnQoc2VydmVyRWQsIGNsaWVudEVkKVxuXG4gIHJldHVybiB7XG4gICAgY2xpZW50LFxuICAgIHNlcnZlclxuICB9XG59XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/transports/Memory.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/transports/WebSocket.js":
/*!***********************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/transports/WebSocket.js ***!
  \***********************************************************************/
/*! exports provided: WebSocketTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebSocketTransport\", function() { return WebSocketTransport; });\nfunction WebSocketTransport(socket) {\n    const queue = [];\n    socket.addEventListener('open', function () {\n        flush();\n    });\n    function flush() {\n        if (socket.readyState === socket.OPEN) {\n            queue.forEach($ => send($));\n            queue.length = 0;\n        }\n    }\n    function send(msg) {\n        if (typeof msg === 'string') {\n            socket.send(msg, { binary: false });\n        }\n        else if (msg instanceof Uint8Array || msg instanceof ArrayBuffer || msg instanceof SharedArrayBuffer) {\n            ;\n            socket.binaryType = 'arraybuffer';\n            socket.send(msg, { binary: true });\n        }\n    }\n    const api = {\n        onConnect(handler) {\n            if (socket.readyState === socket.OPEN) {\n                handler();\n            }\n            else {\n                socket.addEventListener('open', () => handler(), { once: true });\n            }\n        },\n        onError(handler) {\n            socket.addEventListener('error', (err) => handler(err.error));\n        },\n        onMessage(handler) {\n            socket.addEventListener('message', (message) => {\n                handler(message.data);\n            });\n        },\n        sendMessage(message) {\n            const toSend = message instanceof Uint8Array ? message.buffer : message;\n            if (socket.readyState === socket.OPEN) {\n                send(toSend);\n            }\n            else {\n                queue.push(toSend);\n            }\n        },\n        close() {\n            socket.close();\n        }\n    };\n    return api;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViU29ja2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi90cmFuc3BvcnRzL1dlYlNvY2tldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ0EsTUFBTSw2QkFBNkIsTUFBa0I7SUFDbkQsTUFBTSxLQUFLLEdBQXVFLEVBQUUsQ0FBQTtJQUVwRixNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO1FBQzlCLEtBQUssRUFBRSxDQUFBO0lBQ1QsQ0FBQyxDQUFDLENBQUE7SUFFRjtRQUNFLElBQUksTUFBTSxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ3JDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtZQUMzQixLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQTtTQUNqQjtJQUNILENBQUM7SUFFRCxjQUFjLEdBQW1FO1FBQy9FLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUE7U0FDcEM7YUFBTSxJQUFJLEdBQUcsWUFBWSxVQUFVLElBQUksR0FBRyxZQUFZLFdBQVcsSUFBSSxHQUFHLFlBQVksaUJBQWlCLEVBQUU7WUFFdEcsQ0FBQztZQUFDLE1BQWMsQ0FBQyxVQUFVLEdBQUcsYUFBYSxDQUFBO1lBQzNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7U0FDbkM7SUFDSCxDQUFDO0lBRUQsTUFBTSxHQUFHLEdBQXVCO1FBQzlCLFNBQVMsQ0FBQyxPQUFPO1lBQ2YsSUFBSSxNQUFNLENBQUMsVUFBVSxLQUFLLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3JDLE9BQU8sRUFBRSxDQUFBO2FBQ1Y7aUJBQU07Z0JBQ0wsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO2FBQ2pFO1FBQ0gsQ0FBQztRQUNELE9BQU8sQ0FBQyxPQUFPO1lBQ2IsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQWUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO1FBQzNFLENBQUM7UUFDRCxTQUFTLENBQUMsT0FBTztZQUNmLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFzQixFQUFFLEVBQUU7Z0JBQzVELE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7WUFDdkIsQ0FBQyxDQUFDLENBQUE7UUFDSixDQUFDO1FBQ0QsV0FBVyxDQUFDLE9BQU87WUFDakIsTUFBTSxNQUFNLEdBQUcsT0FBTyxZQUFZLFVBQVUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFBO1lBRXZFLElBQUksTUFBTSxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFFO2dCQUNyQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7YUFDYjtpQkFBTTtnQkFDTCxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO2FBQ25CO1FBQ0gsQ0FBQztRQUNELEtBQUs7WUFDSCxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUE7UUFDaEIsQ0FBQztLQUNGLENBQUE7SUFFRCxPQUFPLEdBQUcsQ0FBQTtBQUNaLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY3JpcHRpbmdUcmFuc3BvcnQgfSBmcm9tICcuLi9qc29uLXJwYy90eXBlcydcblxuZXhwb3J0IGludGVyZmFjZSBJV2ViU29ja2V0RXZlbnRNYXAge1xuICBjbG9zZTogYW55XG4gIGVycm9yOiBhbnlcbiAgbWVzc2FnZTogeyBkYXRhOiBhbnkgfVxuICBvcGVuOiBhbnlcbn1cblxuLyoqXG4gKiBUaGlzIGludGVyZmFjZSBzaG91bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBCcm93c2VycyBpbnRlcmZhY2VcbiAqIGFuZCBucG0gd3MgcGFja2FnZSBmb3Igc2VydmVyc1xuICovXG5leHBvcnQgaW50ZXJmYWNlIElXZWJTb2NrZXQge1xuICBDT05ORUNUSU5HOiBudW1iZXJcbiAgT1BFTjogbnVtYmVyXG4gIENMT1NJTkc6IG51bWJlclxuICBDTE9TRUQ6IG51bWJlclxuXG4gIHJlYWR5U3RhdGU6IG51bWJlclxuXG4gIGNsb3NlKGNvZGU/OiBudW1iZXIsIGRhdGE/OiBzdHJpbmcpOiB2b2lkXG5cbiAgc2VuZChkYXRhOiBhbnksIGNiPzogKGVycjogRXJyb3IpID0+IHZvaWQpOiB2b2lkXG4gIHNlbmQoZGF0YTogYW55LCBvcHRpb25zOiBhbnksIGNiPzogKGVycjogRXJyb3IpID0+IHZvaWQpOiB2b2lkXG5cbiAgdGVybWluYXRlPygpOiB2b2lkXG5cbiAgYWRkRXZlbnRMaXN0ZW5lcjxLIGV4dGVuZHMga2V5b2YgSVdlYlNvY2tldEV2ZW50TWFwPihcbiAgICB0eXBlOiBLLFxuICAgIGxpc3RlbmVyOiAoZXY6IElXZWJTb2NrZXRFdmVudE1hcFtLXSkgPT4gYW55LFxuICAgIG9wdGlvbnM/OiBhbnlcbiAgKTogdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2ViU29ja2V0VHJhbnNwb3J0KHNvY2tldDogSVdlYlNvY2tldCk6IFNjcmlwdGluZ1RyYW5zcG9ydCB7XG4gIGNvbnN0IHF1ZXVlOiAoc3RyaW5nIHwgVWludDhBcnJheSB8IEFycmF5QnVmZmVyIHwgU2hhcmVkQXJyYXlCdWZmZXIgfCBCdWZmZXIpW10gPSBbXVxuXG4gIHNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgZnVuY3Rpb24oKSB7XG4gICAgZmx1c2goKVxuICB9KVxuXG4gIGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIGlmIChzb2NrZXQucmVhZHlTdGF0ZSA9PT0gc29ja2V0Lk9QRU4pIHtcbiAgICAgIHF1ZXVlLmZvckVhY2goJCA9PiBzZW5kKCQpKVxuICAgICAgcXVldWUubGVuZ3RoID0gMFxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNlbmQobXNnOiBzdHJpbmcgfCBVaW50OEFycmF5IHwgQXJyYXlCdWZmZXIgfCBTaGFyZWRBcnJheUJ1ZmZlciB8IEJ1ZmZlcikge1xuICAgIGlmICh0eXBlb2YgbXNnID09PSAnc3RyaW5nJykge1xuICAgICAgc29ja2V0LnNlbmQobXNnLCB7IGJpbmFyeTogZmFsc2UgfSlcbiAgICB9IGVsc2UgaWYgKG1zZyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHwgbXNnIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgbXNnIGluc3RhbmNlb2YgU2hhcmVkQXJyYXlCdWZmZXIpIHtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzZW1pY29sb25cbiAgICAgIDsoc29ja2V0IGFzIGFueSkuYmluYXJ5VHlwZSA9ICdhcnJheWJ1ZmZlcidcbiAgICAgIHNvY2tldC5zZW5kKG1zZywgeyBiaW5hcnk6IHRydWUgfSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBhcGk6IFNjcmlwdGluZ1RyYW5zcG9ydCA9IHtcbiAgICBvbkNvbm5lY3QoaGFuZGxlcikge1xuICAgICAgaWYgKHNvY2tldC5yZWFkeVN0YXRlID09PSBzb2NrZXQuT1BFTikge1xuICAgICAgICBoYW5kbGVyKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgKCkgPT4gaGFuZGxlcigpLCB7IG9uY2U6IHRydWUgfSlcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uRXJyb3IoaGFuZGxlcikge1xuICAgICAgc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKGVycjogRXJyb3JFdmVudCkgPT4gaGFuZGxlcihlcnIuZXJyb3IpKVxuICAgIH0sXG4gICAgb25NZXNzYWdlKGhhbmRsZXIpIHtcbiAgICAgIHNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKG1lc3NhZ2U6IHsgZGF0YTogYW55IH0pID0+IHtcbiAgICAgICAgaGFuZGxlcihtZXNzYWdlLmRhdGEpXG4gICAgICB9KVxuICAgIH0sXG4gICAgc2VuZE1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgY29uc3QgdG9TZW5kID0gbWVzc2FnZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBtZXNzYWdlLmJ1ZmZlciA6IG1lc3NhZ2VcblxuICAgICAgaWYgKHNvY2tldC5yZWFkeVN0YXRlID09PSBzb2NrZXQuT1BFTikge1xuICAgICAgICBzZW5kKHRvU2VuZClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlLnB1c2godG9TZW5kKVxuICAgICAgfVxuICAgIH0sXG4gICAgY2xvc2UoKSB7XG4gICAgICBzb2NrZXQuY2xvc2UoKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhcGlcbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/transports/WebSocket.js?");

/***/ }),

/***/ "./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js":
/*!***********************************************************************!*\
  !*** ./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js ***!
  \***********************************************************************/
/*! exports provided: WebWorkerTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebWorkerTransport\", function() { return WebWorkerTransport; });\nfunction WebWorkerTransport(worker) {\n    const api = {\n        onConnect(handler) {\n            worker.addEventListener('message', () => handler(), { once: true });\n        },\n        onError(handler) {\n            worker.addEventListener('error', (err) => handler(err.error));\n        },\n        onMessage(handler) {\n            worker.addEventListener('message', (message) => {\n                handler(message.data);\n            });\n        },\n        sendMessage(message) {\n            worker.postMessage(message);\n        },\n        close() {\n            if ('terminate' in worker) {\n                ;\n                worker.terminate();\n            }\n            else if ('close' in worker) {\n                ;\n                worker.close();\n            }\n        }\n    };\n    return api;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViV29ya2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi90cmFuc3BvcnRzL1dlYldvcmtlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQSxNQUFNLDZCQUE2QixNQUFlO0lBQ2hELE1BQU0sR0FBRyxHQUF1QjtRQUM5QixTQUFTLENBQUMsT0FBTztZQUNmLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtRQUNyRSxDQUFDO1FBQ0QsT0FBTyxDQUFDLE9BQU87WUFDYixNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBZSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7UUFDM0UsQ0FBQztRQUNELFNBQVMsQ0FBQyxPQUFPO1lBQ2YsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQXFCLEVBQUUsRUFBRTtnQkFDM0QsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUN2QixDQUFDLENBQUMsQ0FBQTtRQUNKLENBQUM7UUFDRCxXQUFXLENBQUMsT0FBTztZQUNqQixNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQzdCLENBQUM7UUFDRCxLQUFLO1lBQ0gsSUFBSSxXQUFXLElBQUksTUFBTSxFQUFFO2dCQUV6QixDQUFDO2dCQUFDLE1BQWMsQ0FBQyxTQUFTLEVBQUUsQ0FBQTthQUM3QjtpQkFBTSxJQUFJLE9BQU8sSUFBSSxNQUFNLEVBQUU7Z0JBRTVCLENBQUM7Z0JBQUMsTUFBYyxDQUFDLEtBQUssRUFBRSxDQUFBO2FBQ3pCO1FBQ0gsQ0FBQztLQUNGLENBQUE7SUFFRCxPQUFPLEdBQUcsQ0FBQTtBQUNaLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY3JpcHRpbmdUcmFuc3BvcnQgfSBmcm9tICcuLi9qc29uLXJwYy90eXBlcydcblxuZXhwb3J0IGludGVyZmFjZSBJV29ya2VyIHtcbiAgdGVybWluYXRlPygpOiB2b2lkXG4gIGNsb3NlPygpOiB2b2lkXG4gIHBvc3RNZXNzYWdlKG1lc3NhZ2U6IGFueSk6IHZvaWRcbiAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlOiAnbWVzc2FnZScgfCAnZXJyb3InLCBsaXN0ZW5lcjogRnVuY3Rpb24sIG9wdGlvbnM/OiBhbnkpOiB2b2lkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBXZWJXb3JrZXJUcmFuc3BvcnQod29ya2VyOiBJV29ya2VyKTogU2NyaXB0aW5nVHJhbnNwb3J0IHtcbiAgY29uc3QgYXBpOiBTY3JpcHRpbmdUcmFuc3BvcnQgPSB7XG4gICAgb25Db25uZWN0KGhhbmRsZXIpIHtcbiAgICAgIHdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKCkgPT4gaGFuZGxlcigpLCB7IG9uY2U6IHRydWUgfSlcbiAgICB9LFxuICAgIG9uRXJyb3IoaGFuZGxlcikge1xuICAgICAgd29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKGVycjogRXJyb3JFdmVudCkgPT4gaGFuZGxlcihlcnIuZXJyb3IpKVxuICAgIH0sXG4gICAgb25NZXNzYWdlKGhhbmRsZXIpIHtcbiAgICAgIHdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKG1lc3NhZ2U6IE1lc3NhZ2VFdmVudCkgPT4ge1xuICAgICAgICBoYW5kbGVyKG1lc3NhZ2UuZGF0YSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBzZW5kTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICB3b3JrZXIucG9zdE1lc3NhZ2UobWVzc2FnZSlcbiAgICB9LFxuICAgIGNsb3NlKCkge1xuICAgICAgaWYgKCd0ZXJtaW5hdGUnIGluIHdvcmtlcikge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c2VtaWNvbG9uXG4gICAgICAgIDsod29ya2VyIGFzIGFueSkudGVybWluYXRlKClcbiAgICAgIH0gZWxzZSBpZiAoJ2Nsb3NlJyBpbiB3b3JrZXIpIHtcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnNlbWljb2xvblxuICAgICAgICA7KHdvcmtlciBhcyBhbnkpLmNsb3NlKClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXBpXG59XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/metaverse-rpc/lib/common/transports/WebWorker.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/browser.js":
/*!**************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/browser.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// browser.js\n\nexports.encode = __webpack_require__(/*! ./encode */ \"./node_modules/msgpack-lite/lib/encode.js\").encode;\nexports.decode = __webpack_require__(/*! ./decode */ \"./node_modules/msgpack-lite/lib/decode.js\").decode;\n\nexports.Encoder = __webpack_require__(/*! ./encoder */ \"./node_modules/msgpack-lite/lib/encoder.js\").Encoder;\nexports.Decoder = __webpack_require__(/*! ./decoder */ \"./node_modules/msgpack-lite/lib/decoder.js\").Decoder;\n\nexports.createCodec = __webpack_require__(/*! ./ext */ \"./node_modules/msgpack-lite/lib/ext.js\").createCodec;\nexports.codec = __webpack_require__(/*! ./codec */ \"./node_modules/msgpack-lite/lib/codec.js\").codec;\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/browser.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/buffer-global.js":
/*!********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/buffer-global.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/* globals Buffer */\n\nmodule.exports =\n  c((\"undefined\" !== typeof Buffer) && Buffer) ||\n  c(this.Buffer) ||\n  c((\"undefined\" !== typeof window) && window.Buffer) ||\n  this.Buffer;\n\nfunction c(B) {\n  return B && B.isBuffer && B;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/buffer-global.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/buffer-lite.js":
/*!******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/buffer-lite.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// buffer-lite.js\n\nvar MAXBUFLEN = 8192;\n\nexports.copy = copy;\nexports.toString = toString;\nexports.write = write;\n\n/**\n * Buffer.prototype.write()\n *\n * @param string {String}\n * @param [offset] {Number}\n * @returns {Number}\n */\n\nfunction write(string, offset) {\n  var buffer = this;\n  var index = offset || (offset |= 0);\n  var length = string.length;\n  var chr = 0;\n  var i = 0;\n  while (i < length) {\n    chr = string.charCodeAt(i++);\n\n    if (chr < 128) {\n      buffer[index++] = chr;\n    } else if (chr < 0x800) {\n      // 2 bytes\n      buffer[index++] = 0xC0 | (chr >>> 6);\n      buffer[index++] = 0x80 | (chr & 0x3F);\n    } else if (chr < 0xD800 || chr > 0xDFFF) {\n      // 3 bytes\n      buffer[index++] = 0xE0 | (chr  >>> 12);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    } else {\n      // 4 bytes - surrogate pair\n      chr = (((chr - 0xD800) << 10) | (string.charCodeAt(i++) - 0xDC00)) + 0x10000;\n      buffer[index++] = 0xF0 | (chr >>> 18);\n      buffer[index++] = 0x80 | ((chr >>> 12) & 0x3F);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    }\n  }\n  return index - offset;\n}\n\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\nfunction toString(encoding, start, end) {\n  var buffer = this;\n  var index = start|0;\n  if (!end) end = buffer.length;\n  var string = '';\n  var chr = 0;\n\n  while (index < end) {\n    chr = buffer[index++];\n    if (chr < 128) {\n      string += String.fromCharCode(chr);\n      continue;\n    }\n\n    if ((chr & 0xE0) === 0xC0) {\n      // 2 bytes\n      chr = (chr & 0x1F) << 6 |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF0) === 0xE0) {\n      // 3 bytes\n      chr = (chr & 0x0F)             << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF8) === 0xF0) {\n      // 4 bytes\n      chr = (chr & 0x07)             << 18 |\n            (buffer[index++] & 0x3F) << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n    }\n\n    if (chr >= 0x010000) {\n      // A surrogate pair\n      chr -= 0x010000;\n\n      string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n    } else {\n      string += String.fromCharCode(chr);\n    }\n  }\n\n  return string;\n}\n\n/**\n * Buffer.prototype.copy()\n *\n * @param target {Buffer}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {number}\n */\n\nfunction copy(target, targetStart, start, end) {\n  var i;\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (!targetStart) targetStart = 0;\n  var len = end - start;\n\n  if (target === this && start < targetStart && targetStart < end) {\n    // descending\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    // ascending\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  }\n\n  return len;\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/buffer-lite.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/bufferish-array.js":
/*!**********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/bufferish-array.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// bufferish-array.js\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\n\nvar exports = module.exports = alloc(0);\n\nexports.alloc = alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Array(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Array}\n */\n\nfunction from(value) {\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\n    // TypedArray to Uint8Array\n    value = Bufferish.Uint8Array.from(value);\n  } else if (Bufferish.isArrayBuffer(value)) {\n    // ArrayBuffer to Uint8Array\n    value = new Uint8Array(value);\n  } else if (typeof value === \"string\") {\n    // String to Array\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  // Array-like to Array\n  return Array.prototype.slice.call(value);\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/bufferish-array.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/bufferish-buffer.js":
/*!***********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/bufferish-buffer.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// bufferish-buffer.js\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar Buffer = Bufferish.global;\n\nvar exports = module.exports = Bufferish.hasBuffer ? alloc(0) : [];\n\nexports.alloc = Bufferish.hasBuffer && Buffer.alloc || alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Buffer(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer}\n */\n\nfunction from(value) {\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\n    // TypedArray to Uint8Array\n    value = Bufferish.Uint8Array.from(value);\n  } else if (Bufferish.isArrayBuffer(value)) {\n    // ArrayBuffer to Uint8Array\n    value = new Uint8Array(value);\n  } else if (typeof value === \"string\") {\n    // String to Buffer\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  // Array-like to Buffer\n  if (Buffer.from && Buffer.from.length !== 1) {\n    return Buffer.from(value); // node v6+\n  } else {\n    return new Buffer(value); // node v4\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/bufferish-buffer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/bufferish-proto.js":
/*!**********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/bufferish-proto.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// bufferish-proto.js\n\n/* jshint eqnull:true */\n\nvar BufferLite = __webpack_require__(/*! ./buffer-lite */ \"./node_modules/msgpack-lite/lib/buffer-lite.js\");\n\nexports.copy = copy;\nexports.slice = slice;\nexports.toString = toString;\nexports.write = gen(\"write\");\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar Buffer = Bufferish.global;\n\nvar isBufferShim = Bufferish.hasBuffer && (\"TYPED_ARRAY_SUPPORT\" in Buffer);\nvar brokenTypedArray = isBufferShim && !Buffer.TYPED_ARRAY_SUPPORT;\n\n/**\n * @param target {Buffer|Uint8Array|Array}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction copy(target, targetStart, start, end) {\n  var thisIsBuffer = Bufferish.isBuffer(this);\n  var targetIsBuffer = Bufferish.isBuffer(target);\n  if (thisIsBuffer && targetIsBuffer) {\n    // Buffer to Buffer\n    return this.copy(target, targetStart, start, end);\n  } else if (!brokenTypedArray && !thisIsBuffer && !targetIsBuffer &&\n    Bufferish.isView(this) && Bufferish.isView(target)) {\n    // Uint8Array to Uint8Array (except for minor some browsers)\n    var buffer = (start || end != null) ? slice.call(this, start, end) : this;\n    target.set(buffer, targetStart);\n    return buffer.length;\n  } else {\n    // other cases\n    return BufferLite.copy.call(this, target, targetStart, start, end);\n  }\n}\n\n/**\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction slice(start, end) {\n  // for Buffer, Uint8Array (except for minor some browsers) and Array\n  var f = this.slice || (!brokenTypedArray && this.subarray);\n  if (f) return f.call(this, start, end);\n\n  // Uint8Array (for minor some browsers)\n  var target = Bufferish.alloc.call(this, end - start);\n  copy.call(this, target, 0, start, end);\n  return target;\n}\n\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\nfunction toString(encoding, start, end) {\n  var f = (!isBufferShim && Bufferish.isBuffer(this)) ? this.toString : BufferLite.toString;\n  return f.apply(this, arguments);\n}\n\n/**\n * @private\n */\n\nfunction gen(method) {\n  return wrap;\n\n  function wrap() {\n    var f = this[method] || BufferLite[method];\n    return f.apply(this, arguments);\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/bufferish-proto.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/bufferish-uint8array.js":
/*!***************************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/bufferish-uint8array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// bufferish-uint8array.js\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\n\nvar exports = module.exports = Bufferish.hasArrayBuffer ? alloc(0) : [];\n\nexports.alloc = alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Uint8Array(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Uint8Array}\n */\n\nfunction from(value) {\n  if (Bufferish.isView(value)) {\n    // TypedArray to ArrayBuffer\n    var byteOffset = value.byteOffset;\n    var byteLength = value.byteLength;\n    value = value.buffer;\n    if (value.byteLength !== byteLength) {\n      if (value.slice) {\n        value = value.slice(byteOffset, byteOffset + byteLength);\n      } else {\n        // Android 4.1 does not have ArrayBuffer.prototype.slice\n        value = new Uint8Array(value);\n        if (value.byteLength !== byteLength) {\n          // TypedArray to ArrayBuffer to Uint8Array to Array\n          value = Array.prototype.slice.call(value, byteOffset, byteOffset + byteLength);\n        }\n      }\n    }\n  } else if (typeof value === \"string\") {\n    // String to Uint8Array\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  return new Uint8Array(value);\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/bufferish-uint8array.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/bufferish.js":
/*!****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/bufferish.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// bufferish.js\n\nvar Buffer = exports.global = __webpack_require__(/*! ./buffer-global */ \"./node_modules/msgpack-lite/lib/buffer-global.js\");\nvar hasBuffer = exports.hasBuffer = Buffer && !!Buffer.isBuffer;\nvar hasArrayBuffer = exports.hasArrayBuffer = (\"undefined\" !== typeof ArrayBuffer);\n\nvar isArray = exports.isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\nexports.isArrayBuffer = hasArrayBuffer ? isArrayBuffer : _false;\nvar isBuffer = exports.isBuffer = hasBuffer ? Buffer.isBuffer : _false;\nvar isView = exports.isView = hasArrayBuffer ? (ArrayBuffer.isView || _is(\"ArrayBuffer\", \"buffer\")) : _false;\n\nexports.alloc = alloc;\nexports.concat = concat;\nexports.from = from;\n\nvar BufferArray = exports.Array = __webpack_require__(/*! ./bufferish-array */ \"./node_modules/msgpack-lite/lib/bufferish-array.js\");\nvar BufferBuffer = exports.Buffer = __webpack_require__(/*! ./bufferish-buffer */ \"./node_modules/msgpack-lite/lib/bufferish-buffer.js\");\nvar BufferUint8Array = exports.Uint8Array = __webpack_require__(/*! ./bufferish-uint8array */ \"./node_modules/msgpack-lite/lib/bufferish-uint8array.js\");\nvar BufferProto = exports.prototype = __webpack_require__(/*! ./bufferish-proto */ \"./node_modules/msgpack-lite/lib/bufferish-proto.js\");\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction from(value) {\n  if (typeof value === \"string\") {\n    return fromString.call(this, value);\n  } else {\n    return auto(this).from(value);\n  }\n}\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return auto(this).alloc(size);\n}\n\n/**\n * @param list {Array} array of (Buffer|Uint8Array|Array)s\n * @param [length]\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction concat(list, length) {\n  if (!length) {\n    length = 0;\n    Array.prototype.forEach.call(list, dryrun);\n  }\n  var ref = (this !== exports) && this || list[0];\n  var result = alloc.call(ref, length);\n  var offset = 0;\n  Array.prototype.forEach.call(list, append);\n  return result;\n\n  function dryrun(buffer) {\n    length += buffer.length;\n  }\n\n  function append(buffer) {\n    offset += BufferProto.copy.call(buffer, result, offset);\n  }\n}\n\nvar _isArrayBuffer = _is(\"ArrayBuffer\");\n\nfunction isArrayBuffer(value) {\n  return (value instanceof ArrayBuffer) || _isArrayBuffer(value);\n}\n\n/**\n * @private\n */\n\nfunction fromString(value) {\n  var expected = value.length * 3;\n  var that = alloc.call(this, expected);\n  var actual = BufferProto.write.call(that, value);\n  if (expected !== actual) {\n    that = BufferProto.slice.call(that, 0, actual);\n  }\n  return that;\n}\n\nfunction auto(that) {\n  return isBuffer(that) ? BufferBuffer\n    : isView(that) ? BufferUint8Array\n    : isArray(that) ? BufferArray\n    : hasBuffer ? BufferBuffer\n    : hasArrayBuffer ? BufferUint8Array\n    : BufferArray;\n}\n\nfunction _false() {\n  return false;\n}\n\nfunction _is(name, key) {\n  /* jshint eqnull:true */\n  name = \"[object \" + name + \"]\";\n  return function(value) {\n    return (value != null) && {}.toString.call(key ? value[key] : value) === name;\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/bufferish.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/codec-base.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/codec-base.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// codec-base.js\n\nvar IS_ARRAY = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n\nexports.createCodec = createCodec;\nexports.install = install;\nexports.filter = filter;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\n\nfunction Codec(options) {\n  if (!(this instanceof Codec)) return new Codec(options);\n  this.options = options;\n  this.init();\n}\n\nCodec.prototype.init = function() {\n  var options = this.options;\n\n  if (options && options.uint8array) {\n    this.bufferish = Bufferish.Uint8Array;\n  }\n\n  return this;\n};\n\nfunction install(props) {\n  for (var key in props) {\n    Codec.prototype[key] = add(Codec.prototype[key], props[key]);\n  }\n}\n\nfunction add(a, b) {\n  return (a && b) ? ab : (a || b);\n\n  function ab() {\n    a.apply(this, arguments);\n    return b.apply(this, arguments);\n  }\n}\n\nfunction join(filters) {\n  filters = filters.slice();\n\n  return function(value) {\n    return filters.reduce(iterator, value);\n  };\n\n  function iterator(value, filter) {\n    return filter(value);\n  }\n}\n\nfunction filter(filter) {\n  return IS_ARRAY(filter) ? join(filter) : filter;\n}\n\n// @public\n// msgpack.createCodec()\n\nfunction createCodec(options) {\n  return new Codec(options);\n}\n\n// default shared codec\n\nexports.preset = createCodec({preset: true});\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/codec-base.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/codec.js":
/*!************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/codec.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// codec.js\n\n// load both interfaces\n__webpack_require__(/*! ./read-core */ \"./node_modules/msgpack-lite/lib/read-core.js\");\n__webpack_require__(/*! ./write-core */ \"./node_modules/msgpack-lite/lib/write-core.js\");\n\n// @public\n// msgpack.codec.preset\n\nexports.codec = {\n  preset: __webpack_require__(/*! ./codec-base */ \"./node_modules/msgpack-lite/lib/codec-base.js\").preset\n};\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/codec.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/decode-buffer.js":
/*!********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/decode-buffer.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// decode-buffer.js\n\nexports.DecodeBuffer = DecodeBuffer;\n\nvar preset = __webpack_require__(/*! ./read-core */ \"./node_modules/msgpack-lite/lib/read-core.js\").preset;\n\nvar FlexDecoder = __webpack_require__(/*! ./flex-buffer */ \"./node_modules/msgpack-lite/lib/flex-buffer.js\").FlexDecoder;\n\nFlexDecoder.mixin(DecodeBuffer.prototype);\n\nfunction DecodeBuffer(options) {\n  if (!(this instanceof DecodeBuffer)) return new DecodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nDecodeBuffer.prototype.codec = preset;\n\nDecodeBuffer.prototype.fetch = function() {\n  return this.codec.decode(this);\n};\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/decode-buffer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/decode.js":
/*!*************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/decode.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// decode.js\n\nexports.decode = decode;\n\nvar DecodeBuffer = __webpack_require__(/*! ./decode-buffer */ \"./node_modules/msgpack-lite/lib/decode-buffer.js\").DecodeBuffer;\n\nfunction decode(input, options) {\n  var decoder = new DecodeBuffer(options);\n  decoder.write(input);\n  return decoder.read();\n}\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/decode.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/decoder.js":
/*!**************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/decoder.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// decoder.js\n\nexports.Decoder = Decoder;\n\nvar EventLite = __webpack_require__(/*! event-lite */ \"./node_modules/event-lite/event-lite.js\");\nvar DecodeBuffer = __webpack_require__(/*! ./decode-buffer */ \"./node_modules/msgpack-lite/lib/decode-buffer.js\").DecodeBuffer;\n\nfunction Decoder(options) {\n  if (!(this instanceof Decoder)) return new Decoder(options);\n  DecodeBuffer.call(this, options);\n}\n\nDecoder.prototype = new DecodeBuffer();\n\nEventLite.mixin(Decoder.prototype);\n\nDecoder.prototype.decode = function(chunk) {\n  if (arguments.length) this.write(chunk);\n  this.flush();\n};\n\nDecoder.prototype.push = function(chunk) {\n  this.emit(\"data\", chunk);\n};\n\nDecoder.prototype.end = function(chunk) {\n  this.decode(chunk);\n  this.emit(\"end\");\n};\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/decoder.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/encode-buffer.js":
/*!********************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/encode-buffer.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// encode-buffer.js\n\nexports.EncodeBuffer = EncodeBuffer;\n\nvar preset = __webpack_require__(/*! ./write-core */ \"./node_modules/msgpack-lite/lib/write-core.js\").preset;\n\nvar FlexEncoder = __webpack_require__(/*! ./flex-buffer */ \"./node_modules/msgpack-lite/lib/flex-buffer.js\").FlexEncoder;\n\nFlexEncoder.mixin(EncodeBuffer.prototype);\n\nfunction EncodeBuffer(options) {\n  if (!(this instanceof EncodeBuffer)) return new EncodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nEncodeBuffer.prototype.codec = preset;\n\nEncodeBuffer.prototype.write = function(input) {\n  this.codec.encode(this, input);\n};\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/encode-buffer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/encode.js":
/*!*************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/encode.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// encode.js\n\nexports.encode = encode;\n\nvar EncodeBuffer = __webpack_require__(/*! ./encode-buffer */ \"./node_modules/msgpack-lite/lib/encode-buffer.js\").EncodeBuffer;\n\nfunction encode(input, options) {\n  var encoder = new EncodeBuffer(options);\n  encoder.write(input);\n  return encoder.read();\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/encode.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/encoder.js":
/*!**************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/encoder.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// encoder.js\n\nexports.Encoder = Encoder;\n\nvar EventLite = __webpack_require__(/*! event-lite */ \"./node_modules/event-lite/event-lite.js\");\nvar EncodeBuffer = __webpack_require__(/*! ./encode-buffer */ \"./node_modules/msgpack-lite/lib/encode-buffer.js\").EncodeBuffer;\n\nfunction Encoder(options) {\n  if (!(this instanceof Encoder)) return new Encoder(options);\n  EncodeBuffer.call(this, options);\n}\n\nEncoder.prototype = new EncodeBuffer();\n\nEventLite.mixin(Encoder.prototype);\n\nEncoder.prototype.encode = function(chunk) {\n  this.write(chunk);\n  this.emit(\"data\", this.read());\n};\n\nEncoder.prototype.end = function(chunk) {\n  if (arguments.length) this.encode(chunk);\n  this.flush();\n  this.emit(\"end\");\n};\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/encoder.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/ext-buffer.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/ext-buffer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ext-buffer.js\n\nexports.ExtBuffer = ExtBuffer;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\n\nfunction ExtBuffer(buffer, type) {\n  if (!(this instanceof ExtBuffer)) return new ExtBuffer(buffer, type);\n  this.buffer = Bufferish.from(buffer);\n  this.type = type;\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/ext-buffer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/ext-packer.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/ext-packer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ext-packer.js\n\nexports.setExtPackers = setExtPackers;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar Buffer = Bufferish.global;\nvar packTypedArray = Bufferish.Uint8Array.from;\nvar _encode;\n\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\n\nfunction setExtPackers(codec) {\n  codec.addExtPacker(0x0E, Error, [packError, encode]);\n  codec.addExtPacker(0x01, EvalError, [packError, encode]);\n  codec.addExtPacker(0x02, RangeError, [packError, encode]);\n  codec.addExtPacker(0x03, ReferenceError, [packError, encode]);\n  codec.addExtPacker(0x04, SyntaxError, [packError, encode]);\n  codec.addExtPacker(0x05, TypeError, [packError, encode]);\n  codec.addExtPacker(0x06, URIError, [packError, encode]);\n\n  codec.addExtPacker(0x0A, RegExp, [packRegExp, encode]);\n  codec.addExtPacker(0x0B, Boolean, [packValueOf, encode]);\n  codec.addExtPacker(0x0C, String, [packValueOf, encode]);\n  codec.addExtPacker(0x0D, Date, [Number, encode]);\n  codec.addExtPacker(0x0F, Number, [packValueOf, encode]);\n\n  if (\"undefined\" !== typeof Uint8Array) {\n    codec.addExtPacker(0x11, Int8Array, packTypedArray);\n    codec.addExtPacker(0x12, Uint8Array, packTypedArray);\n    codec.addExtPacker(0x13, Int16Array, packTypedArray);\n    codec.addExtPacker(0x14, Uint16Array, packTypedArray);\n    codec.addExtPacker(0x15, Int32Array, packTypedArray);\n    codec.addExtPacker(0x16, Uint32Array, packTypedArray);\n    codec.addExtPacker(0x17, Float32Array, packTypedArray);\n\n    // PhantomJS/1.9.7 doesn't have Float64Array\n    if (\"undefined\" !== typeof Float64Array) {\n      codec.addExtPacker(0x18, Float64Array, packTypedArray);\n    }\n\n    // IE10 doesn't have Uint8ClampedArray\n    if (\"undefined\" !== typeof Uint8ClampedArray) {\n      codec.addExtPacker(0x19, Uint8ClampedArray, packTypedArray);\n    }\n\n    codec.addExtPacker(0x1A, ArrayBuffer, packTypedArray);\n    codec.addExtPacker(0x1D, DataView, packTypedArray);\n  }\n\n  if (Bufferish.hasBuffer) {\n    codec.addExtPacker(0x1B, Buffer, Bufferish.from);\n  }\n}\n\nfunction encode(input) {\n  if (!_encode) _encode = __webpack_require__(/*! ./encode */ \"./node_modules/msgpack-lite/lib/encode.js\").encode; // lazy load\n  return _encode(input);\n}\n\nfunction packValueOf(value) {\n  return (value).valueOf();\n}\n\nfunction packRegExp(value) {\n  value = RegExp.prototype.toString.call(value).split(\"/\");\n  value.shift();\n  var out = [value.pop()];\n  out.unshift(value.join(\"/\"));\n  return out;\n}\n\nfunction packError(value) {\n  var out = {};\n  for (var key in ERROR_COLUMNS) {\n    out[key] = value[key];\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/ext-packer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/ext-unpacker.js":
/*!*******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/ext-unpacker.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ext-unpacker.js\n\nexports.setExtUnpackers = setExtUnpackers;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar Buffer = Bufferish.global;\nvar _decode;\n\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\n\nfunction setExtUnpackers(codec) {\n  codec.addExtUnpacker(0x0E, [decode, unpackError(Error)]);\n  codec.addExtUnpacker(0x01, [decode, unpackError(EvalError)]);\n  codec.addExtUnpacker(0x02, [decode, unpackError(RangeError)]);\n  codec.addExtUnpacker(0x03, [decode, unpackError(ReferenceError)]);\n  codec.addExtUnpacker(0x04, [decode, unpackError(SyntaxError)]);\n  codec.addExtUnpacker(0x05, [decode, unpackError(TypeError)]);\n  codec.addExtUnpacker(0x06, [decode, unpackError(URIError)]);\n\n  codec.addExtUnpacker(0x0A, [decode, unpackRegExp]);\n  codec.addExtUnpacker(0x0B, [decode, unpackClass(Boolean)]);\n  codec.addExtUnpacker(0x0C, [decode, unpackClass(String)]);\n  codec.addExtUnpacker(0x0D, [decode, unpackClass(Date)]);\n  codec.addExtUnpacker(0x0F, [decode, unpackClass(Number)]);\n\n  if (\"undefined\" !== typeof Uint8Array) {\n    codec.addExtUnpacker(0x11, unpackClass(Int8Array));\n    codec.addExtUnpacker(0x12, unpackClass(Uint8Array));\n    codec.addExtUnpacker(0x13, [unpackArrayBuffer, unpackClass(Int16Array)]);\n    codec.addExtUnpacker(0x14, [unpackArrayBuffer, unpackClass(Uint16Array)]);\n    codec.addExtUnpacker(0x15, [unpackArrayBuffer, unpackClass(Int32Array)]);\n    codec.addExtUnpacker(0x16, [unpackArrayBuffer, unpackClass(Uint32Array)]);\n    codec.addExtUnpacker(0x17, [unpackArrayBuffer, unpackClass(Float32Array)]);\n\n    // PhantomJS/1.9.7 doesn't have Float64Array\n    if (\"undefined\" !== typeof Float64Array) {\n      codec.addExtUnpacker(0x18, [unpackArrayBuffer, unpackClass(Float64Array)]);\n    }\n\n    // IE10 doesn't have Uint8ClampedArray\n    if (\"undefined\" !== typeof Uint8ClampedArray) {\n      codec.addExtUnpacker(0x19, unpackClass(Uint8ClampedArray));\n    }\n\n    codec.addExtUnpacker(0x1A, unpackArrayBuffer);\n    codec.addExtUnpacker(0x1D, [unpackArrayBuffer, unpackClass(DataView)]);\n  }\n\n  if (Bufferish.hasBuffer) {\n    codec.addExtUnpacker(0x1B, unpackClass(Buffer));\n  }\n}\n\nfunction decode(input) {\n  if (!_decode) _decode = __webpack_require__(/*! ./decode */ \"./node_modules/msgpack-lite/lib/decode.js\").decode; // lazy load\n  return _decode(input);\n}\n\nfunction unpackRegExp(value) {\n  return RegExp.apply(null, value);\n}\n\nfunction unpackError(Class) {\n  return function(value) {\n    var out = new Class();\n    for (var key in ERROR_COLUMNS) {\n      out[key] = value[key];\n    }\n    return out;\n  };\n}\n\nfunction unpackClass(Class) {\n  return function(value) {\n    return new Class(value);\n  };\n}\n\nfunction unpackArrayBuffer(value) {\n  return (new Uint8Array(value)).buffer;\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/ext-unpacker.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/ext.js":
/*!**********************************************!*\
  !*** ./node_modules/msgpack-lite/lib/ext.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ext.js\n\n// load both interfaces\n__webpack_require__(/*! ./read-core */ \"./node_modules/msgpack-lite/lib/read-core.js\");\n__webpack_require__(/*! ./write-core */ \"./node_modules/msgpack-lite/lib/write-core.js\");\n\nexports.createCodec = __webpack_require__(/*! ./codec-base */ \"./node_modules/msgpack-lite/lib/codec-base.js\").createCodec;\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/ext.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/flex-buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/flex-buffer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// flex-buffer.js\n\nexports.FlexDecoder = FlexDecoder;\nexports.FlexEncoder = FlexEncoder;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\n\nvar MIN_BUFFER_SIZE = 2048;\nvar MAX_BUFFER_SIZE = 65536;\nvar BUFFER_SHORTAGE = \"BUFFER_SHORTAGE\";\n\nfunction FlexDecoder() {\n  if (!(this instanceof FlexDecoder)) return new FlexDecoder();\n}\n\nfunction FlexEncoder() {\n  if (!(this instanceof FlexEncoder)) return new FlexEncoder();\n}\n\nFlexDecoder.mixin = mixinFactory(getDecoderMethods());\nFlexDecoder.mixin(FlexDecoder.prototype);\n\nFlexEncoder.mixin = mixinFactory(getEncoderMethods());\nFlexEncoder.mixin(FlexEncoder.prototype);\n\nfunction getDecoderMethods() {\n  return {\n    bufferish: Bufferish,\n    write: write,\n    fetch: fetch,\n    flush: flush,\n    push: push,\n    pull: pull,\n    read: read,\n    reserve: reserve,\n    offset: 0\n  };\n\n  function write(chunk) {\n    var prev = this.offset ? Bufferish.prototype.slice.call(this.buffer, this.offset) : this.buffer;\n    this.buffer = prev ? (chunk ? this.bufferish.concat([prev, chunk]) : prev) : chunk;\n    this.offset = 0;\n  }\n\n  function flush() {\n    while (this.offset < this.buffer.length) {\n      var start = this.offset;\n      var value;\n      try {\n        value = this.fetch();\n      } catch (e) {\n        if (e && e.message != BUFFER_SHORTAGE) throw e;\n        // rollback\n        this.offset = start;\n        break;\n      }\n      this.push(value);\n    }\n  }\n\n  function reserve(length) {\n    var start = this.offset;\n    var end = start + length;\n    if (end > this.buffer.length) throw new Error(BUFFER_SHORTAGE);\n    this.offset = end;\n    return start;\n  }\n}\n\nfunction getEncoderMethods() {\n  return {\n    bufferish: Bufferish,\n    write: write,\n    fetch: fetch,\n    flush: flush,\n    push: push,\n    pull: pull,\n    read: read,\n    reserve: reserve,\n    send: send,\n    maxBufferSize: MAX_BUFFER_SIZE,\n    minBufferSize: MIN_BUFFER_SIZE,\n    offset: 0,\n    start: 0\n  };\n\n  function fetch() {\n    var start = this.start;\n    if (start < this.offset) {\n      var end = this.start = this.offset;\n      return Bufferish.prototype.slice.call(this.buffer, start, end);\n    }\n  }\n\n  function flush() {\n    while (this.start < this.offset) {\n      var value = this.fetch();\n      if (value) this.push(value);\n    }\n  }\n\n  function pull() {\n    var buffers = this.buffers || (this.buffers = []);\n    var chunk = buffers.length > 1 ? this.bufferish.concat(buffers) : buffers[0];\n    buffers.length = 0; // buffer exhausted\n    return chunk;\n  }\n\n  function reserve(length) {\n    var req = length | 0;\n\n    if (this.buffer) {\n      var size = this.buffer.length;\n      var start = this.offset | 0;\n      var end = start + req;\n\n      // is it long enough?\n      if (end < size) {\n        this.offset = end;\n        return start;\n      }\n\n      // flush current buffer\n      this.flush();\n\n      // resize it to 2x current length\n      length = Math.max(length, Math.min(size * 2, this.maxBufferSize));\n    }\n\n    // minimum buffer size\n    length = Math.max(length, this.minBufferSize);\n\n    // allocate new buffer\n    this.buffer = this.bufferish.alloc(length);\n    this.start = 0;\n    this.offset = req;\n    return 0;\n  }\n\n  function send(buffer) {\n    var length = buffer.length;\n    if (length > this.minBufferSize) {\n      this.flush();\n      this.push(buffer);\n    } else {\n      var offset = this.reserve(length);\n      Bufferish.prototype.copy.call(buffer, this.buffer, offset);\n    }\n  }\n}\n\n// common methods\n\nfunction write() {\n  throw new Error(\"method not implemented: write()\");\n}\n\nfunction fetch() {\n  throw new Error(\"method not implemented: fetch()\");\n}\n\nfunction read() {\n  var length = this.buffers && this.buffers.length;\n\n  // fetch the first result\n  if (!length) return this.fetch();\n\n  // flush current buffer\n  this.flush();\n\n  // read from the results\n  return this.pull();\n}\n\nfunction push(chunk) {\n  var buffers = this.buffers || (this.buffers = []);\n  buffers.push(chunk);\n}\n\nfunction pull() {\n  var buffers = this.buffers || (this.buffers = []);\n  return buffers.shift();\n}\n\nfunction mixinFactory(source) {\n  return mixin;\n\n  function mixin(target) {\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/flex-buffer.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/read-core.js":
/*!****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/read-core.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// read-core.js\n\nvar ExtBuffer = __webpack_require__(/*! ./ext-buffer */ \"./node_modules/msgpack-lite/lib/ext-buffer.js\").ExtBuffer;\nvar ExtUnpacker = __webpack_require__(/*! ./ext-unpacker */ \"./node_modules/msgpack-lite/lib/ext-unpacker.js\");\nvar readUint8 = __webpack_require__(/*! ./read-format */ \"./node_modules/msgpack-lite/lib/read-format.js\").readUint8;\nvar ReadToken = __webpack_require__(/*! ./read-token */ \"./node_modules/msgpack-lite/lib/read-token.js\");\nvar CodecBase = __webpack_require__(/*! ./codec-base */ \"./node_modules/msgpack-lite/lib/codec-base.js\");\n\nCodecBase.install({\n  addExtUnpacker: addExtUnpacker,\n  getExtUnpacker: getExtUnpacker,\n  init: init\n});\n\nexports.preset = init.call(CodecBase.preset);\n\nfunction getDecoder(options) {\n  var readToken = ReadToken.getReadToken(options);\n  return decode;\n\n  function decode(decoder) {\n    var type = readUint8(decoder);\n    var func = readToken[type];\n    if (!func) throw new Error(\"Invalid type: \" + (type ? (\"0x\" + type.toString(16)) : type));\n    return func(decoder);\n  }\n}\n\nfunction init() {\n  var options = this.options;\n  this.decode = getDecoder(options);\n\n  if (options && options.preset) {\n    ExtUnpacker.setExtUnpackers(this);\n  }\n\n  return this;\n}\n\nfunction addExtUnpacker(etype, unpacker) {\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\n  unpackers[etype] = CodecBase.filter(unpacker);\n}\n\nfunction getExtUnpacker(type) {\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\n  return unpackers[type] || extUnpacker;\n\n  function extUnpacker(buffer) {\n    return new ExtBuffer(buffer, type);\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/read-core.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/read-format.js":
/*!******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/read-format.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// read-format.js\n\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\");\nvar Int64Buffer = __webpack_require__(/*! int64-buffer */ \"./node_modules/int64-buffer/int64-buffer.js\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nexports.getReadFormat = getReadFormat;\nexports.readUint8 = uint8;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar BufferProto = __webpack_require__(/*! ./bufferish-proto */ \"./node_modules/msgpack-lite/lib/bufferish-proto.js\");\n\nvar HAS_MAP = (\"undefined\" !== typeof Map);\nvar NO_ASSERT = true;\n\nfunction getReadFormat(options) {\n  var binarraybuffer = Bufferish.hasArrayBuffer && options && options.binarraybuffer;\n  var int64 = options && options.int64;\n  var usemap = HAS_MAP && options && options.usemap;\n\n  var readFormat = {\n    map: (usemap ? map_to_map : map_to_obj),\n    array: array,\n    str: str,\n    bin: (binarraybuffer ? bin_arraybuffer : bin_buffer),\n    ext: ext,\n    uint8: uint8,\n    uint16: uint16,\n    uint32: uint32,\n    uint64: read(8, int64 ? readUInt64BE_int64 : readUInt64BE),\n    int8: int8,\n    int16: int16,\n    int32: int32,\n    int64: read(8, int64 ? readInt64BE_int64 : readInt64BE),\n    float32: read(4, readFloatBE),\n    float64: read(8, readDoubleBE)\n  };\n\n  return readFormat;\n}\n\nfunction map_to_obj(decoder, len) {\n  var value = {};\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value[k[i]] = v[i];\n  }\n  return value;\n}\n\nfunction map_to_map(decoder, len) {\n  var value = new Map();\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value.set(k[i], v[i]);\n  }\n  return value;\n}\n\nfunction array(decoder, len) {\n  var value = new Array(len);\n  var decode = decoder.codec.decode;\n  for (var i = 0; i < len; i++) {\n    value[i] = decode(decoder);\n  }\n  return value;\n}\n\nfunction str(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  return BufferProto.toString.call(decoder.buffer, \"utf-8\", start, end);\n}\n\nfunction bin_buffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.from(buf);\n}\n\nfunction bin_arraybuffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.Uint8Array.from(buf).buffer;\n}\n\nfunction ext(decoder, len) {\n  var start = decoder.reserve(len+1);\n  var type = decoder.buffer[start++];\n  var end = start + len;\n  var unpack = decoder.codec.getExtUnpacker(type);\n  if (!unpack) throw new Error(\"Invalid ext type: \" + (type ? (\"0x\" + type.toString(16)) : type));\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return unpack(buf);\n}\n\nfunction uint8(decoder) {\n  var start = decoder.reserve(1);\n  return decoder.buffer[start];\n}\n\nfunction int8(decoder) {\n  var start = decoder.reserve(1);\n  var value = decoder.buffer[start];\n  return (value & 0x80) ? value - 0x100 : value;\n}\n\nfunction uint16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 8) | buffer[start];\n}\n\nfunction int16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  var value = (buffer[start++] << 8) | buffer[start];\n  return (value & 0x8000) ? value - 0x10000 : value;\n}\n\nfunction uint32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] * 16777216) + (buffer[start++] << 16) + (buffer[start++] << 8) + buffer[start];\n}\n\nfunction int32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 24) | (buffer[start++] << 16) | (buffer[start++] << 8) | buffer[start];\n}\n\nfunction read(len, method) {\n  return function(decoder) {\n    var start = decoder.reserve(len);\n    return method.call(decoder.buffer, start, NO_ASSERT);\n  };\n}\n\nfunction readUInt64BE(start) {\n  return new Uint64BE(this, start).toNumber();\n}\n\nfunction readInt64BE(start) {\n  return new Int64BE(this, start).toNumber();\n}\n\nfunction readUInt64BE_int64(start) {\n  return new Uint64BE(this, start);\n}\n\nfunction readInt64BE_int64(start) {\n  return new Int64BE(this, start);\n}\n\nfunction readFloatBE(start) {\n  return ieee754.read(this, start, false, 23, 4);\n}\n\nfunction readDoubleBE(start) {\n  return ieee754.read(this, start, false, 52, 8);\n}\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/read-format.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/read-token.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/read-token.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// read-token.js\n\nvar ReadFormat = __webpack_require__(/*! ./read-format */ \"./node_modules/msgpack-lite/lib/read-format.js\");\n\nexports.getReadToken = getReadToken;\n\nfunction getReadToken(options) {\n  var format = ReadFormat.getReadFormat(options);\n\n  if (options && options.useraw) {\n    return init_useraw(format);\n  } else {\n    return init_token(format);\n  }\n}\n\nfunction init_token(format) {\n  var i;\n  var token = new Array(256);\n\n  // positive fixint -- 0x00 - 0x7f\n  for (i = 0x00; i <= 0x7f; i++) {\n    token[i] = constant(i);\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  for (i = 0x80; i <= 0x8f; i++) {\n    token[i] = fix(i - 0x80, format.map);\n  }\n\n  // fixarray -- 0x90 - 0x9f\n  for (i = 0x90; i <= 0x9f; i++) {\n    token[i] = fix(i - 0x90, format.array);\n  }\n\n  // fixstr -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.str);\n  }\n\n  // nil -- 0xc0\n  token[0xc0] = constant(null);\n\n  // (never used) -- 0xc1\n  token[0xc1] = null;\n\n  // false -- 0xc2\n  // true -- 0xc3\n  token[0xc2] = constant(false);\n  token[0xc3] = constant(true);\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = flex(format.uint8, format.bin);\n  token[0xc5] = flex(format.uint16, format.bin);\n  token[0xc6] = flex(format.uint32, format.bin);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = flex(format.uint8, format.ext);\n  token[0xc8] = flex(format.uint16, format.ext);\n  token[0xc9] = flex(format.uint32, format.ext);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = format.float32;\n  token[0xcb] = format.float64;\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = format.uint8;\n  token[0xcd] = format.uint16;\n  token[0xce] = format.uint32;\n  token[0xcf] = format.uint64;\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = format.int8;\n  token[0xd1] = format.int16;\n  token[0xd2] = format.int32;\n  token[0xd3] = format.int64;\n\n  // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n  token[0xd4] = fix(1, format.ext);\n  token[0xd5] = fix(2, format.ext);\n  token[0xd6] = fix(4, format.ext);\n  token[0xd7] = fix(8, format.ext);\n  token[0xd8] = fix(16, format.ext);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = flex(format.uint8, format.str);\n  token[0xda] = flex(format.uint16, format.str);\n  token[0xdb] = flex(format.uint32, format.str);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = flex(format.uint16, format.array);\n  token[0xdd] = flex(format.uint32, format.array);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = flex(format.uint16, format.map);\n  token[0xdf] = flex(format.uint32, format.map);\n\n  // negative fixint -- 0xe0 - 0xff\n  for (i = 0xe0; i <= 0xff; i++) {\n    token[i] = constant(i - 0x100);\n  }\n\n  return token;\n}\n\nfunction init_useraw(format) {\n  var i;\n  var token = init_token(format).slice();\n\n  // raw 8 -- 0xd9\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  token[0xd9] = token[0xc4];\n  token[0xda] = token[0xc5];\n  token[0xdb] = token[0xc6];\n\n  // fixraw -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.bin);\n  }\n\n  return token;\n}\n\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nfunction flex(lenFunc, decodeFunc) {\n  return function(decoder) {\n    var len = lenFunc(decoder);\n    return decodeFunc(decoder, len);\n  };\n}\n\nfunction fix(len, method) {\n  return function(decoder) {\n    return method(decoder, len);\n  };\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/read-token.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/write-core.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/write-core.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// write-core.js\n\nvar ExtBuffer = __webpack_require__(/*! ./ext-buffer */ \"./node_modules/msgpack-lite/lib/ext-buffer.js\").ExtBuffer;\nvar ExtPacker = __webpack_require__(/*! ./ext-packer */ \"./node_modules/msgpack-lite/lib/ext-packer.js\");\nvar WriteType = __webpack_require__(/*! ./write-type */ \"./node_modules/msgpack-lite/lib/write-type.js\");\nvar CodecBase = __webpack_require__(/*! ./codec-base */ \"./node_modules/msgpack-lite/lib/codec-base.js\");\n\nCodecBase.install({\n  addExtPacker: addExtPacker,\n  getExtPacker: getExtPacker,\n  init: init\n});\n\nexports.preset = init.call(CodecBase.preset);\n\nfunction getEncoder(options) {\n  var writeType = WriteType.getWriteType(options);\n  return encode;\n\n  function encode(encoder, value) {\n    var func = writeType[typeof value];\n    if (!func) throw new Error(\"Unsupported type \\\"\" + (typeof value) + \"\\\": \" + value);\n    func(encoder, value);\n  }\n}\n\nfunction init() {\n  var options = this.options;\n  this.encode = getEncoder(options);\n\n  if (options && options.preset) {\n    ExtPacker.setExtPackers(this);\n  }\n\n  return this;\n}\n\nfunction addExtPacker(etype, Class, packer) {\n  packer = CodecBase.filter(packer);\n  var name = Class.name;\n  if (name && name !== \"Object\") {\n    var packers = this.extPackers || (this.extPackers = {});\n    packers[name] = extPacker;\n  } else {\n    // fallback for IE\n    var list = this.extEncoderList || (this.extEncoderList = []);\n    list.unshift([Class, extPacker]);\n  }\n\n  function extPacker(value) {\n    if (packer) value = packer(value);\n    return new ExtBuffer(value, etype);\n  }\n}\n\nfunction getExtPacker(value) {\n  var packers = this.extPackers || (this.extPackers = {});\n  var c = value.constructor;\n  var e = c && c.name && packers[c.name];\n  if (e) return e;\n\n  // fallback for IE\n  var list = this.extEncoderList || (this.extEncoderList = []);\n  var len = list.length;\n  for (var i = 0; i < len; i++) {\n    var pair = list[i];\n    if (c === pair[0]) return pair[1];\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/write-core.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/write-token.js":
/*!******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/write-token.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// write-token.js\n\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\");\nvar Int64Buffer = __webpack_require__(/*! int64-buffer */ \"./node_modules/int64-buffer/int64-buffer.js\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nvar uint8 = __webpack_require__(/*! ./write-uint8 */ \"./node_modules/msgpack-lite/lib/write-uint8.js\").uint8;\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar Buffer = Bufferish.global;\nvar IS_BUFFER_SHIM = Bufferish.hasBuffer && (\"TYPED_ARRAY_SUPPORT\" in Buffer);\nvar NO_TYPED_ARRAY = IS_BUFFER_SHIM && !Buffer.TYPED_ARRAY_SUPPORT;\nvar Buffer_prototype = Bufferish.hasBuffer && Buffer.prototype || {};\n\nexports.getWriteToken = getWriteToken;\n\nfunction getWriteToken(options) {\n  if (options && options.uint8array) {\n    return init_uint8array();\n  } else if (NO_TYPED_ARRAY || (Bufferish.hasBuffer && options && options.safe)) {\n    return init_safe();\n  } else {\n    return init_token();\n  }\n}\n\nfunction init_uint8array() {\n  var token = init_token();\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, writeFloatBE);\n  token[0xcb] = writeN(0xcb, 8, writeDoubleBE);\n\n  return token;\n}\n\n// Node.js and browsers with TypedArray\n\nfunction init_token() {\n  // (immediate values)\n  // positive fixint -- 0x00 - 0x7f\n  // nil -- 0xc0\n  // false -- 0xc2\n  // true -- 0xc3\n  // negative fixint -- 0xe0 - 0xff\n  var token = uint8.slice();\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = write1(0xc4);\n  token[0xc5] = write2(0xc5);\n  token[0xc6] = write4(0xc6);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = write1(0xc7);\n  token[0xc8] = write2(0xc8);\n  token[0xc9] = write4(0xc9);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, (Buffer_prototype.writeFloatBE || writeFloatBE), true);\n  token[0xcb] = writeN(0xcb, 8, (Buffer_prototype.writeDoubleBE || writeDoubleBE), true);\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = write1(0xcc);\n  token[0xcd] = write2(0xcd);\n  token[0xce] = write4(0xce);\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = write1(0xd0);\n  token[0xd1] = write2(0xd1);\n  token[0xd2] = write4(0xd2);\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = write1(0xd9);\n  token[0xda] = write2(0xda);\n  token[0xdb] = write4(0xdb);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = write2(0xdc);\n  token[0xdd] = write4(0xdd);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = write2(0xde);\n  token[0xdf] = write4(0xdf);\n\n  return token;\n}\n\n// safe mode: for old browsers and who needs asserts\n\nfunction init_safe() {\n  // (immediate values)\n  // positive fixint -- 0x00 - 0x7f\n  // nil -- 0xc0\n  // false -- 0xc2\n  // true -- 0xc3\n  // negative fixint -- 0xe0 - 0xff\n  var token = uint8.slice();\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = writeN(0xc4, 1, Buffer.prototype.writeUInt8);\n  token[0xc5] = writeN(0xc5, 2, Buffer.prototype.writeUInt16BE);\n  token[0xc6] = writeN(0xc6, 4, Buffer.prototype.writeUInt32BE);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = writeN(0xc7, 1, Buffer.prototype.writeUInt8);\n  token[0xc8] = writeN(0xc8, 2, Buffer.prototype.writeUInt16BE);\n  token[0xc9] = writeN(0xc9, 4, Buffer.prototype.writeUInt32BE);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, Buffer.prototype.writeFloatBE);\n  token[0xcb] = writeN(0xcb, 8, Buffer.prototype.writeDoubleBE);\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = writeN(0xcc, 1, Buffer.prototype.writeUInt8);\n  token[0xcd] = writeN(0xcd, 2, Buffer.prototype.writeUInt16BE);\n  token[0xce] = writeN(0xce, 4, Buffer.prototype.writeUInt32BE);\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = writeN(0xd0, 1, Buffer.prototype.writeInt8);\n  token[0xd1] = writeN(0xd1, 2, Buffer.prototype.writeInt16BE);\n  token[0xd2] = writeN(0xd2, 4, Buffer.prototype.writeInt32BE);\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = writeN(0xd9, 1, Buffer.prototype.writeUInt8);\n  token[0xda] = writeN(0xda, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdb] = writeN(0xdb, 4, Buffer.prototype.writeUInt32BE);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = writeN(0xdc, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdd] = writeN(0xdd, 4, Buffer.prototype.writeUInt32BE);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = writeN(0xde, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdf] = writeN(0xdf, 4, Buffer.prototype.writeUInt32BE);\n\n  return token;\n}\n\nfunction write1(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(2);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset] = value;\n  };\n}\n\nfunction write2(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(3);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset++] = value >>> 8;\n    buffer[offset] = value;\n  };\n}\n\nfunction write4(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(5);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset++] = value >>> 24;\n    buffer[offset++] = value >>> 16;\n    buffer[offset++] = value >>> 8;\n    buffer[offset] = value;\n  };\n}\n\nfunction writeN(type, len, method, noAssert) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(len + 1);\n    encoder.buffer[offset++] = type;\n    method.call(encoder.buffer, value, offset, noAssert);\n  };\n}\n\nfunction writeUInt64BE(value, offset) {\n  new Uint64BE(this, offset, value);\n}\n\nfunction writeInt64BE(value, offset) {\n  new Int64BE(this, offset, value);\n}\n\nfunction writeFloatBE(value, offset) {\n  ieee754.write(this, value, offset, false, 23, 4);\n}\n\nfunction writeDoubleBE(value, offset) {\n  ieee754.write(this, value, offset, false, 52, 8);\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/write-token.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/write-type.js":
/*!*****************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/write-type.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// write-type.js\n\nvar IS_ARRAY = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\nvar Int64Buffer = __webpack_require__(/*! int64-buffer */ \"./node_modules/int64-buffer/int64-buffer.js\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nvar Bufferish = __webpack_require__(/*! ./bufferish */ \"./node_modules/msgpack-lite/lib/bufferish.js\");\nvar BufferProto = __webpack_require__(/*! ./bufferish-proto */ \"./node_modules/msgpack-lite/lib/bufferish-proto.js\");\nvar WriteToken = __webpack_require__(/*! ./write-token */ \"./node_modules/msgpack-lite/lib/write-token.js\");\nvar uint8 = __webpack_require__(/*! ./write-uint8 */ \"./node_modules/msgpack-lite/lib/write-uint8.js\").uint8;\nvar ExtBuffer = __webpack_require__(/*! ./ext-buffer */ \"./node_modules/msgpack-lite/lib/ext-buffer.js\").ExtBuffer;\n\nvar HAS_UINT8ARRAY = (\"undefined\" !== typeof Uint8Array);\nvar HAS_MAP = (\"undefined\" !== typeof Map);\n\nvar extmap = [];\nextmap[1] = 0xd4;\nextmap[2] = 0xd5;\nextmap[4] = 0xd6;\nextmap[8] = 0xd7;\nextmap[16] = 0xd8;\n\nexports.getWriteType = getWriteType;\n\nfunction getWriteType(options) {\n  var token = WriteToken.getWriteToken(options);\n  var useraw = options && options.useraw;\n  var binarraybuffer = HAS_UINT8ARRAY && options && options.binarraybuffer;\n  var isBuffer = binarraybuffer ? Bufferish.isArrayBuffer : Bufferish.isBuffer;\n  var bin = binarraybuffer ? bin_arraybuffer : bin_buffer;\n  var usemap = HAS_MAP && options && options.usemap;\n  var map = usemap ? map_to_map : obj_to_map;\n\n  var writeType = {\n    \"boolean\": bool,\n    \"function\": nil,\n    \"number\": number,\n    \"object\": (useraw ? object_raw : object),\n    \"string\": _string(useraw ? raw_head_size : str_head_size),\n    \"symbol\": nil,\n    \"undefined\": nil\n  };\n\n  return writeType;\n\n  // false -- 0xc2\n  // true -- 0xc3\n  function bool(encoder, value) {\n    var type = value ? 0xc3 : 0xc2;\n    token[type](encoder, value);\n  }\n\n  function number(encoder, value) {\n    var ivalue = value | 0;\n    var type;\n    if (value !== ivalue) {\n      // float 64 -- 0xcb\n      type = 0xcb;\n      token[type](encoder, value);\n      return;\n    } else if (-0x20 <= ivalue && ivalue <= 0x7F) {\n      // positive fixint -- 0x00 - 0x7f\n      // negative fixint -- 0xe0 - 0xff\n      type = ivalue & 0xFF;\n    } else if (0 <= ivalue) {\n      // uint 8 -- 0xcc\n      // uint 16 -- 0xcd\n      // uint 32 -- 0xce\n      type = (ivalue <= 0xFF) ? 0xcc : (ivalue <= 0xFFFF) ? 0xcd : 0xce;\n    } else {\n      // int 8 -- 0xd0\n      // int 16 -- 0xd1\n      // int 32 -- 0xd2\n      type = (-0x80 <= ivalue) ? 0xd0 : (-0x8000 <= ivalue) ? 0xd1 : 0xd2;\n    }\n    token[type](encoder, ivalue);\n  }\n\n  // uint 64 -- 0xcf\n  function uint64(encoder, value) {\n    var type = 0xcf;\n    token[type](encoder, value.toArray());\n  }\n\n  // int 64 -- 0xd3\n  function int64(encoder, value) {\n    var type = 0xd3;\n    token[type](encoder, value.toArray());\n  }\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  // fixstr -- 0xa0 - 0xbf\n  function str_head_size(length) {\n    return (length < 32) ? 1 : (length <= 0xFF) ? 2 : (length <= 0xFFFF) ? 3 : 5;\n  }\n\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  // fixraw -- 0xa0 - 0xbf\n  function raw_head_size(length) {\n    return (length < 32) ? 1 : (length <= 0xFFFF) ? 3 : 5;\n  }\n\n  function _string(head_size) {\n    return string;\n\n    function string(encoder, value) {\n      // prepare buffer\n      var length = value.length;\n      var maxsize = 5 + length * 3;\n      encoder.offset = encoder.reserve(maxsize);\n      var buffer = encoder.buffer;\n\n      // expected header size\n      var expected = head_size(length);\n\n      // expected start point\n      var start = encoder.offset + expected;\n\n      // write string\n      length = BufferProto.write.call(buffer, value, start);\n\n      // actual header size\n      var actual = head_size(length);\n\n      // move content when needed\n      if (expected !== actual) {\n        var targetStart = start + actual - expected;\n        var end = start + length;\n        BufferProto.copy.call(buffer, buffer, targetStart, start, end);\n      }\n\n      // write header\n      var type = (actual === 1) ? (0xa0 + length) : (actual <= 3) ? (0xd7 + actual) : 0xdb;\n      token[type](encoder, length);\n\n      // move cursor\n      encoder.offset += length;\n    }\n  }\n\n  function object(encoder, value) {\n    // null\n    if (value === null) return nil(encoder, value);\n\n    // Buffer\n    if (isBuffer(value)) return bin(encoder, value);\n\n    // Array\n    if (IS_ARRAY(value)) return array(encoder, value);\n\n    // int64-buffer objects\n    if (Uint64BE.isUint64BE(value)) return uint64(encoder, value);\n    if (Int64BE.isInt64BE(value)) return int64(encoder, value);\n\n    // ext formats\n    var packer = encoder.codec.getExtPacker(value);\n    if (packer) value = packer(value);\n    if (value instanceof ExtBuffer) return ext(encoder, value);\n\n    // plain old Objects or Map\n    map(encoder, value);\n  }\n\n  function object_raw(encoder, value) {\n    // Buffer\n    if (isBuffer(value)) return raw(encoder, value);\n\n    // others\n    object(encoder, value);\n  }\n\n  // nil -- 0xc0\n  function nil(encoder, value) {\n    var type = 0xc0;\n    token[type](encoder, value);\n  }\n\n  // fixarray -- 0x90 - 0x9f\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  function array(encoder, value) {\n    var length = value.length;\n    var type = (length < 16) ? (0x90 + length) : (length <= 0xFFFF) ? 0xdc : 0xdd;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    for (var i = 0; i < length; i++) {\n      encode(encoder, value[i]);\n    }\n  }\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  function bin_buffer(encoder, value) {\n    var length = value.length;\n    var type = (length < 0xFF) ? 0xc4 : (length <= 0xFFFF) ? 0xc5 : 0xc6;\n    token[type](encoder, length);\n    encoder.send(value);\n  }\n\n  function bin_arraybuffer(encoder, value) {\n    bin_buffer(encoder, new Uint8Array(value));\n  }\n\n  // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  function ext(encoder, value) {\n    var buffer = value.buffer;\n    var length = buffer.length;\n    var type = extmap[length] || ((length < 0xFF) ? 0xc7 : (length <= 0xFFFF) ? 0xc8 : 0xc9);\n    token[type](encoder, length);\n    uint8[value.type](encoder);\n    encoder.send(buffer);\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  function obj_to_map(encoder, value) {\n    var keys = Object.keys(value);\n    var length = keys.length;\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    keys.forEach(function(key) {\n      encode(encoder, key);\n      encode(encoder, value[key]);\n    });\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  function map_to_map(encoder, value) {\n    if (!(value instanceof Map)) return obj_to_map(encoder, value);\n\n    var length = value.size;\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    value.forEach(function(val, key, m) {\n      encode(encoder, key);\n      encode(encoder, val);\n    });\n  }\n\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  // fixraw -- 0xa0 - 0xbf\n  function raw(encoder, value) {\n    var length = value.length;\n    var type = (length < 32) ? (0xa0 + length) : (length <= 0xFFFF) ? 0xda : 0xdb;\n    token[type](encoder, length);\n    encoder.send(value);\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/write-type.js?");

/***/ }),

/***/ "./node_modules/msgpack-lite/lib/write-uint8.js":
/*!******************************************************!*\
  !*** ./node_modules/msgpack-lite/lib/write-uint8.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// write-unit8.js\n\nvar constant = exports.uint8 = new Array(256);\n\nfor (var i = 0x00; i <= 0xFF; i++) {\n  constant[i] = write0(i);\n}\n\nfunction write0(type) {\n  return function(encoder) {\n    var offset = encoder.reserve(1);\n    encoder.buffer[offset] = type;\n  };\n}\n\n\n//# sourceURL=webpack:///./node_modules/msgpack-lite/lib/write-uint8.js?");

/***/ }),

/***/ "./node_modules/utf8/utf8.js":
/*!***********************************!*\
  !*** ./node_modules/utf8/utf8.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}( false ? undefined : exports));\n\n\n//# sourceURL=webpack:///./node_modules/utf8/utf8.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./scene.tsx":
/*!*******************!*\
  !*** ./scene.tsx ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HouseScene; });\n/* harmony import */ var metaverse_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! metaverse-api */ \"./node_modules/metaverse-api/lib/index.js\");\n/* harmony import */ var metaverse_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(metaverse_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var eth_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eth-connect */ \"./node_modules/eth-connect/dist/index.js\");\n/* harmony import */ var eth_connect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eth_connect__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst jsonInterface = __webpack_require__(/*! ./abi.json */ \"./abi.json\");\nconst Tile = (props) => {\n    return (metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"box\", { id: \"caja\", position: props.position, scale: { x: 2, y: 0.2, z: 2 }, color: \"#228B22\" }));\n};\nclass HouseScene extends metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"ScriptableScene\"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isDoorClosed: false,\n            rentMeText: \"Rent me!\"\n        };\n    }\n    async sceneDidMount() {\n        const provider = await this.getEthereumProvider();\n        const requestManager = new eth_connect__WEBPACK_IMPORTED_MODULE_1__[\"RequestManager\"](provider);\n        const factory = new eth_connect__WEBPACK_IMPORTED_MODULE_1__[\"ContractFactory\"](requestManager, jsonInterface);\n        const instance = await factory.at('0x9d2cca961249716f0a1dd805f7bc9e09a05e9c5c');\n        this.eventSubscriber.on('door_click', () => {\n            this.setState({ isDoorClosed: !this.state.isDoorClosed });\n        });\n        this.subscribeTo('click', async () => {\n            try {\n                const address = '0xaF6F0317B2B7d4eb4D1A94403c94Bf4F091645A1';\n                const e = await instance.payRent({ from: address, value: 20 });\n                console.log(e);\n            }\n            catch (e) {\n                console.log(e);\n            }\n            console.log(\"rent Click\");\n            this.setState({ rentMeText: \"Gone\" });\n        });\n    }\n    async render() {\n        const tiles = [];\n        [-6, -5, -4, -3, -2, -1, 0, 1, 2].forEach(x => {\n            [22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6].forEach(z => {\n                tiles.push(metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](Tile, { position: { x: x + 2, y: -0.1, z: z + 2 } }));\n            });\n        });\n        const doorRotation = {\n            x: 0,\n            y: this.state.isDoorClosed ? 0 : 90,\n            z: 0\n        };\n        return (metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"scene\", { position: { x: 5, y: 0, z: 5 }, scale: 0.999 },\n            tiles,\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"entity\", { rotation: doorRotation, transition: { rotation: { duration: 1000, timing: 'ease-in' } } },\n                metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"box\", { id: \"door\", scale: { x: 1, y: 2, z: 0.05 }, position: { x: 0.5, y: 1, z: 0 }, color: \"#00FF00\" })),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: 0, y: -7, z: 0 }, scale: { x: 5, y: 5, z: 5 }, src: \"models/model.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: 0, y: -7, z: 0 }, scale: { x: 5, y: 5, z: 5 }, src: \"models/Inn.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: -5, y: 0, z: 23 }, scale: { x: 0.5, y: 0.5, z: 0.5 }, src: \"models/ElmTree.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: -3, y: 0, z: 23 }, scale: { x: 0.35, y: 0.35, z: 0.35 }, src: \"models/BighornSheep.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: -5, y: 2, z: 20 }, scale: { x: 1, y: 1, z: 1 }, src: \"models/CUPIC_WHEELBARROW.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: -5, y: 0, z: 20 }, scale: { x: 0.5, y: 0.5, z: 0.5 }, src: \"models/ElmTree.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: -5, y: 10, z: 20 }, scale: { x: 1, y: 1, z: 1 }, src: \"models/Rainbow_01.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: 3.5, y: 0, z: 23 }, scale: { x: 0.5, y: 0.5, z: 0.5 }, src: \"models/Diner.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"gltf-model\", { position: { x: 3.5, y: 1.0, z: 23 }, scale: { x: 0.025, y: 0.025, z: 0.025 }, src: \"models/Hamburger_01.gltf\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"material\", { id: \"transparent\", alpha: 1 }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"box\", { scale: { x: 4, y: 1, z: 0.05 }, position: { x: -2, y: 3.8, z: 1.5 }, color: \"#D3D3D3\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"text\", { height: 10, opacity: 1, position: { x: -2, y: 3.8, z: 1 }, scale: { x: 5, y: 5, z: 5 }, value: this.state.rentMeText, fontSize: 90, color: \"white\" }),\n            metaverse_api__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"box\", { id: \"rent\", material: \"#transparent\", scale: { x: 4, y: 1, z: 1 }, position: { x: -2, y: 4, z: 1.5 } })));\n    }\n}\n\n\n//# sourceURL=webpack:///./scene.tsx?");

/***/ })

/******/ })));